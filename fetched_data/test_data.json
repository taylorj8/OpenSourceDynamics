[
    {
        "number": 5689,
        "title": "Update to Dart `1.20.0-dev.1.0`.",
        "author": "Phil Quitslund",
        "state": "MERGED",
        "closedAt": "2016-09-08T20:14:08Z",
        "createdAt": "2016-08-31T21:41:53Z",
        "comments": [
            {
                "author": "Hixie",
                "bodyText": "Most of those errors are errors in the analyzer, not the code. The fifth is the only one that I think might be legit, and even that one is a bit dubious IMHO.",
                "createdAt": "2016-08-31T22:26:01Z"
            },
            {
                "author": "Hixie",
                "bodyText": "@leafpetersen help! :-)",
                "createdAt": "2016-08-31T22:43:07Z"
            },
            {
                "author": "pq",
                "bodyText": "I was just going to tag Leaf.  You beat me to it! \ud83d\ude04",
                "createdAt": "2016-08-31T22:45:22Z"
            },
            {
                "author": "leafpetersen",
                "bodyText": "Taking a look.  What version are you updating from?",
                "createdAt": "2016-08-31T23:14:49Z"
            },
            {
                "author": "pq",
                "bodyText": "Thanks!\n1.19.0-dev.5.0",
                "createdAt": "2016-08-31T23:16:34Z"
            },
            {
                "author": "leafpetersen",
                "bodyText": "Okay, I think all of these are places where strong mode errors have been integrated into the core analyzer.  We used to just issue generic STRONG_MODE_STATIC_TYPE_ERROR messages for a number of issues.  We've now integrated them into the core analyzer, so you now get the actual precise error.  So for example, for the first one, you now get a  MAP_VALUE_TYPE_NOT_ASSIGNABLE.\nUnfortunately, you guys have been filtering based on that general STRONG_MODE_STATIC_TYPE_ERROR.\nAll of these except the 5th and the last error fall under the general category of issues that we identified in the Flutter Strong Mode doc as something that we'd like to have a way to support, but we don't converged on a language level solution yet.\nFor the callback cases, you can avoid the error by making the cast local:\n     gestures: <Type, GestureRecognizerFactory>{\n        ImmediateMultiDragGestureRecognizer: (GestureRecognizer _recognizer) {\n         ImmediateMultiDragGestureRecognizer recognizer = _recognizer; \n          return (recognizer ??= new ImmediateMultiDragGestureRecognizer())\n            ..onStart = _handleOnStart;\n        }\n      },\nThis is essentially the code that we would most likely end up having the compiler generate for you if we supported this pattern.",
                "createdAt": "2016-09-01T00:12:21Z"
            },
            {
                "author": "abarth",
                "bodyText": "@leafpetersen How do you suggest we move forward here?",
                "createdAt": "2016-09-01T00:25:52Z"
            },
            {
                "author": "leafpetersen",
                "bodyText": "I don't know what options are available to you in terms of just suppressing the errors - @pq will know better there.\nIn terms of fixing the errors:\nThe fifth and last errors I don't anticipate ever being strong mode compatible.  You can put a cast in there for now, but at least the fifth one will eventually start failing when the language moves to 2.0.  Using a Map<dynamic, dynamic> where a Map<String, List<String>> is expected breaks all of the assumptions that strong mode is trying to enforce to make AOT better.\nThe second and third errors I could look into providing some experimental support for.  Not sure whether that fits your timeline for rolling, but I don't think it would take me too long to implement that.  Alternatively you can cast them, which will work for now.\nA solution for the rest of the errors are probably a bit more work, and it's not clear that a solution that we put in now will be the final solution.  @jmesserly has started experimental work on supporting covariant overrides, and I have proposed to use a similar mechanism for these cases: basically you would annotate the parameter and the compiler would automatically generate the code that I wrote above.  It's possible that we could get something out the door for you guys to prototype in a week or two, but in the meantime you would either need to work around it using the pattern that I wrote above, or else by suppressing the individual errors in some way.",
                "createdAt": "2016-09-01T00:57:06Z"
            },
            {
                "author": "abarth",
                "bodyText": "My understanding previously was that the Dart team was committed to working with us to evolving strong mode and the Flutter codebase to be compatible and that we'd made changes to each that were mutually agreeable.  With this change to the SDK, it seems like you're unilaterally forcing changes in the Flutter codebase (i.e., that are not mutually agreeable), contrary to that understanding.\nPerhaps a better path forward would be to revert whatever changes were made to the analyzer that have caused this regression and return to that agreed operating mode.",
                "createdAt": "2016-09-01T01:04:47Z"
            },
            {
                "author": "leafpetersen",
                "bodyText": "We are very committed to working with the Flutter team to make the Dart language work well for their use cases.  We, and I personally, have devoted quite a bit of time this quarter towards making this happen, and I am personally very enthusiastic about having this kind of large scale feedback on the language early on.  A couple of things we should be clear on though, to be sure that we're on the same page.\n\n\nThis is not a strong mode breaking change. This is Flutter relying on an implementation detail of the analyzer error codes in order to suppress existing error messages.  Implementation details like that are not part of the public API, and can and will change.  I am happy to work with the Flutter team to try to accommodate their needs, but we cannot maintain anything close to the kind of velocity that we need to have if we have to run any change to our implementation by the Flutter team, and revert any change that touches on Flutter.\n\n\nStrong mode has made, and will continue in the future to make, actual breaking changes as we move towards Dart 2.0.  Some of these breaking changes will affect Flutter, just as they currently affect large numbers of other users inside of google.  Sometimes those breaking changes will require changes to user code.  Sometimes the feedback we get from those breaking changes will lead us to back out of, or change our approach to, the breaking change.  None of this process is instantaneous, and if you are committed to rolling in new versions of strong mode frequently, you will certainly have to change code occasionally (hopefully usually for the better), and it is highly likely that you will sometimes need to work around issues.  The position that you should be able to roll strong mode weekly and never have to change your code is not tenable, and no commitment to such a thing has been made by, or communicated to, me.",
                "createdAt": "2016-09-01T05:15:49Z"
            },
            {
                "author": "abarth",
                "bodyText": "This is not a strong mode breaking change. This is Flutter relying on an implementation detail of the analyzer error codes in order to suppress existing error messages.\n\nI'm not sure I understand.  Are you saying that the strong_mode_static_type_error field in .analysis_options is considered an implementation detail of the analyzer?  My understanding was that the .analysis_options file was an appropriate and supported way to configure the analyzer.  For example, the .analysis_options file is discussed extensively in https://pub.dartlang.org/packages/analyzer.\n\nwe cannot maintain anything close to the kind of velocity that we need to have if we have to run any change to our implementation by the Flutter team, and revert any change that touches on Flutter.\n\nThat's not what I'm asking for.\n\nThe position that you should be able to roll strong mode weekly and never have to change your code is not tenable, and no commitment to such a thing has been made by, or communicated to, me.\n\nThat's also not my position.",
                "createdAt": "2016-09-01T05:28:04Z"
            },
            {
                "author": "leafpetersen",
                "bodyText": "I'm not sure I understand. Are you saying that the strong_mode_static_type_error field in .analysis_options is considered an implementation detail of the analyzer? My understanding was that the .analysis_options file was an appropriate and supported way to configure the analyzer. For example, the .analysis_options file is discussed extensively in https://pub.dartlang.org/packages/analyzer.\n\nThe use of that file to refer to specific error codes is, as far as I know, undocumented.  I'll defer to @pq and @bwilkerson as to whether or not that feature is considered part of the stable API or not.  I sincerely hope not, since I think it's very bad for the analyzer in general if changing an internal error code is a breaking change, but again, I'll defer to them.\nFor the specific case of strong mode, this is definitely an area that we will make changes in.   I basically don't care too much to argue over whether those changes are considered breaking or not.  To provide concrete context: the error code that you were relying on was a catch-all error code for a bunch of errors that we emitted in a separate pass that we tacked on to the analyzer. That catch-all category happened to include mostly things that you wanted to ignore (plus a small number of errors that you didn't really want to ignore and which were hence collateral damage).  That pass is in the process of going away for the sake of code health, performance, and improved user experience.  We are now emitting better, more precise error messages, and we have less duplicated code.  This is an important part of us moving strong mode forward and integrating it into the language.\nI understand that this is causing you some pain here, since you were relying on that organization of the errors for your filtering, and I'm willing to work with you to get to a good resolution.  I'm not in general ruling out temporarily reverting changes pending a resolution, but I will only do that very reluctantly - it has a very bad effect on our velocity, and our willingness to make changes in general.  This is particularly true if, as I understand is the case, Flutter is proposing to roll weekly.\nIn this particular case, I see a small number of errors, a few of which are things which you will at some point have to address (and can fix for now with casts), and the rest of which are things that we are working on at the language level.  The latter cases are, I believe, in non-API facing code where a small temporary work-around will address the issue pending a resolution.  I would suggest that the simplest and fastest solution would be to modify your code as I've suggested, with a TODO referencing the language changes.  Feel free to file a language bug and assign it to me.  I can commit to prioritizing getting you a prototype solution, but a final solution with syntax depends on buy in from the full language team.\nIt's also possible that @pq can suggest an alternative path to enabling you guys to just ignore these errors - I know there are a number of paths to doing so in the analyzer currently, but I don't know how all of these play into the Flutter story.",
                "createdAt": "2016-09-01T16:43:47Z"
            },
            {
                "author": "Hixie",
                "bodyText": "I think there was some miscommunication above. We have no problem churning the analysis file or improving the code by adding annotations or fixing bugs. The only thing we want to avoid is making the code worse, e.g. by losing type annotations we have today.\nDo you happen to know what the codes are that replaced the old code so that we can update the analysis options file to ignore the new codes instead, until there's a feature we can use to help the analyzer?\nSpecifically, these errors are IMHO not errors and we should either have annotations to help the analyzer understand they're correct code, or we should currently ignore them until such annotations or language features are available:\n[warning] The element type '(ImmediateMultiDragGestureRecognizer) \u2192 ImmediateMultiDragGestureRecognizer' cannot be assigned to the map value type 'GestureRecognizerFactory(GestureRecognizer) \u2192 GestureRecognizer' (examples/flutter_gallery/lib/demo/animation_demo.dart, line 187, col 46)\n[warning] The element type '(ImmediateMultiDragGestureRecognizer) \u2192 ImmediateMultiDragGestureRecognizer' cannot be assigned to the map value type 'GestureRecognizerFactory(GestureRecognizer) \u2192 GestureRecognizer' (examples/flutter_gallery/lib/demo/animation_demo.dart, line 353, col 46)\n[warning] The element type 'PopupMenuDivider' cannot be assigned to the list type 'PopupMenuEntry<LeaveBehindDemoAction>' (examples/flutter_gallery/lib/demo/leave_behind_demo.dart, line 146, col 15)\n[warning] The element type 'PopupMenuDivider' cannot be assigned to the list type 'PopupMenuEntry<String>' (examples/flutter_gallery/lib/demo/menu_demo.dart, line 143, col 17)\n[warning] A value of type '(PanGestureRecognizer) \u2192 PanGestureRecognizer' cannot be assigned to a variable of type 'GestureRecognizerFactory(GestureRecognizer) \u2192 GestureRecognizer' (packages/flutter/lib/src/widgets/gesture_detector.dart, line 284, col 40)\n[warning] A value of type '(ScaleGestureRecognizer) \u2192 ScaleGestureRecognizer' cannot be assigned to a variable of type 'GestureRecognizerFactory(GestureRecognizer) \u2192 GestureRecognizer' (packages/flutter/lib/src/widgets/gesture_detector.dart, line 295, col 42)\n[warning] A value of type '(HorizontalDragGestureRecognizer) \u2192 HorizontalDragGestureRecognizer' cannot be assigned to a variable of type 'GestureRecognizerFactory(GestureRecognizer) \u2192 GestureRecognizer' (packages/flutter/lib/src/widgets/gesture_detector.dart, line 269, col 51)\n[warning] A value of type '(DoubleTapGestureRecognizer) \u2192 DoubleTapGestureRecognizer' cannot be assigned to a variable of type 'GestureRecognizerFactory(GestureRecognizer) \u2192 GestureRecognizer' (packages/flutter/lib/src/widgets/gesture_detector.dart, line 236, col 46)\n[warning] A value of type '(LongPressGestureRecognizer) \u2192 LongPressGestureRecognizer' cannot be assigned to a variable of type 'GestureRecognizerFactory(GestureRecognizer) \u2192 GestureRecognizer' (packages/flutter/lib/src/widgets/gesture_detector.dart, line 243, col 46)\n[warning] A value of type '(VerticalDragGestureRecognizer) \u2192 VerticalDragGestureRecognizer' cannot be assigned to a variable of type 'GestureRecognizerFactory(GestureRecognizer) \u2192 GestureRecognizer' (packages/flutter/lib/src/widgets/gesture_detector.dart, line 254, col 49)\n[warning] A value of type '(TapGestureRecognizer) \u2192 TapGestureRecognizer' cannot be assigned to a variable of type 'GestureRecognizerFactory(GestureRecognizer) \u2192 GestureRecognizer' (packages/flutter/lib/src/widgets/gesture_detector.dart, line 226, col 40)\n[warning] The element type '(HorizontalDragGestureRecognizer) \u2192 HorizontalDragGestureRecognizer' cannot be assigned to the map value type 'GestureRecognizerFactory(GestureRecognizer) \u2192 GestureRecognizer' (packages/flutter/lib/src/widgets/scrollable.dart, line 706, col 46)\n[warning] The element type '(VerticalDragGestureRecognizer) \u2192 VerticalDragGestureRecognizer' cannot be assigned to the map value type 'GestureRecognizerFactory(GestureRecognizer) \u2192 GestureRecognizer' (packages/flutter/lib/src/widgets/scrollable.dart, line 696, col 44)\n[warning] The return type 'State<StatefulWidget>' is not a 'T', as defined by the method 'currentState'. (packages/flutter/lib/src/widgets/unique_widget.dart, line 29, col 12)\n[warning] The element type '(GetHealth) \u2192 Future<Health>' cannot be assigned to the map value type 'CommandHandlerCallback(Command) \u2192 Future<Result>' (packages/flutter_driver/lib/src/extension.dart, line 63, col 21)\n[warning] The element type '(Tap) \u2192 Future<TapResult>' cannot be assigned to the map value type 'CommandHandlerCallback(Command) \u2192 Future<Result>' (packages/flutter_driver/lib/src/extension.dart, line 64, col 14)\n[warning] The element type '(ScrollIntoView) \u2192 Future<ScrollResult>' cannot be assigned to the map value type 'CommandHandlerCallback(Command) \u2192 Future<Result>' (packages/flutter_driver/lib/src/extension.dart, line 67, col 25)\n[warning] The element type '(Scroll) \u2192 Future<ScrollResult>' cannot be assigned to the map value type 'CommandHandlerCallback(Command) \u2192 Future<Result>' (packages/flutter_driver/lib/src/extension.dart, line 66, col 17)\n[warning] The element type '(GetText) \u2192 Future<GetTextResult>' cannot be assigned to the map value type 'CommandHandlerCallback(Command) \u2192 Future<Result>' (packages/flutter_driver/lib/src/extension.dart, line 65, col 19)\n[warning] The element type '(WaitFor) \u2192 Future<WaitForResult>' cannot be assigned to the map value type 'CommandHandlerCallback(Command) \u2192 Future<Result>' (packages/flutter_driver/lib/src/extension.dart, line 70, col 18)\n[warning] The element type '(SubmitInputText) \u2192 Future<SubmitInputTextResult>' cannot be assigned to the map value type 'CommandHandlerCallback(Command) \u2192 Future<Result>' (packages/flutter_driver/lib/src/extension.dart, line 69, col 26)\n[warning] The element type '(SetInputText) \u2192 Future<SetInputTextResult>' cannot be assigned to the map value type 'CommandHandlerCallback(Command) \u2192 Future<Result>' (packages/flutter_driver/lib/src/extension.dart, line 68, col 23)\n\nFor the following error, I'm not really sure I understand what you want us to do:\n[warning] The return type 'SynchronousFuture<Map>' is not a 'Future<Map<String, List<String>>>', as defined by the method '_manifestParser'. (packages/flutter/lib/src/services/image_resolution.dart, line 147, col 12)\n\nIn this specific case, we have a JSON-encoded string which we need to convert to a Map<String, List<String>>. We want the code to throw as early as possible in checked mode if the JSON doesn't fit this pattern; in release mode behaviour can be undefined (but shouldn't allow arbitrary code execution). We want this to be efficient, so for example we don't want to have to get the dynamic->dynamic map back from JSON.decode and then copy all the data just to get the type arguments on the instances right.\nToday we're just relying on the fact that you can cast from Map<dynamic, dynamic> to Map<String, List<String>>, though we're then getting the exceptions much later than we'd like.\nAny advice you could give us here on how to improve this code so that it's both what we want and what you want would be great.",
                "createdAt": "2016-09-01T17:10:32Z"
            },
            {
                "author": "bwilkerson",
                "bodyText": "The use of that file to refer to specific error codes is, as far as I know, undocumented. I'll defer to @pq and @bwilkerson as to whether or not that feature is considered part of the stable API or not. I sincerely hope not, since I think it's very bad for the analyzer in general if changing an internal error code is a breaking change, but again, I'll defer to them.\n\nShams is, rather unfortunately, in the process of producing documentation on the analysis options file and it includes the ability to enable and disable various error codes. We ought not to be allowing errors (as opposed to warnings, hints and lints) to be disabled, but that is the current state of the world.\nAnd yes, although I fought hard against it, we are currently using the names of the error codes because we don't have any stable identifiers for the errors. Florian started working toward stable identifiers at one point, but there has been no progress for a while.\nI'd be happy to have a discussion (outside this issue) about how to clean up the mess we're in wrt error codes, ignore comments, and the analysis options file.",
                "createdAt": "2016-09-01T17:22:08Z"
            },
            {
                "author": "pq",
                "bodyText": "\ud83d\udc4d  to a higher bandwidth conversation over VC.",
                "createdAt": "2016-09-01T17:38:30Z"
            },
            {
                "author": "leafpetersen",
                "bodyText": "improving the code by adding annotations or fixing bugs. The only thing we want to avoid is making the code worse, e.g. by losing type annotations we have today.\n\nI really do appreciate that.  I do think that if you want to roll frequently you will have to accept some temporary regressions.  I understand that it's easy for temporary regressions to slip and turn into permanent regressions, and so I understand why you might want to avoid this if at all possible.\n\nDo you happen to know what the codes are that replaced the old code so that we can update the analysis options file to ignore the new codes instead, until there's a feature we can use to help the analyzer?\n\nI believe that you can get the appropriate codes by passing --machine to the analyzer and looking at the third field.  @pq would probably know better.  Unfortunately, I think this is likely to be a very bad solution for you.  The error code for\n[warning] The element type '(ImmediateMultiDragGestureRecognizer) \u2192 ImmediateMultiDragGestureRecognizer' cannot be assigned to the map value type 'GestureRecognizerFactory(GestureRecognizer) \u2192 GestureRecognizer' (examples/flutter_gallery/lib/demo/animation_demo.dart, line 187, col 46)\n\nis probably MAP_VALUE_TYPE_NOT_ASSIGNABLE .  If you disable this, you will no longer get any errors associated with maps with bad values, e.g.\nMap<int, int> m = {3 : \"world\"};\nFor the class of errors above associated with covariant callbacks, how would you feel about the following temporary workaround:\ntypedef S F<T, S>(T x);\n\nF/*<A, R>*/ covariant/*<A, R>*/( f(x)) => ((/*=A*/ x) => f(x));\n\nvoid main() {\n  Map<int, F<num, num>> m1 = {4 : covariant((int x) { return 3;})};\n}\nBasically this uses a generic top level function to wrap covariant callbacks at the target type.  This eliminates the error in the short term, and marks these locations as places where an eventual language level solution should be applied.  Thoughts?\nFor this error:\n[warning] The return type 'SynchronousFuture<Map>' is not a 'Future<Map<String, List<String>>>', as defined by the method '_manifestParser'. (packages/flutter/lib/src/services/image_resolution.dart, line 147, col 12)\n\nThe best solution is to wrap this map in a delegating map that checks the contents lazily.  The typed constructor from here is basically what you would want:\nhttps://www.dartdocs.org/documentation/collection/1.9.1/collection/DelegatingMap-class.html\nFor this error:\n[warning] The return type 'State<StatefulWidget>' is not a 'T', as defined by the method 'currentState'. (packages/flutter/lib/src/widgets/unique_widget.dart, line 29, col 12)\n\nI don't know what the intent is, so I don't immediately have a suggestion.  Why is this code right?  If I have a UniqueWidget<State<MySpecialStatefulWidget>>, why is it reasonable for .currentState to give me back a State<SomeOtherStatefulWidget>?",
                "createdAt": "2016-09-01T19:40:26Z"
            },
            {
                "author": "Hixie",
                "bodyText": "I do think that if you want to roll frequently you will have to accept some temporary regressions.\n\nI'm not sure that we really need to be rolling that frequently. I'm not familiar with the reasons for desiring the current roll, in particular. @pq, can you elaborate on what it is we need from the latest version?\n\nI understand that it's easy for temporary regressions to slip and turn into permanent regressions, and so I understand why you might want to avoid this if at all possible.\n\nThat is one concern, though not a big one. The bigger concern is that our code is intended to be used as sample code by our users. We want people to walk down the \"jump to definition\" path eagerly. We want our code to be part of the documentation. As such it has to be extremely readable and as free of hacks as possible. We can have hacks for a few days to go through a transition, but we can't have hacks in for weeks at a time.\n(This is the same reason we currently don't use dartfmt. Its output doesn't rise to a high enough quality bar.)\n\nThe error code for [...] is probably MAP_VALUE_TYPE_NOT_ASSIGNABLE .  If you disable this, you will no longer get any errors associated with maps with bad values [...]\n\nThat's probably ok for now. I'd rather do that than have to have weird incantations that people won't understand when reading the code.\n\nThe best solution is to wrap this map in a delegating map that checks the contents lazily.  The typed constructor from here is basically what you would want [...]\n\nI think this particular case points to the general need to take a Foo<dynamic> and dynamically convert it to a Foo<T> for a given T. I can imagine this being a pretty common need. Would it make sense to have some sort of language support for this? Almost like a static cast operator?\n\nWhy is this code right?  If I have a UniqueWidget<State<MySpecialStatefulWidget>>, why is it reasonable for .currentState to give me back a State<SomeOtherStatefulWidget>?\n\nBecause it's guaranteed that it will return the object it created from its createState method, which is defined to return a T.\nMaybe this code would actually already do the right thing if GlobalKey was changed to GlobalKey<T> on line 28? @pq, do you want to try that?",
                "createdAt": "2016-09-01T21:47:21Z"
            },
            {
                "author": "Hixie",
                "bodyText": "the general need to take a Foo<dynamic> and dynamically convert it to a Foo<T> for a given T\n\nFor example, consider that you have a List<num>, but you \"know\" that they're all integers, and you need a List<int>.\n  List<num> incoming = <num>[1, 2, 3];\n  // function style?\n  List<int> outgoing = cast<List<int>>(incoming);\n  // operator style?\n  List<int> outgoing = cast List<int>(incoming);\n  List<int> outgoing = cast incoming; // type implied from lhs, lhs explicit type required\nThe idea being that it would keep the same instance, somehow, but go in and change the generic type T of that instance somehow, verifying that everything was still type-correct?",
                "createdAt": "2016-09-01T21:51:18Z"
            },
            {
                "author": "pq",
                "bodyText": "I'm not sure that we really need to be rolling that frequently. I'm not familiar with the reasons for desiring the current roll, in particular. @pq, can you elaborate on what it is we need from the latest version?\n\nIn general, I prefer frequent rolls for the obvious reasons and historically it's payed off as regular integrations have allowed us to be iterative on things like language features, lints and analyses, detect performance regressions (e.g., that time VM background compilation got turned off), and reduce surprise as the platform evolves (e.g., strong-mode changes, pub tool changes, package version constraints become impossible to solve, etc).\nIn this particular case, besides general goodness an integration will unblock work on Flutter package summaries support which is key to analysis perf goals we've had in our sights for the last Q+.\n\nMaybe this code would actually already do the right thing if GlobalKey was changed to GlobalKey on line 28? @pq, do you want to try that?\n\nThat gets us a TYPE_ARGUMENT_NOT_MATCHING_BOUNDS error:\n'T' does not extend 'State<StatefulWidget>'lib/src/widgets/unique_widget.dart, line 28",
                "createdAt": "2016-09-02T13:54:20Z"
            },
            {
                "author": "Hixie",
                "bodyText": "@pq Maybe change the UniqueWidget definition to:\nabstract class UniqueWidget<T extends State<StatefulWidget>> extends StatefulWidget {\n\n...?",
                "createdAt": "2016-09-02T19:00:29Z"
            },
            {
                "author": "leafpetersen",
                "bodyText": "Following up.  Based on offline conversations with @pq and @Hixie, we will look for a different mechanism to allow Flutter to keep filtering the covariant callback related errors.  If this proves too difficult, I will look into how to temporarily re-enable the old behavior for Flutter.  I will follow up with @Hixie on some potential language proposals to support this kind of pattern.  We (@pq and I) will look into setting up some continuous integration testing of strong mode against the flutter repo so that we can provide more runway for flutter when breaking changes land, and to give us earlier visibility into unintentional breakage.",
                "createdAt": "2016-09-02T19:47:32Z"
            },
            {
                "author": "pq",
                "bodyText": "Sounds good @leafpetersen.  When you can, could you update with a rough time frame?  In particular, I'm wondering if we should wait or whether we should explore temporary local fixes in the interest of getting us integrated.  Thanks!",
                "createdAt": "2016-09-05T17:27:13Z"
            },
            {
                "author": "leafpetersen",
                "bodyText": "Here's a doc exploring some language level options for handling these kinds of patterns:\nhttps://docs.google.com/a/google.com/document/d/1RqqM-UMp3WGygYZirHqpwW-nZJpbWw9IVf1UJy6kxZc/edit?usp=sharing",
                "createdAt": "2016-09-08T00:09:02Z"
            },
            {
                "author": "leafpetersen",
                "bodyText": "@pq Do you mean a time frame for having a solution implemented?  It depends somewhat on how long it takes @Hixie and I to arrive at a mutually agreeable solution.  We may do best to find temporary fixes to let you make progress.",
                "createdAt": "2016-09-08T01:12:30Z"
            },
            {
                "author": "pq",
                "bodyText": "Thanks @leafpetersen.  I was really just trying to arrive at the short to medium term path and whether it made sense to wait for a prototype rather than commit work-arounds.  Thanks for pushing on this!",
                "createdAt": "2016-09-08T13:35:29Z"
            },
            {
                "author": "pq",
                "bodyText": "I think the short-term plan forward is to add source-level ignores with a reference to a tracking bug --- more details here: #5771.",
                "createdAt": "2016-09-08T15:33:43Z"
            },
            {
                "author": "pq",
                "bodyText": "Source is annotated and build is now green.\nIt ain't pretty obviously but I think we've got a path forward.\n@Hixie PTAL.",
                "createdAt": "2016-09-08T19:00:59Z"
            },
            {
                "author": "Hixie",
                "bodyText": "Rather than \"#5771\" I would recommend having the whole URL, as in \"https://github.com/flutter/flutter/issues/5771\". It's much harder to follow the former compared to the latter.",
                "createdAt": "2016-09-08T19:28:54Z"
            },
            {
                "author": "Hixie",
                "bodyText": "LGTM with the suggested changes.\nFor now.\nIf we end up with this code for more than a few weeks, though, we will have to revisit this.",
                "createdAt": "2016-09-08T19:51:12Z"
            },
            {
                "author": "pq",
                "bodyText": "For now.\n\n\ud83d\udc4d",
                "createdAt": "2016-09-08T19:57:28Z"
            },
            {
                "author": "pq",
                "bodyText": "/cc @scheglov -- this should get you unblocked on your summaries experiments. \ud83c\udf89",
                "createdAt": "2016-09-08T20:13:56Z"
            },
            {
                "author": "yjbanov",
                "bodyText": "FYI, this PR broke driver tests (build history, log).\nThe issue seems to be that package:test is unable to launch the test.",
                "createdAt": "2016-09-09T00:15:32Z"
            },
            {
                "author": "pq",
                "bodyText": "r'uh r'oh.  Following up via email...",
                "createdAt": "2016-09-09T02:43:34Z"
            }
        ],
        "commentCount": 33
    },
    {
        "number": 117698,
        "title": "Improve CupertinoContextMenu to match native more",
        "author": "Manuel",
        "state": "MERGED",
        "closedAt": "2023-02-15T17:37:22Z",
        "createdAt": "2022-12-27T21:52:17Z",
        "comments": [
            {
                "author": "bernaferrari",
                "bodyText": "if someone knows how to make that work, it is @gspencergoog. I really like that behavior, even Android had in a few places and macOS also allows on menu.",
                "createdAt": "2022-12-30T23:20:02Z"
            },
            {
                "author": "manuthebyte",
                "bodyText": "if someone knows how to make that work, it is @gspencergoog. I really like that behavior, even Android had in a few places and macOS also allows on menu.\n\nThat would be awesome!",
                "createdAt": "2022-12-31T17:27:35Z"
            },
            {
                "author": "MitchellGoodwin",
                "bodyText": "Also that swipe gesture sounds like a good thing to separate into it's own issue. @manuthebyte would you mind making a new issue and possibly adding an example? Conversation about that can be moved to there.",
                "createdAt": "2023-01-03T18:00:20Z"
            },
            {
                "author": "manuthebyte",
                "bodyText": "Summary of what I improved/changed/added:\n\nChange when the haptic feedback happens\nChange the type of haptic feedback\nDon't play the haptic feedback when the user aborts\nAdd test\n\nAnd lastly I improved the looks (the above is flutter, below is iOS):\n\n\n\nDarkmode\nLightmode\n\n\n\n\n\n\n\n\n\nAll in All, it now feels so near native, the last thing holding back is the swipe continue, for what I will open a new issue.",
                "createdAt": "2023-01-03T22:39:53Z"
            },
            {
                "author": "manuthebyte",
                "bodyText": "Also that swipe gesture sounds like a good thing to separate into it's own issue. @manuthebyte would you mind making a new issue and possibly adding an example? Conversation about that can be moved to there.\n\nCreated issue #117936 for that.",
                "createdAt": "2023-01-03T22:52:21Z"
            },
            {
                "author": "paldepind",
                "bodyText": "Thank you for working on this @manuthebyte. This looks great and like a huge improvement!\nJust to note, HapticFeedback.heavyImpact() is close but not the same as the native haptic feedback. But unfortunately, the native press-and-hold haptic feedback is not exposed by iOS except through the native components (as far as I can tell at least).",
                "createdAt": "2023-01-14T16:45:02Z"
            },
            {
                "author": "manuthebyte",
                "bodyText": "Thank you for working on this @manuthebyte. This looks great and like a huge improvement!\nJust to note, HapticFeedback.heavyImpact() is close but not the same as the native haptic feedback. But unfortunately, the native press-and-hold haptic feedback is not exposed by iOS except through the native components (as far as I can tell at least).\n\nTysm for your nice feedback!\nYeah so you're right, the haptic feedback is not exactly the same, but I think it's the closest we can get :)",
                "createdAt": "2023-01-14T16:54:48Z"
            },
            {
                "author": "bernaferrari",
                "bodyText": "Question: isn't it possible to just reduce the ms in the hapitic feedback?",
                "createdAt": "2023-01-15T00:41:47Z"
            },
            {
                "author": "manuthebyte",
                "bodyText": "Question: isn't it possible to just reduce the ms in the hapitic feedback?\n\nI don't think that's possible that easily because the HapticFeedback class calls native functions. But I don't know it for sure.",
                "createdAt": "2023-01-15T20:22:27Z"
            },
            {
                "author": "manuthebyte",
                "bodyText": "@MitchellGoodwin What exactly is the Google Testing check and why hasn't it started yet?",
                "createdAt": "2023-01-17T11:58:33Z"
            },
            {
                "author": "bernaferrari",
                "bodyText": "Try to rebase on top of latest master (open the fork in github and click to sync, then local and rebase to the top) and force push.",
                "createdAt": "2023-01-17T13:57:21Z"
            },
            {
                "author": "MitchellGoodwin",
                "bodyText": "@MitchellGoodwin What exactly is the Google Testing check and why hasn't it started yet?\n\nThe Google Testing is a test that runs separately against other products at google that use Flutter to make sure we aren't introducing a breaking change. As mentioned, it gets stuck sometimes, and rebasing tends to unstick it.\nI like the idea of adding the haptic feedback, even if it doesn't match native 100%, but can we make it optional? As in add a boolean to the constructor (maybe something like enableHapticFeedback?) that defaults to true so developers can opt out.",
                "createdAt": "2023-01-17T17:16:15Z"
            },
            {
                "author": "manuthebyte",
                "bodyText": "@MitchellGoodwin What exactly is the Google Testing check and why hasn't it started yet?\n\nThe Google Testing is a test that runs separately against other products at google that use Flutter to make sure we aren't introducing a breaking change. As mentioned, it gets stuck sometimes, and rebasing tends to unstick it.\nI like the idea of adding the haptic feedback, even if it doesn't match native 100%, but can we make it optional? As in add a boolean to the constructor (maybe something like enableHapticFeedback?) that defaults to true so developers can opt out.\n\nTy for the explanation :)\nYeah I think it's a great idea to make it optional! Also, now that you mention it, making the haptic feedback not optional would produce two haptic feedbacks at once at some times, because I have seen some Flutter apps already having Haptic Feedback on the context menus.",
                "createdAt": "2023-01-17T17:18:28Z"
            },
            {
                "author": "paldepind",
                "bodyText": "I like the idea of adding the haptic feedback, even if it doesn't match native 100%, but can we make it optional? As in add a boolean to the constructor (maybe something like enableHapticFeedback?) that defaults to true so developers can opt out.\n\nIs there a reason to disable the haptics? To me, it seems like the purpose of a widget like this is to replicate the native look and feel\u2014not to provide the most customizable component. Disabling the haptic would only make the component feel less native. Wouldn't it make sense to keep it simple and only have customizations that serve a purpose in the sense of achieving the native behavior?",
                "createdAt": "2023-01-19T15:03:01Z"
            },
            {
                "author": "MitchellGoodwin",
                "bodyText": "Is there a reason to disable the haptics? To me, it seems like the purpose of a widget like this is to replicate the native look and feel\u2014not to provide the most customizable component. Disabling the haptic would only make the component feel less native. Wouldn't it make sense to keep it simple and only have customizations that serve a purpose in the sense of achieving the native behavior?\n\nI think the reasons to keep it optional are:\n\nBecause the feedback is not going to be matching native 100%, I think it's good to leave open the option to disable it if a developer doesn't want one that may be jarring.\nAs mentioned, if they already have a workaround that they may prefer more we'd only be introducing a small breaking change that they can disable\n\nThough I do see your point, and it's likely that once released we find developers just leave the feedback on and we deprecate the toggle. Personally, I would like to keep it optional for now.",
                "createdAt": "2023-01-19T18:04:31Z"
            },
            {
                "author": "paldepind",
                "bodyText": "@MitchellGoodwin Thanks for your reply. That makes sense. I agree that the fact the behavior is not precisely native is a fine reason to allow the option.",
                "createdAt": "2023-01-19T20:22:47Z"
            },
            {
                "author": "delfme",
                "bodyText": "@manuthebyte do you think this will be merged anytime soon?",
                "createdAt": "2023-02-09T17:27:44Z"
            },
            {
                "author": "manuthebyte",
                "bodyText": "Sorry, for taking so long for that small of a change, had COVID :)",
                "createdAt": "2023-02-13T14:49:05Z"
            },
            {
                "author": "delfme",
                "bodyText": "Thanks for this!\nNo idea if settings are the same, but in dialog.dart I'm using _kDividerThickness = 0.25 or 0.5.",
                "createdAt": "2023-02-13T15:32:03Z"
            },
            {
                "author": "manuthebyte",
                "bodyText": "Thanks for this!\nNo idea if settings are the same, but in dialog.dart I'm using _kDividerThickness = 0.25 or 0.5.\n\nWhat do you mean by that?",
                "createdAt": "2023-02-13T16:43:45Z"
            },
            {
                "author": "delfme",
                "bodyText": "Looking at the image here, separator seems 0.25px or 0,5px thicker than native one. #117698 (comment)\nBut it might just be due to image resolution. Can you please double check it?\nI recall I edited _kDividerThickness inside dialog.dart coz separators looked a bit thicker as well",
                "createdAt": "2023-02-13T17:52:03Z"
            },
            {
                "author": "MitchellGoodwin",
                "bodyText": "To be clear, the line between actions is done here \n  \n    \n      flutter/packages/flutter/lib/src/cupertino/context_menu.dart\n    \n    \n         Line 1436\n      in\n      7bacc25\n    \n  \n  \n    \n\n        \n          \n           width: 0.5, \n        \n    \n  \n\n\nThe one in dialog.dart just controls similar looking widgets. It'd be great if we could get that divider a little closer to native, and I don't think it will take too much tinkering, but if weird issues pop up @manuthebyte and it's not that simple, put a comment in here and we can get this PR in as a win.",
                "createdAt": "2023-02-13T18:24:28Z"
            },
            {
                "author": "manuthebyte",
                "bodyText": "Should be absolutely perfect now (left iOS, right Flutter):",
                "createdAt": "2023-02-13T18:34:11Z"
            },
            {
                "author": "manuthebyte",
                "bodyText": "To be clear, the line between actions is done here\n\n  \n    \n      flutter/packages/flutter/lib/src/cupertino/context_menu.dart\n    \n    \n         Line 1436\n      in\n      7bacc25\n    \n  \n  \n    \n\n        \n          \n           width: 0.5, \n        \n    \n  \n\n\nThe one in dialog.dart just controls similar looking widgets. It'd be great if we could get that divider a little closer to native, and I don't think it will take too much tinkering, but if weird issues pop up @manuthebyte and it's not that simple, put a comment in here and we can get this PR in as a win.\n\nWould love to optimize the dialog a little bit! But I think I would prefer that we merge this PR and then I can make a seperate one :)",
                "createdAt": "2023-02-13T18:37:21Z"
            },
            {
                "author": "MitchellGoodwin",
                "bodyText": "Great! Thank you for keeping up with our nitpicks. This will be great to get in. I'm guessing the linter is not going to like the extra white spaces in the last commit, but I'll review when all the tests pass.",
                "createdAt": "2023-02-13T18:38:13Z"
            },
            {
                "author": "MitchellGoodwin",
                "bodyText": "Would love to optimize the dialog a little bit! But I think I would prefer that we merge this PR and then I can make a seperate one :)\n\nAs a warning, if you want to get the divider.dart looking perfect in the dialog file as well, that may be a bit of an undertaking for a little thing. They need to scale according to screen size, so it will have to match native on iOS, macOS, and web, and will likely break a fair amount of golden files that we will have to go through. But it would be nice to get that looking good.",
                "createdAt": "2023-02-13T18:43:23Z"
            },
            {
                "author": "manuthebyte",
                "bodyText": "Great! Thank you for keeping up with our nitpicks. This will be great to get in. I'm guessing the linter is not going to like the extra white spaces in the last commit, but I'll review when all the tests pass.\n\nRemoved them",
                "createdAt": "2023-02-13T18:46:16Z"
            },
            {
                "author": "manuthebyte",
                "bodyText": "Would love to optimize the dialog a little bit! But I think I would prefer that we merge this PR and then I can make a seperate one :)\n\nAs a warning, if you want to get the divider.dart looking perfect in the dialog file as well, that may be a bit of an undertaking for a little thing. They need to scale according to screen size, so it will have to match native on iOS, macOS, and web, and will likely break a fair amount of golden files that we will have to go through. But it would be nice to get that looking good.\n\nHmm okay. Will look into it - as you say, would be nice to have that clean as well.",
                "createdAt": "2023-02-13T18:48:22Z"
            },
            {
                "author": "delfme",
                "bodyText": "To be clear, the line between actions is done here\n\n  \n    \n      flutter/packages/flutter/lib/src/cupertino/context_menu.dart\n    \n    \n         Line 1436\n      in\n      7bacc25\n    \n  \n  \n    \n\n        \n          \n           width: 0.5, \n        \n    \n  \n\n\nThe one in dialog.dart just controls similar looking widgets. It'd be great if we could get that divider a little closer to native, and I don't think it will take too much tinkering, but if weird issues pop up @manuthebyte and it's not that simple, put a comment in here and we can get this PR in as a win.\n\nThx for the reference. If it can help, I recall I tested the 0,5px with lighten color but eventually opted for 0,25px. Fidelity is almost 100%.\nHopefully hairlines would be soon avaiable on Impelller #118947",
                "createdAt": "2023-02-13T19:41:47Z"
            },
            {
                "author": "manuthebyte",
                "bodyText": "LGTM. Thank you for the contribution and going along with my nitpicks! Let me find someone to get a secondary review for first-time contributors, and this will be ready to merge in.\n\nThank you! I am very happy with your nitpicks, because I also want it to be perfect! :)\nNow the last thing is the continuous swipe. Hoping we also can achieve that. But I'm positive about that \ud83d\udcaf",
                "createdAt": "2023-02-14T21:48:11Z"
            }
        ],
        "commentCount": 30
    },
    {
        "number": 96774,
        "title": "Fix flutter web app not respecting assets path when in non-root folder",
        "author": "nicolasvac",
        "state": "MERGED",
        "closedAt": "2022-03-10T23:50:17Z",
        "createdAt": "2022-01-18T14:45:17Z",
        "comments": [
            {
                "author": "nicolasvac",
                "bodyText": "I'm not sure where to look for writing a test or even how to, so if the PR reviewer could guide me that would help a lot.",
                "createdAt": "2022-01-18T15:37:27Z"
            },
            {
                "author": "yjbanov",
                "bodyText": "The change itself LGTM. Is there a way to write a test that would make sure we don't break it in the future?",
                "createdAt": "2022-01-20T00:18:31Z"
            },
            {
                "author": "yjbanov",
                "bodyText": "Maybe something like this? https://github.com/flutter/flutter/blob/master/dev/bots/service_worker_test.dart",
                "createdAt": "2022-01-20T00:19:36Z"
            },
            {
                "author": "nicolasvac",
                "bodyText": "@yjbanov i think a test that checks if the '/' is present at the beginning of the file names is sufficient ?",
                "createdAt": "2022-01-21T11:33:05Z"
            },
            {
                "author": "yjbanov",
                "bodyText": "Of course, since we don't have a test environment that replicates Github pages or similar, there's no guarantee that we won't break this again in the future. We won't break it on purpose though.",
                "createdAt": "2022-02-02T01:58:10Z"
            },
            {
                "author": "ditman",
                "bodyText": "(Just checked in the original issue, and the headers are not overriding service worker scopes, odd)",
                "createdAt": "2022-02-02T03:32:19Z"
            },
            {
                "author": "yjbanov",
                "bodyText": "For some reason I thought index.html was not served from the service worker in offline mode (or any mode), but maybe I'm wrong.",
                "createdAt": "2022-02-02T17:23:59Z"
            },
            {
                "author": "yjbanov",
                "bodyText": "Well, our service worker does fetch it, but maybe that's unnecessary? We don't really support offline mode very easily right now, so all this may be a little moot.",
                "createdAt": "2022-02-02T17:27:29Z"
            },
            {
                "author": "ditman",
                "bodyText": "(I think this can be merged, but it'll need revisiting when solving the issue you linked for sure @yjbanov)",
                "createdAt": "2022-02-02T18:36:23Z"
            },
            {
                "author": "christopherfujino",
                "bodyText": "@nicolasvac looks like there's a type error that the Linux web_long_running_tests_1_5 CI step is catching:\nUnhandled exception:\ntype '_InternalLinkedHashMap<dynamic, dynamic>' is not a subtype of type 'Map<Object, Object>' of 'other'\n#0      MapMixin.addAll (dart:collection/maps.dart)\n#1      addStateInfo (package:matcher/src/util.dart:29:14)\n#2      _DeepMatcher.matches (package:matcher/src/equals_matcher.dart:261:5)\n#3      expect (file:///b/s/w/ir/x/w/flutter/dev/bots/service_worker_test.dart:61:15)\n#4      runWebServiceWorkerTest.expectRequestCounts (file:///b/s/w/ir/x/w/flutter/dev/bots/service_worker_test.dart:76:5)\n#5      runWebServiceWorkerTest (file:///b/s/w/ir/x/w/flutter/dev/bots/service_worker_test.dart:137:5)\n<asynchronous suspension>\n#6      _runShardRunnerIndexOfTotalSubshard (file:///b/s/w/ir/x/w/flutter/dev/bots/test.dart:1931:5)\n<asynchronous suspension>\n#7      _runWebLongRunningTests (file:///b/s/w/ir/x/w/flutter/dev/bots/test.dart:1115:3)\n<asynchronous suspension>\n#8      _runFromList (file:///b/s/w/ir/x/w/flutter/dev/bots/test.dart:1973:5)\n<asynchronous suspension>\n#9      main (file:///b/s/w/ir/x/w/flutter/dev/bots/test.dart:200:5)\n<asynchronous suspension>\n\nhttps://logs.chromium.org/logs/flutter/buildbucket/cr-buildbucket/8824686530296893649/+/u/run_test.dart_for_web_long_running_tests_shard_and_subshard_1_5/test_stderr",
                "createdAt": "2022-02-17T22:04:06Z"
            },
            {
                "author": "nicolasvac",
                "bodyText": "@christopherfujino how is this affected by removing the first element of the list, considering it's still a list ?",
                "createdAt": "2022-02-18T23:36:26Z"
            },
            {
                "author": "christopherfujino",
                "bodyText": "@christopherfujino how is this affected by removing the first element of the list, considering it's still a list ?\n\nI didn't actually look at your PR before. Now that I did...I have no idea",
                "createdAt": "2022-02-23T01:22:13Z"
            },
            {
                "author": "christopherfujino",
                "bodyText": "I scheduled a re-run of Linux web_long_running_tests_1_5. If that also fails, I would suggest rebasing upstream, in case this was something that has already been fixed in master.",
                "createdAt": "2022-03-03T22:15:04Z"
            },
            {
                "author": "nicolasvac",
                "bodyText": "@christopherfujino merged commits",
                "createdAt": "2022-03-03T23:17:28Z"
            },
            {
                "author": "christopherfujino",
                "bodyText": "I'm stumped on this failure, gonna ask about it on the tests channel of our discord server.",
                "createdAt": "2022-03-04T00:01:52Z"
            },
            {
                "author": "christopherfujino",
                "bodyText": "Ok, narrowed it down to an bug in the test file: #99522. I will submit a patch to fix.",
                "createdAt": "2022-03-04T00:52:40Z"
            },
            {
                "author": "christopherfujino",
                "bodyText": "Fix is in #99524",
                "createdAt": "2022-03-04T17:21:53Z"
            },
            {
                "author": "christopherfujino",
                "bodyText": "Fix is in #99524\n\nFix has been merged, @nicolasvac please rebase upstream. The test will still fail because you need to update an expectation, but the failure should tell you how to fix it.",
                "createdAt": "2022-03-04T23:32:16Z"
            },
            {
                "author": "nicolasvac",
                "bodyText": "@christopherfujino i've remerged everything and waited for the tests to run,\n[CHROME STDERR]:Fontconfig warning: \"/etc/fonts/fonts.conf\", line 100: unknown element \"blank\" [CHROME STDERR]:\nStill this is not related to this merge request. I hope this can be merged now as it has been over two months for \"outside\" problems",
                "createdAt": "2022-03-07T09:34:32Z"
            },
            {
                "author": "christopherfujino",
                "bodyText": "@christopherfujino i've remerged everything and waited for the tests to run, [CHROME STDERR]:Fontconfig warning: \"/etc/fonts/fonts.conf\", line 100: unknown element \"blank\" [CHROME STDERR]:\nStill this is not related to this merge request. I hope this can be merged now as it has been over two months for \"outside\" problems\n\nPer the Flutter team's Tree Hygiene policy this change cannot be merged with failing tests.\nThe customer_testing-linux test will be fixed by rebasing (not merging) upstream. As for the web test infrastructure failure, I am not familiar with that. I would recommend joining the discord #hackers-infra channel and following up there (alternatively you can file an issue for it).",
                "createdAt": "2022-03-07T18:05:08Z"
            },
            {
                "author": "mdebbar",
                "bodyText": "The failures seem unrelated to this PR and are probably caused by the branch being stale.\n@nicolasvac could you please try rebasing your branch on top of flutter:master to see if that fixes the failures? You may need to remove the merge commits before attempting to rebase.",
                "createdAt": "2022-03-07T20:01:08Z"
            },
            {
                "author": "nicolasvac",
                "bodyText": "@mdebbar do you have a list of commands i can run ?\nI'm not familiar with rebasing from another repository",
                "createdAt": "2022-03-07T22:16:54Z"
            },
            {
                "author": "mdebbar",
                "bodyText": "@nicolasvac can you show me what you are naming your remotes? (output of git remote -v)",
                "createdAt": "2022-03-10T18:21:50Z"
            },
            {
                "author": "nicolasvac",
                "bodyText": "origin  git@github.com:nicolasvac/flutter.git (fetch)\norigin  git@github.com:nicolasvac/flutter.git (push)",
                "createdAt": "2022-03-10T18:24:39Z"
            },
            {
                "author": "mdebbar",
                "bodyText": "Ok, first thing you need to add the flutter upstream remote:\ngit remote add upstream git@github.flutter/flutter.git\n\nThen, you need to fetch the master branch from upstream:\ngit fetch upstream master\n\nNext, move your local master branch to point to your latest commit (excluding the merge commits). That would be the Update web.dart commit (sha: 419783e). The first step here is to make sure to point your HEAD somewhere else:\ngit checkout upstream/master\ngit branch -f master 419783e\n\nNow, let's rebase your local master on top of upstream:master. The number 3 is the number of commits in your branch that will be rebased:\ngit rebase --onto upstream/master master~3 master",
                "createdAt": "2022-03-10T18:41:49Z"
            },
            {
                "author": "nicolasvac",
                "bodyText": "@mdebbar git gave me some errors and i think it got messed up.\nIf you want i can just open another PR and re-create the branch",
                "createdAt": "2022-03-10T19:22:33Z"
            },
            {
                "author": "mdebbar",
                "bodyText": "@nicolasvac I would prefer to keep the same PR to maintain the comment history.\nOne thing you can do is use the same branch (nicolasvac:master), clean it up, redo your change and push it.",
                "createdAt": "2022-03-10T19:33:57Z"
            },
            {
                "author": "nicolasvac",
                "bodyText": "@mdebbar i think i've managed to solve it.\nIs it ok now ?",
                "createdAt": "2022-03-10T20:39:17Z"
            },
            {
                "author": "nicolasvac",
                "bodyText": "@mdebbar @christopherfujino All right, thank you both for your patience and assistance.",
                "createdAt": "2022-03-10T20:41:15Z"
            },
            {
                "author": "christopherfujino",
                "bodyText": "@mdebbar @christopherfujino All right, thank you both for your patience and assistance.\n\nYou never fixed the test: https://logs.chromium.org/logs/flutter/buildbucket/cr-buildbucket/8820046930680517745/+/u/run_test.dart_for_web_long_running_tests_shard_and_subshard_1_5/test_stderr\nUnhandled exception:\nhas different length and is missing map key ''\n#0      expect (file:///b/s/w/ir/x/w/flutter/dev/bots/service_worker_test.dart:67:3)\n#1      runWebServiceWorkerTest.expectRequestCounts (file:///b/s/w/ir/x/w/flutter/dev/bots/service_worker_test.dart:77:5)\n#2      runWebServiceWorkerTest (file:///b/s/w/ir/x/w/flutter/dev/bots/service_worker_test.dart:138:5)\n<asynchronous suspension>\n#3      _runShardRunnerIndexOfTotalSubshard (file:///b/s/w/ir/x/w/flutter/dev/bots/test.dart:1931:5)\n<asynchronous suspension>\n#4      _runWebLongRunningTests (file:///b/s/w/ir/x/w/flutter/dev/bots/test.dart:1115:3)\n<asynchronous suspension>\n#5      _runFromList (file:///b/s/w/ir/x/w/flutter/dev/bots/test.dart:1973:5)\n<asynchronous suspension>\n#6      main (file:///b/s/w/ir/x/w/flutter/dev/bots/test.dart:199:5)\n<asynchronous suspension>",
                "createdAt": "2022-03-10T21:26:27Z"
            },
            {
                "author": "nicolasvac",
                "bodyText": "@christopherfujino seems ok now",
                "createdAt": "2022-03-10T23:06:31Z"
            }
        ],
        "commentCount": 31
    },
    {
        "number": 96664,
        "title": "fix: BottomNavigationBarItem colors",
        "author": "Zlati Pehlivanov",
        "state": "CLOSED",
        "closedAt": "2022-07-19T12:32:33Z",
        "createdAt": "2022-01-14T17:53:38Z",
        "comments": [
            {
                "author": "talamaska",
                "bodyText": "I would love to get some feedback on the PR. I'm prepared to make any additional changes to meet the requirements.",
                "createdAt": "2022-01-20T18:26:32Z"
            },
            {
                "author": "darrenaustin",
                "bodyText": "It also appears that the analyzer is complaining about trailing spaces on the ends of some lines. (See the analyze-linux check's details)",
                "createdAt": "2022-02-15T23:24:24Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 1 new digest(s) on patchset 4.\nView them at https://flutter-gold.skia.org/cl/github/96664",
                "createdAt": "2022-02-16T12:23:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 1 new digest(s) on patchset 5.\nView them at https://flutter-gold.skia.org/cl/github/96664",
                "createdAt": "2022-02-16T12:33:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 8 new digest(s) on patchset 7.\nView them at https://flutter-gold.skia.org/cl/github/96664",
                "createdAt": "2022-02-16T13:08:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 16 new digest(s) on patchset 8.\nView them at https://flutter-gold.skia.org/cl/github/96664",
                "createdAt": "2022-02-16T13:13:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 6 new digest(s) on patchset 9.\nView them at https://flutter-gold.skia.org/cl/github/96664",
                "createdAt": "2022-02-16T13:18:05Z"
            },
            {
                "author": "talamaska",
                "bodyText": "@darrenaustin fixed everything.\nAdded more docs and removed the trailing spaces\nSeems like there is a problem with the CLA because I accepted your commit suggestions. Is that resolvable or I should reset and apply the changes myself.",
                "createdAt": "2022-02-16T13:23:14Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 18 new digest(s) on patchset 10.\nView them at https://flutter-gold.skia.org/cl/github/96664",
                "createdAt": "2022-02-16T13:28:05Z"
            },
            {
                "author": "talamaska",
                "bodyText": "reset and re-applied changes to avoid CLA issues and not waste more time on this.",
                "createdAt": "2022-02-16T15:31:50Z"
            },
            {
                "author": "darrenaustin",
                "bodyText": "@talamaska thanks for the update. It looks like the new tests are failing however. From the logs for one of the failing checks:\n00:35 +626: /b/s/w/ir/x/w/flutter/packages/flutter/test/material/bottom_navigation_bar_test.dart: label style color should override itemColor for BottomNavigationBarType.shifting                     \n\u2550\u2550\u2561 EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK \u255e\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\nThe following TestFailure was thrown running a test:\nExpected: Color:<Color(0xffff9900)>\n  Actual: Color:<Color(0xff0004ff)>\n\nCan you take a look? Thx.",
                "createdAt": "2022-02-23T00:52:03Z"
            },
            {
                "author": "talamaska",
                "bodyText": "@darrenaustin it seems your suggestion for shortening is not working as expected.\n return (iconTheme ?? const IconThemeData()).copyWith(color: itemColor);\nI think you missed the point initially or overlooked. The thing here is that itemColor can be null and the short variant is not covering this case. In any case, if I return my code to the previous state the tests are passing.\nmy logic is copied from the _effectiveTextStyle and changed to work for icon theme and item color.\nI'm returning my way of writing, it is correct and it is following the same style as the _effectiveTextStyle.\nP.S on additional look I see another problem that I miss. iconTheme will never be null in the condition cause we just assigned a fresh IconThemData. Will try to make it better.\nP.S Also it seems that iconTheme should override not only iconColor, but also textStyle color.",
                "createdAt": "2022-02-23T12:59:28Z"
            },
            {
                "author": "talamaska",
                "bodyText": "I think it is fixed now.\nAdded more docs as well.",
                "createdAt": "2022-02-23T13:37:11Z"
            },
            {
                "author": "talamaska",
                "bodyText": "@darrenaustin is there something else that is blocking this PR?",
                "createdAt": "2022-03-15T23:34:00Z"
            },
            {
                "author": "talamaska",
                "bodyText": "@darrenaustin, hi there. I wonder, can I get a review again? It's been quite some time since I implemented the requested changes. I would really like this to be merged before starting other efforts for eventual material 3 migration, because I'm afraid the issues will end up in the new version as well. I have pinged in discord as well. If it is more convenient we can chat there.",
                "createdAt": "2022-04-18T17:37:43Z"
            },
            {
                "author": "talamaska",
                "bodyText": "@darrenaustin\nI'm also kinda confused why Shifting bottom bar is so broken and should I try to fix that as well?\n\nvs this in fixed\n\nIn the end if I'm going to implement the above suggested selected and unselected effectiveIconTheme\nfinal IconThemeData effectiveSelectedIconTheme =\n      _effectiveIconTheme(\n        widget.selectedIconTheme ?? bottomTheme.selectedIconTheme,\n        widget.selectedItemColor \n        ?? bottomTheme.selectedItemColor \n        ?? themeColor\n      );\n      \nfinal IconThemeData effectiveUnselectedIconTheme =\n      _effectiveIconTheme(\n        widget.unselectedIconTheme ?? bottomTheme.unselectedIconTheme,\n        widget.unselectedItemColor \n        ?? bottomTheme.unselectedItemColor \n        ?? themeData.unselectedWidgetColor\n      );\nand breaking that golden test, it would make sense to implement the colorTween separation as well\nThe white label and icons is partly caused by the tween for the shifting type, at least the label color\nI don't think this is correct\n\nWhy would I have themeData.colorScheme.surface for begin and end, shouldn't it be themeColor for the end?\nWhen I implement the suggested above nullish coalescing for the effectiveIconTheme the icon is colored correctly\n\nAnd this is if I change the end value for colorTween for shifting type to themeColor\n\n\nI think the right call would be to recreate the goldens with my patches in order to pass the tests. After all the policy of flutter is to make breaking changes if it is for the sake of fixing things.\nJust give me a heads up if you would like me to push all the changes I have mentioned including the colorTweens",
                "createdAt": "2022-04-26T18:38:01Z"
            },
            {
                "author": "talamaska",
                "bodyText": "@darrenaustin in the end, would it make sense to drop all those fixes if there is a material 3 rewrite going? Or is the new material 3 navigation bar will be a new widget?",
                "createdAt": "2022-04-26T18:56:50Z"
            },
            {
                "author": "TahaTesser",
                "bodyText": "I saw #96480 this morning and filed a PR for it based on Hixie's comment, which addresses selectedLabelStyle and unselectedLabelStyle.\nNow I found this PR and #64358\nJust closed new issue #96480 for a duplicate of the issue linked here #64358\n@darrenaustin\n\nfix: BottomNavigationBarItem title's color is not overriden neither by selectedLabelStyle nor unselectedLabelStyle\n\nI think my PR addressed the issue matching the Flutter docs\n\nfix: BottomNavigationBarItem icon's color is not overriden neither by selectedLabelStyle nor unselectedLabelStyle\n\nselectedLabelStyle or unselectedLabelStyle shouldn't update BottomNavigationBarItem icon's color.",
                "createdAt": "2022-04-27T21:16:58Z"
            },
            {
                "author": "talamaska",
                "bodyText": "@darrenaustin @TahaTesser if my PR is not needed anymore feel free to close. It's a shame that I was waiting for review months and @TahaTesser PR was reviewed and approved in a matter of hours. I understand that my PR was not perfect, but anyways.\nI'm happy that's resolved. Do you think the shifting bottom bar colors should be fixed in a separate PR and update it's goldens?",
                "createdAt": "2022-04-28T09:10:02Z"
            },
            {
                "author": "TahaTesser",
                "bodyText": "@talamaska\nMy PR had to be reverted #102756, I would suggest keeping this PR open and making sure to address the issues related to revert in your PR.",
                "createdAt": "2022-05-03T06:58:19Z"
            },
            {
                "author": "Hixie",
                "bodyText": "What is the status of this PR? Did we end up fixing this issue in the other PR?\n@talamaska sorry for the delays in dealing with this PR. You are welcome to come bug us on our Discord server (link in the contributing guidelines) if you would like to ask for reviews when we drop the ball. :-)",
                "createdAt": "2022-07-12T23:25:57Z"
            },
            {
                "author": "talamaska",
                "bodyText": "@Hixie Hi, well, it seems the PR is a no go, because it is breaking some golden tests. Which on my opinion just rely on a wrong behavior and in addition the reported issues are not included in the existing tests. I didn't get any feedback on the question about the shifting bottom bar styles or any other question in my comment to @darrenaustin. In the other PR #102756 that was reverted I got an explanation that this is a breaking change and there is a different process of implementing those - with temporary flags or something else that can gracefully help devs migrate to the new behavior. So I'm not sure what to do here. About the Discord channel I didn't get any response there when i was waiting for a review last time.",
                "createdAt": "2022-07-13T13:59:04Z"
            },
            {
                "author": "Hixie",
                "bodyText": "If it's breaking some customer tests then yeah, generally that means we end up putting a flag that flips between the old and new behaviours for a while, so that we can migrate the code. That's relatively straight forward; you just have a static boolean variable BottomNavigationBar.useLegacyColorScheme that defaults to true, and you implement your logic only when it's false. Then we land that, flip the flag in any customer code, make the tests pass, then we flip the default for the flag and remove the old behaviour, land that, remove the flag flip in the customer code, and then finally remove the flag. Ideally if we do this we'd also publish a migration guide, which for this kind of change would be really trivial, just telling people there's nothing to change, all we've done is make the colors better, and pointing them to the properties they can use to control the colors if they prefer the old styles.",
                "createdAt": "2022-07-13T20:03:26Z"
            },
            {
                "author": "Hixie",
                "bodyText": "Looks like the customer_testing shard is breaking because you may have done a merge instead of a rebase. I recommend squashing your commits then rebasing so that it's the last commit on your branch, that way the script knows which version of the customer tests to run.",
                "createdAt": "2022-07-13T20:30:59Z"
            },
            {
                "author": "Hixie",
                "bodyText": "I couldn't figure out what the shifting label issue was, can you elaborate on this? Where do the screenshots come from?\nFor the migration guide the documentation for doing that is in the template: https://github.com/flutter/website/blob/main/src/release/breaking-changes/template.md\nMore information about breaking changes is at: https://github.com/flutter/flutter/wiki/Tree-hygiene#handling-breaking-changes",
                "createdAt": "2022-07-13T20:34:08Z"
            },
            {
                "author": "talamaska",
                "bodyText": "I couldn't figure out what the shifting label issue was, can you elaborate on this? Where do the screenshots come from?\n\n@Hixie\nThe shifting label and icons are white (surface color) if the user doesn't set any colors or styles.\nThe screenshots are taken before v3. I'm almost sure they will be the same in master.",
                "createdAt": "2022-07-13T20:53:28Z"
            },
            {
                "author": "talamaska",
                "bodyText": "@Hixie will check the info about the breaking changes. For now the flag is implemented and all the conditional logic is there, so with the flag true, no tests are breaking and tests are testing with the flag equal to false. Thanks for sharing those with me.",
                "createdAt": "2022-07-13T20:56:22Z"
            },
            {
                "author": "talamaska",
                "bodyText": "Looks like the customer_testing shard is breaking because you may have done a merge instead of a rebase. I recommend squashing your commits then rebasing so that it's the last commit on your branch, that way the script knows which version of the customer tests to run.\n\nYes I merged from master. I didn't know I have to rebase. I'm not sure how to squash my commits and then rebase since i already merged master in my branch.",
                "createdAt": "2022-07-13T21:04:13Z"
            },
            {
                "author": "talamaska",
                "bodyText": "@Hixie Could you please elaborate on squashing and rebasing. I have like 3 merges from master thought the life of this branch. Do I need to revert from the beginning, make my changes, then rebase master into my branch? I'm sorry if this is a trivial question, but I have never rebased before and I see I can't squash commits if they include a merge in the middle. Would it be easier to just drop this PR, make a new branch from the current master, add my changes and submit a new PR?",
                "createdAt": "2022-07-14T11:05:55Z"
            },
            {
                "author": "Hixie",
                "bodyText": "Easiest way is probably to just create a new branch, then cherry-pick your commits onto it. Alternatively you might be able to do it using git rebase -i where you just select your commits and skip the merge commits (I'm not sure exactly how that works since I don't normally try to use merges). In general for Flutter we recommend using rebases, see also https://github.com/flutter/flutter/wiki/Tree-hygiene#using-git",
                "createdAt": "2022-07-14T18:20:38Z"
            },
            {
                "author": "talamaska",
                "bodyText": "@darrenaustin @Hixie closing this PR in favor of a new one #107924",
                "createdAt": "2022-07-19T12:32:32Z"
            }
        ],
        "commentCount": 31
    },
    {
        "number": 82575,
        "title": "[flutter] when primary mouse pointers don't contact a focused node, reset the focus",
        "author": "Jonah Williams",
        "state": "MERGED",
        "closedAt": "2021-06-09T00:39:06Z",
        "createdAt": "2021-05-14T21:30:23Z",
        "comments": [
            {
                "author": "jonahwilliams",
                "bodyText": "This currently only applies for keyboard events, I'd need to do more research into how touch events should behave",
                "createdAt": "2021-05-14T21:31:25Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 2 untriaged digest(s) on patchset 2.\nView them at https://flutter-gold.skia.org/cl/github/82575",
                "createdAt": "2021-05-14T21:36:18Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "adding another widget here seems to be changing the layout slightly, which is unfortunate...",
                "createdAt": "2021-05-14T21:47:46Z"
            },
            {
                "author": "MarcusWichelmann",
                "bodyText": "Just an outsiders thought:\nThis looks great and all, but should it really be necessary to add a FocusTrap widget to the widget tree just to get a behaviour which one might expect to be there by default? Of course, this is a good first step, but maybe this functionallity should also be included into other widgets like e.g. MaterialApp so programmers get the behaviour they know from the web out of the box without having to google for it and adding the FocusTrap widget theirself?",
                "createdAt": "2021-05-19T09:27:10Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "I agree, I'm not sure that this is the right solution exactly but i'm not sure how else you would do it. Widgets can't unfocus themselves if they aren't hit \ud83e\udd14",
                "createdAt": "2021-05-19T16:50:46Z"
            },
            {
                "author": "Wissperwind",
                "bodyText": "In HTML Web every element can be focused. Even if it is not editable, correct?\nCan't we make every widget fucusable? This would change the focus away from a text field if you click for example on the background scaffold or the scroll bar.\nI am not a flutter developer. So this is only an idea from outside but I wanted to post it.\nFor me it is rather important to get some working solution in the next two weeks than to get a really good solution.",
                "createdAt": "2021-05-19T21:46:26Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "An html element isn't equivalent to a flutter widget. A widget not have any UI, only configuring other widgets themselves. Even making every widget with uI focusable would make pure focus traversal painful.",
                "createdAt": "2021-05-19T22:25:09Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Based on some discussion with @gspencergoog , I've updated this to use the unfocus functionality of the modal route's FocusScopeNode. Of course, using the gesture recognizer the way that I am is breaking the world, so I'll need to find a way to make this change not compete with any other recognizers somehow...",
                "createdAt": "2021-05-20T01:00:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 3 untriaged digest(s) on patchset 4.\nView them at https://flutter-gold.skia.org/cl/github/82575",
                "createdAt": "2021-05-20T01:03:12Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "PTAL at the current approach",
                "createdAt": "2021-05-20T22:22:30Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "This should probably be widened to include all touch gestures on the web, but maybe we should study that a bit more and handle the easier desktop case first?",
                "createdAt": "2021-05-21T00:26:03Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "By conditionally attaching the focus to the text field instead of the editable text, I can drop the entire FocusArea concept.",
                "createdAt": "2021-05-27T00:08:23Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Without weird hacks, the way I think we could solve this is to slightly re-imagine how the text field decoration of editable text works. rather than wrapping the editable text, create a builder that allows the wrapping text fields to inject their decorations into the widget. That would allow the focus node to always surround all decoration without special cases for focus attachment.",
                "createdAt": "2021-05-27T21:59:09Z"
            },
            {
                "author": "chunhtai",
                "bodyText": "This seems to turn into a big refactor. cc @LongCatIsLooong who may have a better idea how to handle this",
                "createdAt": "2021-05-27T22:04:15Z"
            },
            {
                "author": "gspencergoog",
                "bodyText": "Something we should do eventually is convert the editable text to use a Focus widget instead of doing special things with a focus node and its own focus attachment. It's the only thing that uses FocusAttachment other than Focus, and it would be better if we could just say that all focus operations should use a Focus widget, in order to centralize the code for that. It will also require some reworking of things, since it'll have to discover the focus node from the Focus widget (via Focus.of(context)) and pass it down to the render object, but I think it would be a good idea. That might also help with this problem, to pull some of the focus stuff out of editable text.",
                "createdAt": "2021-05-27T22:12:21Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "How would moving the EditableText to use a FocusNode help the issue of the Focus needing to include the parent decoration?",
                "createdAt": "2021-05-27T22:17:15Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "the other approach would be to remove the text field specific work arounds for this change, let it be broken, and then prioritize a fix later.",
                "createdAt": "2021-05-27T22:18:34Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "I updated this to remove the text field specific hacks. currently investigating how to correctly \"reset\" focus so that tab still works",
                "createdAt": "2021-05-27T23:52:34Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Tab focus works now",
                "createdAt": "2021-06-04T00:43:55Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "PTAL",
                "createdAt": "2021-06-04T00:44:00Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "FYI @renyou , not sure what is up with the google testing on this PR",
                "createdAt": "2021-06-09T00:05:29Z"
            },
            {
                "author": "renyou",
                "bodyText": "It seems some google internal tests may be very slow and I am going to increase the timeout threshold. Hopefully it can resolve this.",
                "createdAt": "2021-06-09T00:20:30Z"
            },
            {
                "author": "renyou",
                "bodyText": "@jonahwilliams  Did you trigger a full test on this PR?",
                "createdAt": "2021-06-09T00:25:43Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "yes, since it is a potentially a substantial change I wanted to be sure we ran as many tests as possible...",
                "createdAt": "2021-06-09T00:30:41Z"
            },
            {
                "author": "renyou",
                "bodyText": "Yes! The tests are actually all done, just took longer to analyze all the test results. I manually set the results. Everything looks good!",
                "createdAt": "2021-06-09T00:33:24Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "\ud83c\udf8a",
                "createdAt": "2021-06-09T00:35:36Z"
            },
            {
                "author": "HansMuller",
                "bodyText": "@jonahwilliams - does this PR address #74354?",
                "createdAt": "2021-06-10T17:19:04Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "This only handles clicks via mouse on desktop and mobile web, not taps - though the PR also mentions clicks. I'm not sure if that is trying to fix the same issue as this or a different input connection based focus issue",
                "createdAt": "2021-06-10T17:33:35Z"
            },
            {
                "author": "jpnurmi",
                "bodyText": "On Linux, native GNOME/GTK apps don't reset focus when clicking outside text fields.\nThe focused render object inside TextField doesn't cover the entire TextField? Please check #85732\nIs it not possible to have buttons that don't reset focus? #76072 (comment)",
                "createdAt": "2021-07-01T22:17:34Z"
            },
            {
                "author": "Hixie",
                "bodyText": "If we want this behaviour, why not just put a Focus widget around the route?\n...but I'm not convinced we want this behaviour. It's not what happens on Windows and macOS as far as I can tell.",
                "createdAt": "2021-07-05T21:50:50Z"
            },
            {
                "author": "Hixie",
                "bodyText": "I think this is just something we want on Web, and on Web the behaviour is just that the root of the tree is itself focusable, no need to check whether a tap would have focused a node and all that.",
                "createdAt": "2021-07-05T21:52:16Z"
            }
        ],
        "commentCount": 31
    },
    {
        "number": 75027,
        "title": "[flutter_tools] switch dart defines to base64 to avoid windows control characters",
        "author": "Jonah Williams",
        "state": "MERGED",
        "closedAt": "2021-02-02T17:10:49Z",
        "createdAt": "2021-01-29T23:10:40Z",
        "comments": [
            {
                "author": "jonahwilliams",
                "bodyText": "I did also make various attempts to escape % with no success",
                "createdAt": "2021-02-01T19:01:20Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "lgtm w/ question: was it ever expected that the encoded defines would need to be human readable?\n\nNo, not in the current format. If we wanted to make an earnest attempt to support that, I think the proper way would be to allow providing a file path which contained the dart defines in a simple format (not yaml), and then having the tool read that.",
                "createdAt": "2021-02-01T19:52:23Z"
            },
            {
                "author": "shinayser",
                "bodyText": "Guys, this feature caused a lot of problems on Flutter 2.2. Many reports going out in every forum Iook of people complaining about codes breaking and stopped working on Android. Myself included: #82865\nThis is breaking change and should be reported for people that are updating to Flutter 2.2",
                "createdAt": "2021-05-19T17:49:24Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "@shinayser the gradle (or xcode) API is not considered stable and may change arbitrarily between versions. The top level flutter command --dart-define API did not change for this release",
                "createdAt": "2021-05-19T17:55:51Z"
            },
            {
                "author": "shinayser",
                "bodyText": "@shinayser the gradle (or xcode) API is not considered stable and may change arbitrarily between versions. The top level flutter command --dart-define API did not change for this release\n\nSo what is the recommended way of using this api, since it can break at any time?",
                "createdAt": "2021-05-19T17:57:28Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "I guess I don't understand your usecase,  does flutter build apk/appbundle/aar --dart-define=.. not work for you?",
                "createdAt": "2021-05-19T18:01:58Z"
            },
            {
                "author": "shinayser",
                "bodyText": "Yes, this works. Our problem is capturing the key-value pairs on the build.gradle app file.\nBefore this MR we were capuring it by using the URLDecoder and since upgrading to 2.2 it breaks totally, because now the strings are in Base86 format.\nMore details here #82865 (comment)",
                "createdAt": "2021-05-19T18:04:48Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "What is the advantage of specifying this in build.gradle?",
                "createdAt": "2021-05-19T18:05:56Z"
            },
            {
                "author": "shinayser",
                "bodyText": "We need one of the dart-define values coming from our CI and that key is required by the third-part library to be passed in the AndroidManifest.",
                "createdAt": "2021-05-19T18:09:11Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "I still don't really understand what specifying all of these defines in the build.gradle buys you though. Whatever automation you're using to get these values could handle the android manifest and the flutter build command separately",
                "createdAt": "2021-05-19T18:11:34Z"
            },
            {
                "author": "shinayser",
                "bodyText": "We capture the keys of the Faster (the third-aprt library) in the build.gradle and add them to the manifestPlaceholders:\ndef dartEnvironmentVariables = [];\n\nif (project.hasProperty('dart-defines')) {\n\tdartEnvironmentVariables = project.property('dart-defines')\n\t\t\t.split(',')\n\t\t\t.collectEntries { entry ->\n\t\t\t\tdef byteArray = Base64.getDecoder().decode(entry)\n\t\t\t\tdef decodedString = new String(byteArray)\n\t\t\t\tdef pair = decodedString.split('=')\n\t\t\t\t[(pair.first()): pair.last()]\n\t\t\t}\n}\n\n\n\n....\n\n\n\n\n   defaultConfig {\n        manifestPlaceholders = [FASTER_APP_KEY_ANDROID: dartEnvironmentVariables.FASTER_APP_KEY_ANDROID,\n                                FASTER_APP_SECRET_ANDROID: dartEnvironmentVariables.FASTER_APP_SECRET_ANDROID\n        ]\n    }\n\nThen, we add them to the manifest:\n  <meta-data\n                android:name=\"com.movile.faster.sdk.application_key\"\n                android:value=\"${FASTER_APP_KEY_ANDROID}\" />\n\n        <meta-data\n                android:name=\"com.movile.faster.sdk.application_secret\"\n                android:value=\"${FASTER_APP_SECRET_ANDROID}\" />\n\nI don't understand your suggestiong but we are very open to hear a better strategy you could share with us",
                "createdAt": "2021-05-19T18:14:57Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "So you are using flutter to build the app, but then you have some additional steps in gradle to grab some of the defines and  stick them elsewhere in your build?",
                "createdAt": "2021-05-19T18:34:53Z"
            },
            {
                "author": "shinayser",
                "bodyText": "Exactly. The app is fully written in Flutter, but we have a plugin that needs those setups in the AndroidManifest.",
                "createdAt": "2021-05-19T18:40:25Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "what if we provided an easy way to pass project configuration through the gradle? You might have to specify the value twice, but then you'd have an exact project key and wouldn't need to parse anything from defines?",
                "createdAt": "2021-05-19T18:41:47Z"
            },
            {
                "author": "shinayser",
                "bodyText": "Interesting and sounds good! Just curious about the \"specify value twice\". What you mean by that? Got any idea in mind?",
                "createdAt": "2021-05-19T18:46:48Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "suppose you had a key=value pair, and you wanted to use it both as a dart-define and in your build.gradle:\nflutter build apk --dart-define=key=value --gradle-project=key=value (flag name TBD)\nthen in your build.gradle:\ndef valueINeed;\n\nif (project.hasProperty('key')) {\n\tvalueINeed = project. property('key').somethingAsStringIMAfkRightNow()\n\t...",
                "createdAt": "2021-05-19T18:49:49Z"
            },
            {
                "author": "shinayser",
                "bodyText": "Humm... this would workd but I am afraid that this duplication can be bad if a project has multiple other defines. There isn't a way to accessing the dart-defines just like you proposed?",
                "createdAt": "2021-05-19T18:53:13Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "The defines are only available in the gradle project as a pass through, and need to be encoded to account for escaping issues. I guess we could move the encoding to the invocation of the flutter task? That would leave them as plain text in the project config.",
                "createdAt": "2021-05-19T18:55:43Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "TBH I don't really like that solution because it wouldn't match the other platforms. We're definitely not going to move the encoding to the xcode project file",
                "createdAt": "2021-05-19T18:57:03Z"
            },
            {
                "author": "shinayser",
                "bodyText": "TBH I don't really like that solution because it wouldn't match the other platforms. We're definitely not going to move the encoding to the xcode project file\n\nYes definetly. To be honest, the way it is workign right now is working fine, but the problem is the change caused apps to break by simply upgrading to flutter 2.2. A clearer documentation of this is enough since it is a more rare case.",
                "createdAt": "2021-05-19T19:08:58Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "For your specific use-case, I think you should consider the --gradle-project feature. Yes it would be bad for 1000s of defines, but if you only need one or two...",
                "createdAt": "2021-05-19T19:11:25Z"
            },
            {
                "author": "shinayser",
                "bodyText": "For your specific use-case, I think you should consider the --gradle-project feature. Yes it would be bad for 1000s of defines, but if you only need one or two...\n\nSure, in my usecase it works fine. I am just wondering for other projects. And  just like you said, this could scale porly for multiple platforms. like:\nflutter build apk --dart-define=key=value --gradle-project=key=value --windows-project=key=value --linux-project=key=value  --futurePlatformNonExistentIn2021=key=value",
                "createdAt": "2021-05-19T19:14:10Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "OK, lets not worry about other projects that may or may not exist then \ud83d\ude04",
                "createdAt": "2021-05-19T19:15:07Z"
            },
            {
                "author": "shinayser",
                "bodyText": "Sure thing! My point is just that we already have a \"generic way\" of passing the arguments to all the platforms, via dart-defines.  I personally prefer things the scale well vs others that do not.",
                "createdAt": "2021-05-19T19:24:20Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "But again, dart-defines is not a generic way to do this, its just a way to set environment constants in dart.",
                "createdAt": "2021-05-19T19:26:39Z"
            },
            {
                "author": "shinayser",
                "bodyText": "Humm... you saying that the dart-defines can't be accessed directly on all the platforms?\nIf so, them the task should not be creating new sub commands for the flutter build command, but instead 'Create a way of accessing the dart-defines in every platform'",
                "createdAt": "2021-05-19T19:43:28Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "are you having problems passing configuration on the other platforms, or just on android?",
                "createdAt": "2021-05-19T19:47:35Z"
            },
            {
                "author": "shinayser",
                "bodyText": "Nope! Only Android for now.",
                "createdAt": "2021-05-19T20:02:11Z"
            },
            {
                "author": "shinayser",
                "bodyText": "Like I said, I am very satisfied with the current way of accessing them. Just had this fflutter 2.2 problem that caused us some headache since yesterday to find the root of the problem xD",
                "createdAt": "2021-05-19T20:03:03Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "then I don't really understand what your concern is with the solution I presented above is. I'm interested in helping find a better solution here, but you need to understand that the way you are using them isn't really supported and may arbitrarily break in the future.",
                "createdAt": "2021-05-19T20:03:46Z"
            },
            {
                "author": "shinayser",
                "bodyText": "My concern was just the scalability of the proposal. But you have more knowledge of this subject than me, so if you think it is the best soluttion then I am fine with it too.",
                "createdAt": "2021-05-19T20:09:12Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "implemented in #82941",
                "createdAt": "2021-05-19T20:37:07Z"
            }
        ],
        "commentCount": 32
    },
    {
        "number": 74469,
        "title": "Implement dartPluginClass support for plugins",
        "author": "Emmanuel Garcia",
        "state": "MERGED",
        "closedAt": "2021-02-19T17:22:46Z",
        "createdAt": "2021-01-22T06:14:01Z",
        "comments": [
            {
                "author": "blasten",
                "bodyText": "@jonahwilliams what do you think of this approach?  It supports hot-reload, etc...  If it makes sense, I will still need to get the metadata from pubspec.yaml, which I don't think it's accessible at this point.",
                "createdAt": "2021-01-22T06:15:52Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "IIRC this won't work as is without more changes in the resident_runner or the hot reload pipeline. The development compiler needs to be given the same entrypoint to compile as the app was built with - otherwise I don't believe hot reloads will work until a hot restart - and in this case that hot restart would blow away the plugin callback.\nThis will also require some special casing for g3, since they'll likely generate that file in a different way.",
                "createdAt": "2021-01-22T17:23:27Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Because this change affects the hot reload/restart development cycle, its critical that we also get some integration tests running it with actual dart plugins wired up - perhaps synthetic to reduce dependencies.\nThis could either be done in the devicelab hostonly, or you could add an affordance for wiring up dart plugins for the flutter tester device and run in the tools integration shard",
                "createdAt": "2021-01-26T19:04:17Z"
            },
            {
                "author": "blasten",
                "bodyText": "@jonahwilliams are there any flutter run e2e test for desktop?",
                "createdAt": "2021-01-26T19:12:49Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "I believe the standard hot reload/hot restart tests run on all platforms now (@stuartmorgan ?) but they do not have plugins.",
                "createdAt": "2021-01-26T19:14:17Z"
            },
            {
                "author": "stuartmorgan",
                "bodyText": "I believe the standard hot reload/hot restart tests run on all platforms now (@stuartmorgan ?) but they do not have plugins.\n\nIt runs for macOS, I'm very close on Windows, Linux is currently blocked on some infra help getting the headless VMs to be able to launch Flutter apps. (The test case I'm working on is the devicelab hot reload test that you brought up for macOS a while back; currently we don't have any devicelab tests for Windows and Linux).",
                "createdAt": "2021-01-26T19:25:08Z"
            },
            {
                "author": "stuartmorgan",
                "bodyText": "We could get it running for macOS now though, and then bring Windows and Linux up soon once the desktop devicelab infrastructure is in place, assuming it's mostly cross-platform code.",
                "createdAt": "2021-01-26T19:26:26Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Something else that needs to be considered - suppose a plugin incorrectly implements this sort of registerWith functionality (typo or otherwise). Are we just going to spit out a compilation error (in a file most users will not know about)? Do we have any publishing validation that these interfaces are implemented? Maybe we could do more runtime checks in a \"debug\" mode so that these errors could be handled?",
                "createdAt": "2021-01-27T18:10:06Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Also, if the engine is going to invoke this method - where do the errors go?",
                "createdAt": "2021-01-27T18:10:33Z"
            },
            {
                "author": "blasten",
                "bodyText": "Something else that needs to be considered - suppose a plugin incorrectly implements this sort of registerWith functionality (typo or otherwise)\n\n@jonahwilliams how is it different than Android & iOS in regard to consuming a 3P dependency?",
                "createdAt": "2021-01-27T18:12:24Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Today if someone adds a dependency on a bad plugin for iOS/android what happens?",
                "createdAt": "2021-01-27T18:14:43Z"
            },
            {
                "author": "blasten",
                "bodyText": "If there's an error in the static registerWith method, it shows the stacktrace that includes the generated registry file.\nIn the case of a Dart registry, this is what the error looks like:\nE/flutter ( 9432): #0      _registerPlugins (.../.dart_tool/flutter_build/generated_main.dart:14:3)\nE/flutter ( 9432): #1      _runMainZoned.<anonymous closure>.<anonymous closure> (dart:ui/hooks.dart:135:29)\nE/flutter ( 9432): #2      _rootRun (dart:async/zone.dart:1354:13)\nE/flutter ( 9432): #3      _CustomZone.run (dart:async/zone.dart:1258:19)\nE/flutter ( 9432): #4      _runZoned (dart:async/zone.dart:1788:10)\nE/flutter ( 9432): #5      runZonedGuarded (dart:async/zone.dart:1776:12)\nE/flutter ( 9432): #6      _runMainZoned.<anonymous closure> (dart:ui/hooks.dart:133:5)\nE/flutter ( 9432): #7      _delayEntrypointInvocation.<anonymous closure> (dart:isolate-patch/isolate_patch.dart:283:19)\nE/flutter ( 9432): #8      _RawReceivePortImpl._handleMessage (dart:isolate-patch/isolate_patch.dart:184:12)",
                "createdAt": "2021-01-27T18:19:59Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Have you thought about how this is going to work with existing error reporting solutions like crashlytics or other Zone based error handlers?",
                "createdAt": "2021-01-27T18:21:07Z"
            },
            {
                "author": "blasten",
                "bodyText": "I'd expect errors of this kind to be very uncommon, and only possible if a plugin author didn't bother testing the example app. Even more unlikely would be to see such plugin gaining usage.",
                "createdAt": "2021-01-27T18:25:40Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "to handle the case of static errors, in debug mode you could wrap the whole thing in a try catch that caught a NSM, and then used some additional info to point users to offending plugins.",
                "createdAt": "2021-01-27T18:26:50Z"
            },
            {
                "author": "blasten",
                "bodyText": "Somehow:\ntry {\n  /// something\n } on NoSuchMethodError catch(error) {\n    print('Dart plugins had an error: \\${error}');\n}\n\ndidn't work. Is this correct?",
                "createdAt": "2021-01-27T19:40:10Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "For debug mode you could catch everything instead, but this should be easy to simulate locally to get something working (i.e. in dart pad)",
                "createdAt": "2021-01-27T19:49:37Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Oh right, it will be a compile error if the method is missing/misspelled",
                "createdAt": "2021-01-27T19:56:14Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "so there isn't anything to catch",
                "createdAt": "2021-01-27T19:56:23Z"
            },
            {
                "author": "blasten",
                "bodyText": "I added the e2e test. The test needs to be checked in prior to enabling it on LUCI. PTAL",
                "createdAt": "2021-01-28T02:30:16Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Shipping initial support for this and losing the ability to remove plugins from a pubspec doesn't seem like a reasonable tradeoff to me. I don't really have the full picture on how important this feature is, so I'd let @zanderso make a call as to whether that is reasonable",
                "createdAt": "2021-01-29T18:38:47Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "The way that I would implement correct rebuilding of the registrant is to hoist the generation into a new Target instance, make the inputs the pubspec.yaml, the output the generated file. Then make KernelSnapshot depend on it.\nYou could re-use the same rule in the resident runner, with the localizations as an example of how to hook it up. Then all of the existing invalidation logic would work with it",
                "createdAt": "2021-01-29T20:08:32Z"
            },
            {
                "author": "blasten",
                "bodyText": "I'd really like to merge this PR this week. I initially sent a small patch 453c320 to get feedback,  and make everyone's review easier.  Please let me know how you'd like to proceed.",
                "createdAt": "2021-02-02T02:48:26Z"
            },
            {
                "author": "blasten",
                "bodyText": "As long as this PR doesn't introduce a tool crash on a reload with an added/removed plugin, I'm okay with handling in a follow-up PR. Please file an issue and note it in a TODO(blasten).\n\nAdding or removing the plugin from pubspec.yaml doesn't trigger a crash as Hot restart doesn't fetch new dependencies.\nThe following sequence causes an error, but no crash:\n\nadd plugin to pubspec.yaml\nflutter run\nremove plugin from pubspec.yaml\nflutter pub get\nTrigger hot restart\n\nError: Could not resolve the package 'url_launcher_linux' in 'package:url_launcher_linux/url_launcher_linux.dart'.\nError: Could not resolve the package 'url_launcher_macos' in 'package:url_launcher_macos/url_launcher_macos.dart'.\n.dart_tool/flutter_build/generated_main.dart:9:8: Error: Not found: 'package:url_launcher_linux/url_launcher_linux.dart'\nimport 'package:url_launcher_linux/url_launcher_linux.dart';\n       ^\n.dart_tool/flutter_build/generated_main.dart:10:8: Error: Not found: 'package:url_launcher_macos/url_launcher_macos.dart'\nimport 'package:url_launcher_macos/url_launcher_macos.dart';\n       ^\n.dart_tool/flutter_build/generated_main.dart:15:7: Error: Getter not found: 'UrlLauncherPlugin'.\n      UrlLauncherPlugin.registerWith();\n      ^^^^^^^^^^^^^^^^^\n.dart_tool/flutter_build/generated_main.dart:17:7: Error: Getter not found: 'UrlLauncherPlugin'.\n      UrlLauncherPlugin.registerWith();\n      ^^^^^^^^^^^^^^^^^\nPerforming hot restart...                                              \u28feError: Could not resolve the package 'url_launcher_linux' in 'package:url_launcher_linux/url_launcher_linux.dart'.\nError: Could not resolve the package 'url_launcher_macos' in 'package:url_launcher_macos/url_launcher_macos.dart'.\n.dart_tool/flutter_build/generated_main.dart:9:8: Error: Not found: 'package:url_launcher_linux/url_launcher_linux.dart'\nimport 'package:url_launcher_linux/url_launcher_linux.dart';\n       ^\n.dart_tool/flutter_build/generated_main.dart:10:8: Error: Not found: 'package:url_launcher_macos/url_launcher_macos.dart'\nimport 'package:url_launcher_macos/url_launcher_macos.dart';\n       ^\n.dart_tool/flutter_build/generated_main.dart:15:7: Error: Getter not found: 'UrlLauncherPlugin'.\n      UrlLauncherPlugin.registerWith();\n      ^^^^^^^^^^^^^^^^^\n.dart_tool/flutter_build/generated_main.dart:17:7: Error: Getter not found: 'UrlLauncherPlugin'.\n      UrlLauncherPlugin.registerWith();\n      ^^^^^^^^^^^^^^^^^",
                "createdAt": "2021-02-03T02:32:48Z"
            },
            {
                "author": "zanderso",
                "bodyText": "@blasten Thanks for checking =) The only open items on my side are adding the TODO and the question about yaml validation.",
                "createdAt": "2021-02-03T18:01:09Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "I don't really agree. The tool may not be crashing, but the user has no way of fixing that error without quitting and restarting - it might as well be a crash. If you think that change would be better done as a follow up because of the scope/size, I'm open to it, but we can't ship another stable without that implemented.",
                "createdAt": "2021-02-03T21:29:19Z"
            },
            {
                "author": "blasten",
                "bodyText": "I don't really agree. The tool may not be crashing, but the user has no way of fixing that error without quitting and restarting - it might as well be a crash.\n\nI think this is currently true for a plugin that supports iOS and/or Android. For example, if you remove a plugin that provides implementation for a method channel,  then wouldn't that cause an exception if the platform implementation tries to reach the Dart code that no longer exists?\nRegenerating the main dart file on hot restart isn't hard, I implemented that originally. But I removed it after your comment #74469 (comment) as doing it without changing those tests involve additional changes, and therefore expands the scope of this PR.",
                "createdAt": "2021-02-03T22:22:00Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "From offline discussion, we can move forward with this PR as is, provided that the plugin removal issue is addressed as a release blocker",
                "createdAt": "2021-02-04T18:30:35Z"
            },
            {
                "author": "zanderso",
                "bodyText": "From the PR review meeting: I think this one is still waiting on some of the items in #74469 (review). Please correct me if I'm mistaken!",
                "createdAt": "2021-02-11T21:35:42Z"
            },
            {
                "author": "jmagman",
                "bodyText": "Re: test failures\nI added url_launcher: and url_launcher_macos: to a project pubspec.  Before this change, .flutter-plugins-dependencies looks like:\n  \"plugins\": {\n    \"ios\": [\n      {\n        \"name\": \"url_launcher\",\n        \"path\": \"{path}\",\n        \"dependencies\": []\n      }\n    ],\n    \"android\": [\n      {\n        \"name\": \"url_launcher\",\n        \"path\": \"{path}\",\n        \"dependencies\": []\n      }\n    ],\n    \"macos\": [\n      {\n        \"name\": \"url_launcher_macos\",\n        \"path\": \"{path}\",\n        \"dependencies\": []\n      }\n    ],\n    \"linux\": [\n      {\n        \"name\": \"url_launcher_linux\",\n        \"path\": \"{path}\",\n        \"dependencies\": []\n      }\n    ],\n    \"windows\": [\n      {\n        \"name\": \"url_launcher_windows\",\n        \"path\": \"{path}\",\n        \"dependencies\": []\n      }\n    ],\n    \"web\": [\n      {\n        \"name\": \"url_launcher_web\",\n        \"path\": \"{path}\",\n        \"dependencies\": []\n      }\n    ]\n  },\n\nOn this PR url_launcher is listed as a plugin for Windows, Linux, and macOS, with the platform-specific variant as a dependency.\n  \"plugins\": {\n    \"ios\": [\n      {\n        \"name\": \"url_launcher\",\n        \"path\": \"{path}\",\n        \"dependencies\": []\n      }\n    ],\n    \"android\": [\n      {\n        \"name\": \"url_launcher\",\n        \"path\": \"{path}\",\n        \"dependencies\": []\n      }\n    ],\n    \"macos\": [\n      {\n        \"name\": \"url_launcher\",\n        \"path\": \"{path}\",\n        \"dependencies\": [\n          \"url_launcher_macos\"\n        ]\n      },\n      {\n        \"name\": \"url_launcher_macos\",\n        \"path\": \"{path}\",\n        \"dependencies\": []\n      }\n    ],\n    \"linux\": [\n      {\n        \"name\": \"url_launcher\",\n        \"path\": \"{path}\",\n        \"dependencies\": [\n          \"url_launcher_linux\"\n        ]\n      },\n      {\n        \"name\": \"url_launcher_linux\",\n        \"path\": \"{path}\",\n        \"dependencies\": []\n      }\n    ],\n    \"windows\": [\n      {\n        \"name\": \"url_launcher\",\n        \"path\": \"{path}\",\n        \"dependencies\": [\n          \"url_launcher_windows\"\n        ]\n      },\n      {\n        \"name\": \"url_launcher_windows\",\n        \"path\": \"{path}\",\n        \"dependencies\": []\n      }\n    ],\n    \"web\": [\n      {\n        \"name\": \"url_launcher_web\",\n        \"path\": \"{path}\",\n        \"dependencies\": []\n      }\n    ]\n  },\n\nIf that's the intended behavior of this PR, those tests should be updated.",
                "createdAt": "2021-02-18T01:04:41Z"
            },
            {
                "author": "blasten",
                "bodyText": "Thanks @jmagman. That seems correct based on my changes. (which I had to review again :))",
                "createdAt": "2021-02-18T01:11:36Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux flutter_plugins has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2021-02-18T04:26:03Z"
            }
        ],
        "commentCount": 32
    },
    {
        "number": 70747,
        "title": "Roll Engine from 35a0b9fe6827 to 4b859cee939a (4 revisions)",
        "author": "engine-flutter-autoroll",
        "state": "CLOSED",
        "closedAt": "2020-11-19T17:51:34Z",
        "createdAt": "2020-11-18T07:45:41Z",
        "comments": [
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-18T08:48:03Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-18T09:53:03Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-18T10:58:04Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-18T12:03:02Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-18T13:08:02Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-18T14:13:04Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-18T15:18:03Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-18T16:23:04Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-18T17:28:04Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-18T18:33:04Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-18T19:38:03Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-18T20:43:04Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-18T21:48:04Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-18T22:53:02Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-18T23:58:04Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-19T01:03:04Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-19T02:08:04Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-19T03:13:04Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-19T04:18:05Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-19T05:23:04Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-19T06:28:04Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-19T07:33:05Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-19T08:38:04Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-19T09:43:05Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-19T10:48:04Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-19T11:53:06Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-19T12:58:04Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-19T14:03:05Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-19T15:08:04Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-19T16:13:05Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-19T17:18:05Z"
            },
            {
                "author": "engine-flutter-autoroll",
                "bodyText": "Commit queue failed; closing this roll.",
                "createdAt": "2020-11-19T17:51:33Z"
            }
        ],
        "commentCount": 32
    },
    {
        "number": 48223,
        "title": "Add HeroMode widget",
        "author": "najeira",
        "state": "MERGED",
        "closedAt": "2020-10-31T04:23:03Z",
        "createdAt": "2020-01-06T02:44:32Z",
        "comments": [
            {
                "author": "justinmc",
                "bodyText": "@najeira Are you still available to help finish up this PR?",
                "createdAt": "2020-02-28T00:08:51Z"
            },
            {
                "author": "najeira",
                "bodyText": "Yes! Thanks for the review. Sorry for noticing late.\nI will update.",
                "createdAt": "2020-02-28T01:50:09Z"
            },
            {
                "author": "justinmc",
                "bodyText": "Cool, no problem!  Thanks for taking a look at my review.",
                "createdAt": "2020-02-28T16:24:56Z"
            },
            {
                "author": "najeira",
                "bodyText": "Some CI tests have failed.\n|   error \u2022 The getter 'subtitle1' isn't defined for the class 'TextTheme' \u2022 lib/src/views/seamail.dart:196:104 \u2022 undefined_getter\n|   error \u2022 The argument type 'dynamic' can't be assigned to the parameter type 'TextStyle' \u2022 lib/src/views/seamail.dart:199:35 \u2022 argument_type_not_assignable\n|   error \u2022 The getter 'bodyText1' isn't defined for the class 'TextTheme' \u2022 lib/src/views/seamail.dart:199:58 \u2022 undefined_getter\n|   error \u2022 The argument type 'dynamic' can't be assigned to the parameter type 'TextStyle' \u2022 lib/src/views/seamail.dart:467:23 \u2022 argument_type_not_assignable\n\n...\n\n\nShould I rebase?",
                "createdAt": "2020-03-03T06:06:09Z"
            },
            {
                "author": "justinmc",
                "bodyText": "@najeira Yes, it looks like that's not caused by your changes.  Rebase with master (or merge master) and hopefully it will go away.  And let me know if you're ready for me to review again.  Thanks!",
                "createdAt": "2020-03-05T23:41:09Z"
            },
            {
                "author": "chunhtai",
                "bodyText": "I cannot reproduce the original error, and #28042 seems to be fixed.\nWhat is this pr aim to fix?",
                "createdAt": "2020-03-26T17:40:27Z"
            },
            {
                "author": "najeira",
                "bodyText": "Explanation of reproduction procedure was not enough.\nTry:\n\nlaunch app\nshow heart tab\npush \"Next out tab\"\n\nError:\n\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550 Exception caught by scheduler library \u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\nThe following assertion was thrown during a scheduler callback:\nThere are multiple heroes that share the same tag within a subtree.\n\nWithin each subtree for which heroes are to be animated (i.e. a PageRoute subtree), each Hero must have a unique non-null tag.\nIn this case, multiple heroes had the following tag: hero tag\n\nHere is the subtree for one of the offending heroes: Hero\n  tag: hero tag\n  dependencies: [_ModalScopeStatus]\n  state: _HeroState#b2991\nWhen the exception was thrown, this was the stack: \n#0      Hero._allHeroesFor.inviteHero.<anonymous closure> (package:flutter/src/widgets/heroes.dart:266:11)\n#1      Hero._allHeroesFor.inviteHero (package:flutter/src/widgets/heroes.dart:277:8)\n#2      Hero._allHeroesFor.visitor (package:flutter/src/widgets/heroes.dart:305:23)\n#3      MultiChildRenderObjectElement.visitChildren (package:flutter/src/widgets/framework.dart:5929:16)\n#4      Hero._allHeroesFor.visitor (package:flutter/src/widgets/heroes.dart:309:15)\n...\n\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550",
                "createdAt": "2020-03-27T02:31:52Z"
            },
            {
                "author": "goderbauer",
                "bodyText": "@chunhtai can you reproduce this with the additional steps?",
                "createdAt": "2020-03-27T17:28:47Z"
            },
            {
                "author": "justinmc",
                "bodyText": "I got a crash when I followed those steps on the iOS simulator, and I confirmed that this PR fixes it.",
                "createdAt": "2020-03-27T18:05:28Z"
            },
            {
                "author": "chunhtai",
                "bodyText": "I see, yes i can reproduce it now. Can you open a new issue about this? It is fixing a different problem from  #28042",
                "createdAt": "2020-03-27T19:12:05Z"
            },
            {
                "author": "najeira",
                "bodyText": "Thanks for the review!\nI'm not good at English. I'm not sure how to fix any documentation issues.\nI will check and respond to issues regarding the implementation.",
                "createdAt": "2020-03-28T01:01:59Z"
            },
            {
                "author": "justinmc",
                "bodyText": "@najeira How's it going with these last few comments?  Let me know if anything isn't clear about the documentation and I can help out by writing the English.",
                "createdAt": "2020-04-10T21:30:00Z"
            },
            {
                "author": "najeira",
                "bodyText": "updated comments",
                "createdAt": "2020-04-27T05:45:52Z"
            },
            {
                "author": "najeira",
                "bodyText": "@chunhtai Try reloading.\nThen you can see this:",
                "createdAt": "2020-04-28T01:32:27Z"
            },
            {
                "author": "chunhtai",
                "bodyText": "@chunhtai Try reloading.\nThen you can see this:\n\n\nWe were discussing about using ProxyWidget instead of StatelessWidget",
                "createdAt": "2020-05-01T22:32:14Z"
            },
            {
                "author": "najeira",
                "bodyText": "Sorry for late. I will update it!",
                "createdAt": "2020-05-25T02:54:33Z"
            },
            {
                "author": "filipproch",
                "bodyText": "Hi @najeira , are you still working on this? I am interested in this functionality",
                "createdAt": "2020-08-22T08:02:03Z"
            },
            {
                "author": "najeira",
                "bodyText": "Sorry, I have no time to update now.\nIs ProxyWidget is suitable as a parent of HeroMode? In Flutter, there are few widgets having ProxyWidget as a parent. Similar TickerMode have StatelessWidget as their parent.\nOr is InheritedWidget appropriate for parent?\n@chunhtai",
                "createdAt": "2020-08-22T09:18:53Z"
            },
            {
                "author": "najeira",
                "bodyText": "I updated HeroMode to extends InheritedWidget.",
                "createdAt": "2020-09-15T08:03:16Z"
            },
            {
                "author": "najeira",
                "bodyText": "Could anybody show me an example using ProxyWidget and ProxyElement?",
                "createdAt": "2020-10-02T15:29:35Z"
            },
            {
                "author": "chunhtai",
                "bodyText": "Could anybody show me an example using ProxyWidget and ProxyElement?\n\nThe ProxyElement is for inheritedElement that it implement extra logic",
                "createdAt": "2020-10-02T16:22:20Z"
            },
            {
                "author": "najeira",
                "bodyText": "Could anybody show me an example using ProxyWidget and ComponentElement?",
                "createdAt": "2020-10-03T03:40:06Z"
            },
            {
                "author": "najeira",
                "bodyText": "Is Widget build(BuildContext context) => child; a heavy process to avoid?",
                "createdAt": "2020-10-03T03:42:12Z"
            },
            {
                "author": "najeira",
                "bodyText": "In my understanding, implementing HeroModeElement skips the call HeroMode.build.\nextends StatelessWidget:\n\nStatelessElement.build\nHeroMode.build\nreturned child widget is used\n\nextends ProxyWidget and impelement HeroModeElement:\n\nHeroModeElement.build\nreturned child widget is used\n\nIs this all? Please let me know if there are any other processes that affect performance.",
                "createdAt": "2020-10-03T03:51:46Z"
            },
            {
                "author": "chunhtai",
                "bodyText": "In my understanding, implementing HeroModeElement skips the call HeroMode.build.\nextends StatelessWidget:\n\nStatelessElement.build\nHeroMode.build\nreturned child widget is used\n\nextends ProxyWidget and impelement HeroModeElement:\n\nHeroModeElement.build\nreturned child widget is used\n\nIs this all? Please let me know if there are any other processes that affect performance.\n\nyes that is all as far as I know\n\nIs Widget build(BuildContext context) => child; a heavy process to avoid?\n\nIt is not a heavy process, but we can improve it by implementing the HeroModeElement which is not too much work.",
                "createdAt": "2020-10-05T16:19:14Z"
            },
            {
                "author": "najeira",
                "bodyText": "Widget build(BuildContext context) => child; is very very small task,  it is hard to find even in performance measurement. It does not allocate any widgets, just returns variable. I think that implementing the HeroModeElement is too much work to avoid its micro task. I'd rather keep the code simple than avoid performance issues that are too small to find.\nIf we should optimize it, it is better to do it in another PR together with the following classes:\n\nNotificationListener\nKeyedSubtree\nPageStorage\nPreferredSize\n\nThese widgets inherit StatelessWidget and do Widget build(BuildContext context) => child;, not inherit ProxyWidget. They are the same as this case.\nAdditionally: what do you think of this comment?\n\nStatelessElement uses Element._dirty, HeroModeElement can not use the variable because it class is in the outside. And it is not good to implement HeroModeElement in widgets/framework.dart.\n\n\nI want you to comment on which is preferable.\nCC: @justinmc @goderbauer",
                "createdAt": "2020-10-06T02:31:50Z"
            },
            {
                "author": "najeira",
                "bodyText": "diff: najeira/flutter@70815c7...a76023b",
                "createdAt": "2020-10-12T03:26:42Z"
            },
            {
                "author": "chunhtai",
                "bodyText": "@najeira it seems like this branch is outdated, can you try to rebase off latest master and see if you can fix the cirrus?",
                "createdAt": "2020-10-12T16:31:12Z"
            },
            {
                "author": "najeira",
                "bodyText": "I rebased this branch.",
                "createdAt": "2020-10-28T01:44:39Z"
            },
            {
                "author": "chunhtai",
                "bodyText": "@najeira\nI am not sure what is going on with the presubmit, but we have some infra change in the last couple of days. Can you rebase off the latest master again and see if it makes cirrus happy?",
                "createdAt": "2020-10-30T19:09:56Z"
            },
            {
                "author": "najeira",
                "bodyText": "I am very grateful for the long discussions and for helping me with my poor English. Thank you all.",
                "createdAt": "2020-11-01T11:31:31Z"
            },
            {
                "author": "justinmc",
                "bodyText": "Just saw that this was merged, thank you @najeira!",
                "createdAt": "2020-11-02T16:18:21Z"
            }
        ],
        "commentCount": 32
    },
    {
        "number": 29809,
        "title": "Fix text selection toolbar appearing under obstructions",
        "author": "yaheng",
        "state": "MERGED",
        "closedAt": "2019-05-06T18:18:10Z",
        "createdAt": "2019-03-22T18:38:37Z",
        "comments": [
            {
                "author": "googlebot",
                "bodyText": "Thanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\ud83d\udcdd Please visit https://cla.developers.google.com/ to sign.\nOnce you've signed (or fixed any issues), please reply here (e.g. I signed it!) and we'll verify it.\n\nWhat to do if you already signed the CLA\nIndividual signers\n\nIt's possible we don't have your GitHub username or you're using a different email address on your commit. Check your existing CLA data and verify that your email is set on your git commits.\n\nCorporate signers\n\nYour company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the Google project maintainer to go/cla#troubleshoot (Public version).\nThe email used to register you as an authorized contributor must be the email used for the Git commit. Check your existing CLA data and verify that your email is set on your git commits.\nThe email used to register you as an authorized contributor must also be attached to your GitHub account.\n\n\u2139\ufe0f Googlers: Go here for more info.",
                "createdAt": "2019-03-22T18:38:40Z"
            },
            {
                "author": "xster",
                "bodyText": "@justinmc could you take a first pass at this?",
                "createdAt": "2019-04-08T19:48:24Z"
            },
            {
                "author": "googlebot",
                "bodyText": "CLAs look good, thanks!\n\u2139\ufe0f Googlers: Go here for more info.",
                "createdAt": "2019-04-09T04:31:59Z"
            },
            {
                "author": "justinmc",
                "bodyText": "@jiisd Check out the failures under the \"analyze\" check when you get a chance.  There are some small linter failures to fix.",
                "createdAt": "2019-04-09T15:20:00Z"
            },
            {
                "author": "jiisd",
                "bodyText": "@jiisd Check out the failures under the \"analyze\" check when you get a chance. There are some small linter failures to fix.\n\n\ud83d\ude42 already fixed.",
                "createdAt": "2019-04-09T16:43:15Z"
            },
            {
                "author": "justinmc",
                "bodyText": "Thank you!\nOne more thing that I forgot to mention, sorry.  This will definitely need tests.\nThere are similar tests for the selection menu in https://github.com/flutter/flutter/blob/master/packages/flutter/test/material/text_field_test.dart#L887.  You can reuse some of that code to get the selection menu to appear in your test.  Then get its location with something like tester.getTopLeft(find.text('SELECT ALL')) and expect it to be above the TextField when it's not near the top of the screen and below the TextField when it is near the top of the screen.",
                "createdAt": "2019-04-09T17:27:17Z"
            },
            {
                "author": "matthew-carroll",
                "bodyText": "CC @xster @LongCatIsLooong we should check the native iOS behavior, and then pull down this branch and compare.",
                "createdAt": "2019-04-09T21:58:54Z"
            },
            {
                "author": "jiisd",
                "bodyText": "Thank you!\nOne more thing that I forgot to mention, sorry. This will definitely need tests.\nThere are similar tests for the selection menu in https://github.com/flutter/flutter/blob/master/packages/flutter/test/material/text_field_test.dart#L887. You can reuse some of that code to get the selection menu to appear in your test. Then get its location with something like tester.getTopLeft(find.text('SELECT ALL')) and expect it to be above the TextField when it's not near the top of the screen and below the TextField when it is near the top of the screen.\n\nThanks for your reminder!\nThe corresponding regression test logic has been added(this commit).\n\n\u279c  flutter git:(fix/issues_29808) \u2717 flutter test /Users/yaheng/.flutter_lib/packages/flutter/test/material/text_field_test.dart\n00:10 +130: All tests passed!",
                "createdAt": "2019-04-10T13:06:29Z"
            },
            {
                "author": "justinmc",
                "bodyText": "@jiisd The test looks good, thanks.  I confirmed that it fails without this fix.\nHow do you feel about increasing the distance from the input to the menu in Android so that the selection handles are visible?  It looks like native Android positions the menu so that the handles are visible.\nAndroid (native):\n\niOS looks fine I think, except problems unrelated to this PR like the position of the arrow.\niOS (native):\n\niOS (Flutter, this branch):",
                "createdAt": "2019-04-10T16:52:32Z"
            },
            {
                "author": "jiisd",
                "bodyText": "@justinmc Yep, on android, I think your idea of increasing distance is very appropriate and can make the user experience better.\nOn iOS, I have tried to make the arrow to adjust the left and right position dynamically before, but I haven't found an elegant solution. If I progress, I will submit the relevant PR again.",
                "createdAt": "2019-04-10T17:36:37Z"
            },
            {
                "author": "justinmc",
                "bodyText": "Thanks.  This is the issue about the arrow position FYI: #22576",
                "createdAt": "2019-04-10T17:45:15Z"
            },
            {
                "author": "xster",
                "bodyText": "The iOS arrow can be done in a separate PR (if you'd like to keep sending us PR :D)\nIt's tracked in #11274",
                "createdAt": "2019-04-10T22:37:28Z"
            },
            {
                "author": "jiisd",
                "bodyText": "How do you feel about increasing the distance from the input to the menu in Android so that the selection handles are visible? It looks like native Android positions the menu so that the handles are visible.\n\n@justinmc  This problem has been solved.\nAndroid (Flutter, this branch):",
                "createdAt": "2019-04-11T17:46:25Z"
            },
            {
                "author": "justinmc",
                "bodyText": "Thanks, the position looks good now!",
                "createdAt": "2019-04-11T22:04:36Z"
            },
            {
                "author": "justinmc",
                "bodyText": "Someone just opened a related issue: #31238\nWill this PR handle the menu overlapping the app bar?",
                "createdAt": "2019-04-18T16:26:55Z"
            },
            {
                "author": "jiisd",
                "bodyText": "@justinmc\nUnfortunately, our latest solution using dynamic computing is not yet effective in solving this problem, because I don't know how to get the display state of the top navigation bar and its height inside the input box.\nBut using the first way 3af06dd , which is comparing the input box to the top of the screen is less than a certain constant, can help to temporarily circumvent this problem.",
                "createdAt": "2019-04-20T16:57:43Z"
            },
            {
                "author": "jiisd",
                "bodyText": "@xster Thanks!\n[Breaking Change] The public interface of the abstract class TextSelectionControls\nDescription\nWhen repairing the problem of #29808, it found that the interface is no longer sufficient. In order to get a more accurate anchor point for the toolbar, some parameters are added to the relevant interface. You can get more details form #29809.\nThe path of the change class lib/src/widgets/text_selection.dart line:90.\nPrevious interface definition:\n  /// Builds a toolbar near a text selection.\n  ///\n  /// Typically displays buttons for copying and pasting text.\n  Widget buildToolbar(BuildContext context, Rect globalEditableRegion, Offset position, TextSelectionDelegate delegate);\n\nCurrent interface definition:\n  /// Builds a toolbar near a text selection.\n  ///\n  /// Typically displays buttons for copying and pasting text.\n  ///\n  /// [globalEditableRegion] is the TextField size of the global coordinate system\n  /// in logical pixels.\n  ///\n  /// The [position] is a general calculation midpoint parameter of the toolbar.\n  /// If you want more detailed position information, can use [endpoints]\n  /// to calculate it.\n  Widget buildToolbar(\n    BuildContext context,\n    Rect globalEditableRegion,\n    Offset position,\n    List<TextSelectionPoint> endpoints,\n    TextSelectionDelegate delegate,\n  );\nHow to update\nIf you have already used this interface, you should update it to the latest version and add the endpoints parameter.\nWe keep the position parameter because we think it's probably already used in subclasses.",
                "createdAt": "2019-04-30T11:41:35Z"
            },
            {
                "author": "justinmc",
                "bodyText": "@xster Any idea on the test failure? It seems unrelated. Something about gradle.",
                "createdAt": "2019-04-30T17:02:33Z"
            },
            {
                "author": "justinmc",
                "bodyText": "The failure went green after a rerun. I think this is ready to merge.",
                "createdAt": "2019-05-01T22:21:13Z"
            },
            {
                "author": "xster",
                "bodyText": "Yup, LGTM\nI copy edited the message a bit. @jiisd if you're ok with the edit, I'll send it out and give the community a day to give feedback. Thanks again for the fix.\n[Breaking Change] TextSelectionControls.buildToolbar signature adds another 'endpoint' argument\nIf you don't implement your own TextSelectionControls subclass, you can stop reading.\nDescription\nWhile fixing the problem of #29808, it was found that the TextSelectionControls.buildToolbar interface is no longer sufficient to adequately replicate the native behavior. In order to get a more accurate anchor point for the text selection toolbar, the selection's start and end positions are added to the function signature. You can get more details form #29809.\nIn lib/src/widgets/text_selection.dart:\nPrevious interface definition\n  /// Builds a toolbar near a text selection.\n  ///\n  /// Typically displays buttons for copying and pasting text.\n  Widget buildToolbar(\n    BuildContext context, \n    Rect globalEditableRegion, \n    Offset position, \n    TextSelectionDelegate delegate,\n  );\nbecomes\n  /// Builds a toolbar near a text selection.\n  ///\n  /// Typically displays buttons for copying and pasting text.\n  ///\n  /// [globalEditableRegion] is the TextField size of the global coordinate system\n  /// in logical pixels.\n  ///\n  /// The [position] is a general calculation midpoint parameter of the toolbar.\n  /// If you want more detailed position information, can use [endpoints]\n  /// to calculate it.\n  Widget buildToolbar(\n    BuildContext context,\n    Rect globalEditableRegion,\n    Offset position,\n    List<TextSelectionPoint> endpoints,\n    TextSelectionDelegate delegate,\n  );\nSpecifically List<TextSelectionPoint> endpoints was added.\nHow to update\nIf you currently implement this interface, you should update its signature to the latest version and add the endpoints parameter.\nFor backward compatibility, the position parameter (which is the midpoint between the 2 endpoint positions) was preserved.",
                "createdAt": "2019-05-01T22:35:09Z"
            },
            {
                "author": "jiisd",
                "bodyText": "@xster  Awesome thanks!",
                "createdAt": "2019-05-02T00:38:13Z"
            },
            {
                "author": "xster",
                "bodyText": "Actually on second thought, I sent you an invite to join our flutter-announce google group (to your 163.com). You can send the breaking change announcement yourself once you accept the invitation.",
                "createdAt": "2019-05-02T00:45:51Z"
            },
            {
                "author": "jiisd",
                "bodyText": "@xster The email from 163.com was rejected. Can you invite another account(gmail.com)?\nThanks!",
                "createdAt": "2019-05-02T05:49:13Z"
            },
            {
                "author": "xster",
                "bodyText": "Thanks, sent",
                "createdAt": "2019-05-02T06:01:23Z"
            },
            {
                "author": "jiisd",
                "bodyText": "Still failing, is the target email address of flutter-announce@googlegroups.com incorrectly?",
                "createdAt": "2019-05-02T06:20:34Z"
            },
            {
                "author": "xster",
                "bodyText": "Sorry, one of the permission settings wasn't set correctly. Your gmail address should have posting rights now.",
                "createdAt": "2019-05-02T06:26:08Z"
            },
            {
                "author": "jiisd",
                "bodyText": "It works!\nThanks.",
                "createdAt": "2019-05-02T06:34:03Z"
            },
            {
                "author": "dkwingsmt",
                "bodyText": "Since we\u2019re breaking the API, is it better to make parameters into a Details object (as in here) so that we can add more information in the future without breaking the code again and without having too many parameters?",
                "createdAt": "2019-05-02T16:53:07Z"
            },
            {
                "author": "xster",
                "bodyText": "I think it's mostly ok. The gesture events is a highly public API used by callback implementers everywhere.\nSince we might change the arguments in any signature in the future, the argument can be generally applied to all functions having a single data class as argument so it's non-breaking-modifiable :D\nSo we'd have to draw the line somewhere and for subclass overrides, I think it's ok.",
                "createdAt": "2019-05-03T18:50:27Z"
            },
            {
                "author": "justinmc",
                "bodyText": "Thanks so much for fixing this @jiisd!",
                "createdAt": "2019-05-06T18:36:03Z"
            },
            {
                "author": "FrankYan09",
                "bodyText": "we use Flutter 1.7.8+hotfix.4, still have this issue.",
                "createdAt": "2019-08-02T17:37:23Z"
            },
            {
                "author": "LongCatIsLooong",
                "bodyText": "@FrankYan09 could you create a new issue here https://github.com/flutter/flutter/issues/new/choose, preferably with screenshots and code to reproduce the issue so we would be able to identify the problem quickly?",
                "createdAt": "2019-08-02T17:53:26Z"
            }
        ],
        "commentCount": 32
    },
    {
        "number": 5295,
        "title": "Update Dart SDK to `1.19.0-dev.4.0`.",
        "author": "Phil Quitslund",
        "state": "CLOSED",
        "closedAt": "2016-08-10T23:00:14Z",
        "createdAt": "2016-08-08T22:32:35Z",
        "comments": [
            {
                "author": "abarth",
                "bodyText": "",
                "createdAt": "2016-08-08T22:45:26Z"
            },
            {
                "author": "abarth",
                "bodyText": "/home/travis/build/flutter/flutter/bin/cache/dart-sdk/bin/dart: /lib/x86_64-linux-gnu/libc.so.6: version GLIBC_2.16' not found (required by /home/travis/build/flutter/flutter/bin/cache/dart-sdk/bin/dart)`",
                "createdAt": "2016-08-08T22:45:56Z"
            },
            {
                "author": "abarth",
                "bodyText": "Looks like this version of dart requires a GLIBC that Travis doesn't have.",
                "createdAt": "2016-08-08T22:46:20Z"
            },
            {
                "author": "pq",
                "bodyText": "Yeah.  I'm tracking this down.  The dev compiler folks hit the same snag...",
                "createdAt": "2016-08-08T22:58:31Z"
            },
            {
                "author": "abarth",
                "bodyText": "Before landing this patch, we should make sure we understand the new OS requirements being introduced and update our documentation to reflect it.",
                "createdAt": "2016-08-08T23:07:22Z"
            },
            {
                "author": "pq",
                "bodyText": "Some details on the trusty build env: https://docs.travis-ci.com/user/trusty-ci-environment.\nLooking into other considerations...",
                "createdAt": "2016-08-08T23:23:55Z"
            },
            {
                "author": "Hixie",
                "bodyText": "Requiring sudo has implications that I think we tried to get out of before. Does \"trusty\" not work without it?",
                "createdAt": "2016-08-08T23:27:14Z"
            },
            {
                "author": "pq",
                "bodyText": "I believe sudo is required...  Maybe @whesse knows more?",
                "createdAt": "2016-08-08T23:29:34Z"
            },
            {
                "author": "abarth",
                "bodyText": "I don't think we need to require sudo.",
                "createdAt": "2016-08-08T23:38:13Z"
            },
            {
                "author": "pq",
                "bodyText": "I don't think we need to require sudo.\n\nI'm pretty sure that this build failed when I didn't have it set.\nhttps://travis-ci.org/flutter/flutter/builds/150783951\nHappy to roll it back and try again?",
                "createdAt": "2016-08-08T23:43:18Z"
            },
            {
                "author": "abarth",
                "bodyText": "I would expect that error to be generated when not using trusty rather than when not using sudo.",
                "createdAt": "2016-08-09T00:00:23Z"
            },
            {
                "author": "abarth",
                "bodyText": "I see. https://docs.travis-ci.com/user/trusty-ci-environment/\nThe trusty environment requires containers.",
                "createdAt": "2016-08-09T00:01:25Z"
            },
            {
                "author": "abarth",
                "bodyText": "Sorry.  requires sudo.",
                "createdAt": "2016-08-09T00:01:40Z"
            },
            {
                "author": "pq",
                "bodyText": "Yeah.  Unfortunate.  Now the question is whether there's any other alternative.  I'll do some more poking around.",
                "createdAt": "2016-08-09T00:03:24Z"
            },
            {
                "author": "abarth",
                "bodyText": "I'm not sure we want to require Trusty to use Flutter.  For example, requiring trusty prevents our customers from using a production Travis environment (Trusty support in Travis is in beta).  Our customers also lose support for Containers in Travis, which is recommend by Travis for reducing cycle times and unlocks several useful features in Travis that they use as carrots to get folks onto Containers.",
                "createdAt": "2016-08-09T00:07:23Z"
            },
            {
                "author": "eseidelGoogle",
                "bodyText": "Is this libc dependency change due to the borringssl role by chance? @zanderso",
                "createdAt": "2016-08-09T01:23:46Z"
            },
            {
                "author": "abarth",
                "bodyText": "There shouldn't be any connection between using C++11 features and which libc ABI you use.  For example, we use C++11 in sky_snapshot but it runs on old versions of Ubuntu.",
                "createdAt": "2016-08-09T02:03:42Z"
            },
            {
                "author": "zanderso",
                "bodyText": "Yes, this is due to the BoringSSL roll. Our SDK builders are now using trusty.",
                "createdAt": "2016-08-09T02:12:12Z"
            },
            {
                "author": "abarth",
                "bodyText": "Looks like we build sky_snapshot on 14.04 but we're still able to run it on pre-trusty.",
                "createdAt": "2016-08-09T02:15:09Z"
            },
            {
                "author": "whesse",
                "bodyText": "Dart can be built on earlier versions of linux, and/or with earlier glibc\nversions.  The sdk we are building and releasing uses trusty because that\nis the first release including a gcc with C++11.  It requires glibc 2.16\nbecause the libc on trusty is 2.19, and the linker ends up using some 2.16\nfunctions.\nAnyone can build differently, using a sysroot or other Linux\ndistribution, and get the libc version requirement to 2.11 or less again.\nClank builds also solve the C++11 problem.\nSince flutter does its own builds, I don't think it affects our\ndistribution of the prebuilt SDK built on trusty, does it?\nThe C++11 requirement does come from BoringSSL, but we may also start using\nit in Dart VM code.\nOn Aug 9, 2016 04:15, \"Adam Barth\" notifications@github.com wrote:\n\nLooks like we build sky_snapshot on 14.04 but we're still able to run it\non pre-trusty.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\n#5295 (comment), or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AErap7iEHB0R68glkBn-gsS52r4hWbj0ks5qd-K3gaJpZM4Jfiww\n.",
                "createdAt": "2016-08-09T08:05:52Z"
            },
            {
                "author": "a14n",
                "bodyText": "See travis-ci/travis-ci#6415\nYou can not use Trusty on container based jobs until travis-ci/travis-ci#5695 is fixed. Regarding https://docs.travis-ci.com/user/ci-environment#Virtualization-environments the main drawback of the current Trusty support is the boot time that will be larger (there's also an issue with content_shell but flutter doesn't matter).",
                "createdAt": "2016-08-09T13:16:22Z"
            },
            {
                "author": "zanderso",
                "bodyText": "@whesse If we build the SDK on trusty using clang instead of gcc, would that also require the newer glibc?",
                "createdAt": "2016-08-09T14:45:56Z"
            },
            {
                "author": "whesse",
                "bodyText": "Nothing requires the glibc, just if you compile using it (which is 2.19),\nyou get a linker requirement for 2.16 in the resulting executable.  You\nneed to specify a different glibc to link with, which I think is easiest\nwith a sysroot.  Or if you compile on precise, it only has 2.15, and you\nend up with a executable requiring only 2.11.  So clang is only better\nbecause clang works in precise, which has 2.15.\nOn Tue, Aug 9, 2016 at 4:46 PM, Zachary Anderson notifications@github.com\nwrote:\n\n@whesse https://github.com/whesse If we build the SDK on trusty using\nclang instead of gcc, would that also require the newer glibc?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\n#5295 (comment), or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AErap-cyjkP2Ec0REh0het9r42eOo8i4ks5qeJKugaJpZM4Jfiww\n.\n\n\nWilliam Hesse",
                "createdAt": "2016-08-09T15:00:33Z"
            },
            {
                "author": "zanderso",
                "bodyText": "Sorry, I was trying to ask if the clang we pull down uses the system sysroot, or its own sysroot. That is, would a binary built with the clang we pull down also ask for glibc 2.16.",
                "createdAt": "2016-08-09T15:03:52Z"
            },
            {
                "author": "whesse",
                "bodyText": "Probably.  Run ldd -v dart\non the dart executable, and it shows the libc version requirements.\nThe CLANG settiings, which should be all you need, are\nCC: third_party/clang/linux/bin/clang\nCC_host: third_party/clang/linux/bin/clang\nCHROME_HEADLESS: 1\nCPLUS_INCLUDE_PATH: third_party/clang/linux/lib/clang/3.4/include/\nCXX: third_party/clang/linux/bin/clang++ -fsanitize=address -fPIC\nCXX_host: third_party/clang/linux/bin/clang++\nC_INCLUDE_PATH: third_party/clang/linux/lib/clang/3.4/include/\nOn Tue, Aug 9, 2016 at 5:04 PM, Zachary Anderson notifications@github.com\nwrote:\n\nSorry, I was trying to ask if the clang we pull down uses the system\nsysroot, or its own sysroot. That is, would a binary built with the clang\nwe pull down also ask for glibc 2.16.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\n#5295 (comment), or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AErap_v02cXNkwmzhdsEyEAugtWtPW7eks5qeJbjgaJpZM4Jfiww\n.\n\n\nWilliam Hesse",
                "createdAt": "2016-08-09T15:08:04Z"
            },
            {
                "author": "abarth",
                "bodyText": "Since flutter does its own builds, I don't think it affects our distribution of the prebuilt SDK built on trusty, does it?\n\nFlutter uses the dart-sdk distributed by the Dart team in our end-developer workflow.  We use it to execute Dart code on the host system (e.g., the flutter command line tool and pub).  If we upgrade to this version of the dart-sdk, our end-developers will no longer be able to use older versions of Ubuntu.",
                "createdAt": "2016-08-09T15:51:51Z"
            },
            {
                "author": "whesse",
                "bodyText": "We can change our builders to build a dart sdk that doesn't require glibc\n2.16.  I've had the contingency plan that we can change our SDK builders to\nuse a sysroot, and compile against an earlier glibc, if major customers\nrequired it.  It sounds like that is what you (and perhaps other customers)\nwant, so I'll plan to make this change tomorrow, and get out a new dev\nversion 1.19.0-dev.5.0 that should work for you.  I'll send out an email to\ndart-core-dev proposing that.\nOn Tue, Aug 9, 2016 at 5:52 PM, Adam Barth notifications@github.com wrote:\n\nSince flutter does its own builds, I don't think it affects our\ndistribution of the prebuilt SDK built on trusty, does it?\nFlutter uses the dart-sdk distributed by the Dart team in our\nend-developer workflow. We use it to execute Dart code on the host system\n(e.g., the flutter command line tool and pub). If we upgrade to this\nversion of the dart-sdk, our end-developers will no longer be able to use\nolder versions of Ubuntu.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\n#5295 (comment), or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AErap8F5e5o3R8XbqbQ4JHVQeUSvwTgRks5qeKIhgaJpZM4Jfiww\n.\n\n\nWilliam Hesse",
                "createdAt": "2016-08-09T15:56:46Z"
            },
            {
                "author": "abarth",
                "bodyText": "Thanks so much!",
                "createdAt": "2016-08-09T15:57:48Z"
            },
            {
                "author": "pq",
                "bodyText": "Yay.  Thanks Bill!",
                "createdAt": "2016-08-09T16:08:56Z"
            },
            {
                "author": "pq",
                "bodyText": "Regarding this PR, I'll hold off on landing it in favor of one integrating 1.19.0-dev.5.0 when it's cooked.",
                "createdAt": "2016-08-09T16:27:17Z"
            },
            {
                "author": "mit-mit",
                "bodyText": "We have a fix for this, and @whesse is creating a new dev build.",
                "createdAt": "2016-08-10T17:15:27Z"
            },
            {
                "author": "pq",
                "bodyText": "Closing in favor of 1.19.0-dev.5.0: #5329",
                "createdAt": "2016-08-10T23:00:14Z"
            }
        ],
        "commentCount": 32
    },
    {
        "number": 112149,
        "title": "Revert file naming convention of .aar files to support fuzzy matching in build.gradle",
        "author": "\u6797\u519b\u534e",
        "state": "MERGED",
        "closedAt": "2022-10-04T03:37:23Z",
        "createdAt": "2022-09-22T06:40:23Z",
        "comments": [
            {
                "author": "JunhuaLin",
                "bodyText": "build result:",
                "createdAt": "2022-09-22T07:41:53Z"
            },
            {
                "author": "JunhuaLin",
                "bodyText": "",
                "createdAt": "2022-09-22T07:42:55Z"
            },
            {
                "author": "Jasguerrero",
                "bodyText": "Could you take a look? @GaryQian",
                "createdAt": "2022-09-22T20:27:23Z"
            },
            {
                "author": "JunhuaLin",
                "bodyText": "Could you take a look? @GaryQian",
                "createdAt": "2022-09-24T09:10:15Z"
            },
            {
                "author": "JunhuaLin",
                "bodyText": "This PR seems to be missing some of the testing code removed in the original PR. Can you make sure this PR fully reverts the original PR? Tests that have comments \"mimic the AGP plugin\" seem to be missing. Things like the JDK bump can stay unless it causes incompatibility issues. This way we have more guarantees we are not introducing new bugs.\n\nThis PR is not intended to restore all the original PR1 changes\nThis PR modifies the use of Maven-Publish to produce the correct AAR based on #101276\nThe Maven-Publish  part of the code has been tested in #101276\nThis PR ensures that the code is correct without having to adjust the Maven-Publish-related test code",
                "createdAt": "2022-09-25T12:59:40Z"
            },
            {
                "author": "JunhuaLin",
                "bodyText": "This PR seems to be missing some of the testing code removed in the original PR. Can you make sure this PR fully reverts the original PR? Tests that have comments \"mimic the AGP plugin\" seem to be missing. Things like the JDK bump can stay unless it causes incompatibility issues. This way we have more guarantees we are not introducing new bugs.\n\nThe JDK version configuration in the CI file is not concerned, the latest flutter:master branch has been adjusted",
                "createdAt": "2022-09-27T02:26:38Z"
            },
            {
                "author": "JunhuaLin",
                "bodyText": "@GaryQian\nWhen can this PR be merged to the master branch\uff1f",
                "createdAt": "2022-09-27T06:26:34Z"
            },
            {
                "author": "GaryQian",
                "bodyText": "This still needs one more review to be landable! I've tagged a few others.",
                "createdAt": "2022-09-27T06:54:10Z"
            },
            {
                "author": "JunhuaLin",
                "bodyText": "auto label is removed for flutter/flutter, pr: 112149, due to Validations Fail.\n\n\n\n\nThis still needs one more review to be landable! I've tagged a few others.\n\nThere seems to be a need for approving comments LGTM",
                "createdAt": "2022-09-27T07:26:37Z"
            },
            {
                "author": "JunhuaLin",
                "bodyText": "Could you take a look? @christopherfujino @stuartmorgan @camsim99",
                "createdAt": "2022-09-28T01:48:56Z"
            },
            {
                "author": "JunhuaLin",
                "bodyText": "Hope to deal with as soon as possible, affect the upgrade to the latest version\uff01\nWe don't want to stay at 3.0.5 for too long\uff01\nThis problem is holding up the build flutter.",
                "createdAt": "2022-09-28T07:10:24Z"
            },
            {
                "author": "christopherfujino",
                "bodyText": "@JunhuaLin it looks like you have a test failure, however:\n02:08 +13 -1: test\\integration.shard\\gradle_non_android_plugin_test.dart: Flutter app that depends on a non-Android plugin can still build for Android [E]\n  Expected: a file system entity that exists\n    Actual: LocalFile:<LocalFile: 'C:\\b\\s\\w\\ir\\x\\t\\flutter_flutter_plugin_test.5951ddc1\\ios_only\\example\\build\\app\\outputs\\apk\\release\\app-release.apk'>\n     Which: does not exist\n  \n  package:test_api                                                 expect\n  test\\integration.shard\\gradle_non_android_plugin_test.dart 90:5  main.<fn>\n  dart:async                                                       runZoned\n  test\\src\\common.dart 197:14                                      testWithoutContext.<fn>\n  test\\src\\common.dart 166:18                                      test.<fn>",
                "createdAt": "2022-09-28T16:54:13Z"
            },
            {
                "author": "JunhuaLin",
                "bodyText": "@JunhuaLin it looks like you have a test failure, however:\n02:08 +13 -1: test\\integration.shard\\gradle_non_android_plugin_test.dart: Flutter app that depends on a non-Android plugin can still build for Android [E]\n  Expected: a file system entity that exists\n    Actual: LocalFile:<LocalFile: 'C:\\b\\s\\w\\ir\\x\\t\\flutter_flutter_plugin_test.5951ddc1\\ios_only\\example\\build\\app\\outputs\\apk\\release\\app-release.apk'>\n     Which: does not exist\n  \n  package:test_api                                                 expect\n  test\\integration.shard\\gradle_non_android_plugin_test.dart 90:5  main.<fn>\n  dart:async                                                       runZoned\n  test\\src\\common.dart 197:14                                      testWithoutContext.<fn>\n  test\\src\\common.dart 166:18                                      test.<fn>\n\n\nThis test failure has nothing to do with my PR\nLet me merge the flutter:master code again",
                "createdAt": "2022-09-29T03:09:33Z"
            },
            {
                "author": "JunhuaLin",
                "bodyText": "Should I not merge the master code\uff1f\nShould I just keep my commit\uff1f",
                "createdAt": "2022-09-29T03:14:28Z"
            },
            {
                "author": "JunhuaLin",
                "bodyText": "Now\uff0cit\u2018s fine~\n@christopherfujino @GaryQian",
                "createdAt": "2022-09-29T03:46:09Z"
            },
            {
                "author": "AesSedai101",
                "bodyText": "this change is going to cause add to app modules with multiple native dependencies to fail because of how gradle 7 does dependency resolution. Please test that case as well",
                "createdAt": "2022-09-29T07:03:24Z"
            },
            {
                "author": "JunhuaLin",
                "bodyText": "this change is going to cause add to app modules with multiple native dependencies to fail because of how gradle 7 does dependency resolution. Please test that case as well\n\nCan you give a detailed description demo\uff1f\nOR\nDoes this mean that there are multiple flutter plugin dependencies?\nthis case\uff1ait's ok\nmodule dependency\uff1a\napp --> module_test --> flutterboost\n                 |\n                  --> shared_preferences_android\n\nbuild aar file tree:\n\nflutter build aar --no-debug --no-profile --build-number 1.0.0\n\n\u2514\u2500\u2500 host\n    \u2514\u2500\u2500 outputs\n        \u2514\u2500\u2500 repo\n            \u251c\u2500\u2500 com\n            \u2502\u00a0\u00a0 \u251c\u2500\u2500 example\n            \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 module_test\n            \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 flutter_release\n            \u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u251c\u2500\u2500 1.0.0\n            \u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_release-1.0.0.aar\n            \u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_release-1.0.0.aar.md5\n            \u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_release-1.0.0.aar.sha1\n            \u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_release-1.0.0.aar.sha256\n            \u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_release-1.0.0.aar.sha512\n            \u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_release-1.0.0.module\n            \u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_release-1.0.0.module.md5\n            \u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_release-1.0.0.module.sha1\n            \u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_release-1.0.0.module.sha256\n            \u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_release-1.0.0.module.sha512\n            \u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_release-1.0.0.pom\n            \u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_release-1.0.0.pom.md5\n            \u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_release-1.0.0.pom.sha1\n            \u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_release-1.0.0.pom.sha256\n            \u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u2514\u2500\u2500 flutter_release-1.0.0.pom.sha512\n            \u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u251c\u2500\u2500 maven-metadata.xml\n            \u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u251c\u2500\u2500 maven-metadata.xml.md5\n            \u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u251c\u2500\u2500 maven-metadata.xml.sha1\n            \u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u251c\u2500\u2500 maven-metadata.xml.sha256\n            \u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u2514\u2500\u2500 maven-metadata.xml.sha512\n            \u2502\u00a0\u00a0 \u2514\u2500\u2500 idlefish\n            \u2502\u00a0\u00a0     \u2514\u2500\u2500 flutterboost\n            \u2502\u00a0\u00a0         \u2514\u2500\u2500 flutter_boost_release\n            \u2502\u00a0\u00a0             \u251c\u2500\u2500 1.0.0\n            \u2502\u00a0\u00a0             \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_boost_release-1.0.0.aar\n            \u2502\u00a0\u00a0             \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_boost_release-1.0.0.aar.md5\n            \u2502\u00a0\u00a0             \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_boost_release-1.0.0.aar.sha1\n            \u2502\u00a0\u00a0             \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_boost_release-1.0.0.aar.sha256\n            \u2502\u00a0\u00a0             \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_boost_release-1.0.0.aar.sha512\n            \u2502\u00a0\u00a0             \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_boost_release-1.0.0.module\n            \u2502\u00a0\u00a0             \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_boost_release-1.0.0.module.md5\n            \u2502\u00a0\u00a0             \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_boost_release-1.0.0.module.sha1\n            \u2502\u00a0\u00a0             \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_boost_release-1.0.0.module.sha256\n            \u2502\u00a0\u00a0             \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_boost_release-1.0.0.module.sha512\n            \u2502\u00a0\u00a0             \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_boost_release-1.0.0.pom\n            \u2502\u00a0\u00a0             \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_boost_release-1.0.0.pom.md5\n            \u2502\u00a0\u00a0             \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_boost_release-1.0.0.pom.sha1\n            \u2502\u00a0\u00a0             \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_boost_release-1.0.0.pom.sha256\n            \u2502\u00a0\u00a0             \u2502\u00a0\u00a0 \u2514\u2500\u2500 flutter_boost_release-1.0.0.pom.sha512\n            \u2502\u00a0\u00a0             \u251c\u2500\u2500 maven-metadata.xml\n            \u2502\u00a0\u00a0             \u251c\u2500\u2500 maven-metadata.xml.md5\n            \u2502\u00a0\u00a0             \u251c\u2500\u2500 maven-metadata.xml.sha1\n            \u2502\u00a0\u00a0             \u251c\u2500\u2500 maven-metadata.xml.sha256\n            \u2502\u00a0\u00a0             \u2514\u2500\u2500 maven-metadata.xml.sha512\n            \u2514\u2500\u2500 io\n                \u2514\u2500\u2500 flutter\n                    \u2514\u2500\u2500 plugins\n                        \u2514\u2500\u2500 sharedpreferences\n                            \u2514\u2500\u2500 shared_preferences_android_release\n                                \u251c\u2500\u2500 1.0.0\n                                \u2502\u00a0\u00a0 \u251c\u2500\u2500 shared_preferences_android_release-1.0.0.aar\n                                \u2502\u00a0\u00a0 \u251c\u2500\u2500 shared_preferences_android_release-1.0.0.aar.md5\n                                \u2502\u00a0\u00a0 \u251c\u2500\u2500 shared_preferences_android_release-1.0.0.aar.sha1\n                                \u2502\u00a0\u00a0 \u251c\u2500\u2500 shared_preferences_android_release-1.0.0.aar.sha256\n                                \u2502\u00a0\u00a0 \u251c\u2500\u2500 shared_preferences_android_release-1.0.0.aar.sha512\n                                \u2502\u00a0\u00a0 \u251c\u2500\u2500 shared_preferences_android_release-1.0.0.module\n                                \u2502\u00a0\u00a0 \u251c\u2500\u2500 shared_preferences_android_release-1.0.0.module.md5\n                                \u2502\u00a0\u00a0 \u251c\u2500\u2500 shared_preferences_android_release-1.0.0.module.sha1\n                                \u2502\u00a0\u00a0 \u251c\u2500\u2500 shared_preferences_android_release-1.0.0.module.sha256\n                                \u2502\u00a0\u00a0 \u251c\u2500\u2500 shared_preferences_android_release-1.0.0.module.sha512\n                                \u2502\u00a0\u00a0 \u251c\u2500\u2500 shared_preferences_android_release-1.0.0.pom\n                                \u2502\u00a0\u00a0 \u251c\u2500\u2500 shared_preferences_android_release-1.0.0.pom.md5\n                                \u2502\u00a0\u00a0 \u251c\u2500\u2500 shared_preferences_android_release-1.0.0.pom.sha1\n                                \u2502\u00a0\u00a0 \u251c\u2500\u2500 shared_preferences_android_release-1.0.0.pom.sha256\n                                \u2502\u00a0\u00a0 \u2514\u2500\u2500 shared_preferences_android_release-1.0.0.pom.sha512\n                                \u251c\u2500\u2500 maven-metadata.xml\n                                \u251c\u2500\u2500 maven-metadata.xml.md5\n                                \u251c\u2500\u2500 maven-metadata.xml.sha1\n                                \u251c\u2500\u2500 maven-metadata.xml.sha256\n                                \u2514\u2500\u2500 maven-metadata.xml.sha512\n\n\npom dependencies:\nmodule_test pom file:\n<project ...>\n  <modelVersion>4.0.0</modelVersion>\n  <groupId>com.example.module_test</groupId>\n  <artifactId>flutter_release</artifactId>\n  <version>1.0.0</version>\n  <packaging>aar</packaging>\n\n  <dependencies>\n    <dependency>\n      <groupId>io.flutter</groupId>\n      <artifactId>flutter_embedding_release</artifactId>\n      <version>1.0.0-4b591e17d288447f118300754073c9f1d9a4393a</version>\n      <scope>compile</scope>\n    </dependency>\n  \n ......\n\n    <dependency>\n      <groupId>io.flutter.plugins.sharedpreferences</groupId>\n      <artifactId>shared_preferences_android_release</artifactId>\n      <version>1.0.0</version>\n      <scope>compile</scope>\n    </dependency>\n\n    <dependency>\n      <groupId>com.idlefish.flutterboost</groupId>\n      <artifactId>flutter_boost_release</artifactId>\n      <version>1.0.0</version>\n      <scope>compile</scope>\n    </dependency>\n  </dependencies>\n</project>\n\nflutterboost pom file:\n<project ...>\n  <modelVersion>4.0.0</modelVersion>\n  <groupId>com.idlefish.flutterboost</groupId>\n  <artifactId>flutter_boost_release</artifactId>\n  <version>1.0.0</version>\n  <packaging>aar</packaging>\n  <dependencies>\n    <dependency>\n      <groupId>io.flutter</groupId>\n      <artifactId>flutter_embedding_release</artifactId>\n      <version>1.0.0-4b591e17d288447f118300754073c9f1d9a4393a</version>\n      <scope>compile</scope>\n    </dependency>\n  </dependencies>\n</project>\n\nshared_preferences_android pom file:\n<project ...>\n  <modelVersion>4.0.0</modelVersion>\n  <groupId>io.flutter.plugins.sharedpreferences</groupId>\n  <artifactId>shared_preferences_android_release</artifactId>\n  <version>1.0.0</version>\n  <packaging>aar</packaging>\n  <dependencies>\n    <dependency>\n      <groupId>io.flutter</groupId>\n      <artifactId>flutter_embedding_release</artifactId>\n      <version>1.0.0-4b591e17d288447f118300754073c9f1d9a4393a</version>\n      <scope>compile</scope>\n    </dependency>\n  </dependencies>\n</project>\n\n\nThe dependencies in the POM are complete",
                "createdAt": "2022-09-29T08:47:17Z"
            },
            {
                "author": "AesSedai101",
                "bodyText": "If you have your add to app project depending on another plugin with a native dependency (in your case, flutterboost depending on shared_preferences) via the pubspec, the dependencies in the POM uses the new classifier mechanism.\nFor example., in my main add to app module, I use logging_to_logcat, which gets included like this:\n   <dependency>\n      <groupId>com.logger.logging_to_logcat</groupId>\n      <artifactId>logging_to_logcat</artifactId>\n      <version>1.0.0</version>\n      <scope>compile</scope>\n    </dependency>\n\nwith the -debug and -release classifiers mapping to the flavours.\nso, if you don't publish the artifacts in the new way with the classifiers, you will need to declare all Flutter dependencies with a native component manually in the gradle file of your native project.",
                "createdAt": "2022-09-29T10:01:50Z"
            },
            {
                "author": "JunhuaLin",
                "bodyText": "If you have your add to app project depending on another plugin with a native dependency (in your case, flutterboost depending on shared_preferences) via the pubspec, the dependencies in the POM uses the new classifier mechanism.\nFor example., in my main add to app module, I use logging_to_logcat, which gets included like this:\n   <dependency>\n      <groupId>com.logger.logging_to_logcat</groupId>\n      <artifactId>logging_to_logcat</artifactId>\n      <version>1.0.0</version>\n      <scope>compile</scope>\n    </dependency>\n\nwith the -debug and -release classifiers mapping to the flavours.\nso, if you don't publish the artifacts in the new way with the classifiers, you will need to declare all Flutter dependencies with a native component manually in the gradle file of your native project.\n\nI created the following dependency structure\uff1a\napp --> module_test --> flutterboost --> okhttp\n                             |\n                              --> logging_to_logcat\n\nflutterboost depending on logging_to_logcat and okhttp\nflutterboost  pubspec file:\nname: flutter_boost\ndescription: A next-generation Flutter-Native hybrid solution. FlutterBoost is a Flutter plugin which enables hybrid integration of Flutter for your existing native apps with minimum efforts.\nversion: 3.0.0\n\nhomepage: https://github.com/alibaba/flutter_boost\n\nenvironment:\n  sdk: '>=2.12.0 <3.0.0'\n\ndependencies:\n  flutter:\n    sdk: flutter\n  collection: ^1.16.0\n  logging_to_logcat: ^0.1.1               <---- plugin\n\ndev_dependencies:\n  flutter_lints: ^2.0.1\n  flutter_test:\n    sdk: flutter\n  pigeon: ^3.2.9\n\nflutter:\n  plugin:\n    platforms:\n      android:\n        package: com.idlefish.flutterboost\n        pluginClass: FlutterBoostPlugin\n      ios:\n        pluginClass: FlutterBoostPlugin\n\n\nflutterboost  gradle file:\ngroup 'com.idlefish.flutterboost'\nversion '1.0-SNAPSHOT'\n\nbuildscript {\n    repositories {\n        google()\n        jcenter()\n    }\n\n    dependencies {\n        classpath 'com.android.tools.build:gradle:7.0.4'\n    }\n}\n\nrootProject.allprojects {\n    repositories {\n        google()\n        jcenter()\n    }\n}\n\napply plugin: 'com.android.library'\n\nandroid {\n    compileSdkVersion 31\n    buildToolsVersion '30.0.2'\n    defaultConfig {\n        minSdkVersion 16\n        targetSdkVersion 31\n        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'\n    }\n    lintOptions {\n        disable 'InvalidPackage'\n        abortOnError false\n    }\n\n    compileOptions {\n        sourceCompatibility JavaVersion.VERSION_1_8\n        targetCompatibility JavaVersion.VERSION_1_8\n    }\n}\n\ndependencies {\n    compileOnly 'com.google.android.material:material:1.0.0'\n    compileOnly 'com.alibaba:fastjson:1.2.41'\n    implementation 'com.squareup.okhttp3:okhttp:3.5.0'                  <------ native\n}\n\next {\n    groupId = 'com.taobao.fleamarket'\n    artifactId = \"FlutterBoost\"\n}\n\n\n\n.flutter-plugins-dependencies file:Plugin dependent plugins also compile normally\uff0clook this:\n\nbuild aar file tree:\n\u2514\u2500\u2500 host\n    \u2514\u2500\u2500 outputs\n        \u2514\u2500\u2500 repo\n            \u2514\u2500\u2500 com\n                \u251c\u2500\u2500 example\n                \u2502\u00a0\u00a0 \u2514\u2500\u2500 module_test\n                \u2502\u00a0\u00a0     \u2514\u2500\u2500 flutter_release\n                \u2502\u00a0\u00a0         \u251c\u2500\u2500 1.0\n                \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_release-1.0.aar\n                \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_release-1.0.aar.md5\n                \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_release-1.0.aar.sha1\n                \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_release-1.0.pom\n                \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_release-1.0.pom.md5\n                \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u2514\u2500\u2500 flutter_release-1.0.pom.sha1\n                \u2502\u00a0\u00a0         \u251c\u2500\u2500 maven-metadata.xml\n                \u2502\u00a0\u00a0         \u251c\u2500\u2500 maven-metadata.xml.md5\n                \u2502\u00a0\u00a0         \u2514\u2500\u2500 maven-metadata.xml.sha1\n                \u251c\u2500\u2500 idlefish\n                \u2502\u00a0\u00a0 \u2514\u2500\u2500 flutterboost\n                \u2502\u00a0\u00a0     \u2514\u2500\u2500 flutter_boost_release\n                \u2502\u00a0\u00a0         \u251c\u2500\u2500 1.0\n                \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_boost_release-1.0.aar\n                \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_boost_release-1.0.aar.md5\n                \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_boost_release-1.0.aar.sha1\n                \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_boost_release-1.0.pom\n                \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_boost_release-1.0.pom.md5\n                \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u2514\u2500\u2500 flutter_boost_release-1.0.pom.sha1\n                \u2502\u00a0\u00a0         \u251c\u2500\u2500 maven-metadata.xml\n                \u2502\u00a0\u00a0         \u251c\u2500\u2500 maven-metadata.xml.md5\n                \u2502\u00a0\u00a0         \u2514\u2500\u2500 maven-metadata.xml.sha1\n                \u2514\u2500\u2500 logger\n                    \u2514\u2500\u2500 logging_to_logcat\n                        \u2514\u2500\u2500 logging_to_logcat_release\n                            \u251c\u2500\u2500 1.0\n                            \u2502\u00a0\u00a0 \u251c\u2500\u2500 logging_to_logcat_release-1.0.aar\n                            \u2502\u00a0\u00a0 \u251c\u2500\u2500 logging_to_logcat_release-1.0.aar.md5\n                            \u2502\u00a0\u00a0 \u251c\u2500\u2500 logging_to_logcat_release-1.0.aar.sha1\n                            \u2502\u00a0\u00a0 \u251c\u2500\u2500 logging_to_logcat_release-1.0.pom\n                            \u2502\u00a0\u00a0 \u251c\u2500\u2500 logging_to_logcat_release-1.0.pom.md5\n                            \u2502\u00a0\u00a0 \u2514\u2500\u2500 logging_to_logcat_release-1.0.pom.sha1\n                            \u251c\u2500\u2500 maven-metadata.xml\n                            \u251c\u2500\u2500 maven-metadata.xml.md5\n                            \u2514\u2500\u2500 maven-metadata.xml.sha1\n\n\nmodule_test pom file:\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" xmlns=\"http://maven.apache.org/POM/4.0.0\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n  <modelVersion>4.0.0</modelVersion>\n  <groupId>com.example.module_test</groupId>\n  <artifactId>flutter_release</artifactId>\n  <version>1.0</version>\n  <packaging>aar</packaging>\n  <dependencies>\n    <dependency>\n      <groupId>com.logger.logging_to_logcat</groupId>\n      <artifactId>logging_to_logcat_release</artifactId>\n      <version>1.0</version>\n      <scope>compile</scope>\n    </dependency>\n    <dependency>\n      <groupId>com.idlefish.flutterboost</groupId>\n      <artifactId>flutter_boost_release</artifactId>\n      <version>1.0</version>\n      <scope>compile</scope>\n    </dependency>\n    <dependency>\n      <groupId>io.flutter</groupId>\n      <artifactId>flutter_embedding_release</artifactId>\n      <version>1.0.0-d3ea636dc5d16b56819f3266241e1f708979c233</version>\n      <scope>compile</scope>\n    </dependency>\n    <dependency>\n      <groupId>io.flutter</groupId>\n      <artifactId>armeabi_v7a_release</artifactId>\n      <version>1.0.0-d3ea636dc5d16b56819f3266241e1f708979c233</version>\n      <scope>compile</scope>\n    </dependency>\n    <dependency>\n      <groupId>io.flutter</groupId>\n      <artifactId>arm64_v8a_release</artifactId>\n      <version>1.0.0-d3ea636dc5d16b56819f3266241e1f708979c233</version>\n      <scope>compile</scope>\n    </dependency>\n    <dependency>\n      <groupId>io.flutter</groupId>\n      <artifactId>x86_64_release</artifactId>\n      <version>1.0.0-d3ea636dc5d16b56819f3266241e1f708979c233</version>\n      <scope>compile</scope>\n    </dependency>\n  </dependencies>\n</project>\n\n\nflutterboost pom file:\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\" xmlns=\"http://maven.apache.org/POM/4.0.0\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n  <!-- This module was also published with a richer model, Gradle metadata,  -->\n  <!-- which should be used instead. Do not delete the following line which  -->\n  <!-- is to indicate to Gradle or any Gradle module metadata file consumer  -->\n  <!-- that they should prefer consuming it instead. -->\n  <!-- do_not_remove: published-with-gradle-metadata -->\n  <modelVersion>4.0.0</modelVersion>\n  <groupId>com.idlefish.flutterboost</groupId>\n  <artifactId>flutter_boost_release</artifactId>\n  <version>1.0</version>\n  <packaging>aar</packaging>\n  <dependencies>\n    <dependency>\n      <groupId>io.flutter</groupId>\n      <artifactId>flutter_embedding_release</artifactId>\n      <version>1.0.0-4b591e17d288447f118300754073c9f1d9a4393a</version>\n      <scope>compile</scope>\n    </dependency>\n    <dependency>\n      <groupId>com.squareup.okhttp3</groupId>\n      <artifactId>okhttp</artifactId>\n      <version>3.5.0</version>\n      <scope>runtime</scope>\n    </dependency>\n    <dependency>\n      <groupId>com.logger.logging_to_logcat</groupId>\n      <artifactId>logging_to_logcat_release</artifactId>\n      <version>1.0</version>\n      <scope>runtime</scope>\n    </dependency>\n  </dependencies>\n</project>\n\n\nlogging_to_logcat pom file:\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\" xmlns=\"http://maven.apache.org/POM/4.0.0\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n  <!-- This module was also published with a richer model, Gradle metadata,  -->\n  <!-- which should be used instead. Do not delete the following line which  -->\n  <!-- is to indicate to Gradle or any Gradle module metadata file consumer  -->\n  <!-- that they should prefer consuming it instead. -->\n  <!-- do_not_remove: published-with-gradle-metadata -->\n  <modelVersion>4.0.0</modelVersion>\n  <groupId>com.logger.logging_to_logcat</groupId>\n  <artifactId>logging_to_logcat_release</artifactId>\n  <version>1.0</version>\n  <packaging>aar</packaging>\n  <dependencies>\n    <dependency>\n      <groupId>io.flutter</groupId>\n      <artifactId>flutter_embedding_release</artifactId>\n      <version>1.0.0-4b591e17d288447f118300754073c9f1d9a4393a</version>\n      <scope>compile</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.jetbrains.kotlin</groupId>\n      <artifactId>kotlin-stdlib-jdk7</artifactId>\n      <version>1.6.10</version>\n      <scope>runtime</scope>\n    </dependency>\n  </dependencies>\n</project>\n\n\nThis case is fine~",
                "createdAt": "2022-09-29T16:45:36Z"
            },
            {
                "author": "GaryQian",
                "bodyText": "@AesSedai101 Can you confirm that @JunhuaLin 's explanation here resolves your concern?",
                "createdAt": "2022-09-30T00:18:28Z"
            },
            {
                "author": "JunhuaLin",
                "bodyText": "Why tree is currently broken?\nI shouldn't merge the master, I should use Rebase, right?",
                "createdAt": "2022-09-30T01:56:13Z"
            },
            {
                "author": "GaryQian",
                "bodyText": "Yes, you should use rebase, but don't worry about the tree being broken, it is not your fault, it should become green again soon (it is green now). That check simply reflects the build status of tip-of-tree.",
                "createdAt": "2022-09-30T02:34:35Z"
            },
            {
                "author": "JunhuaLin",
                "bodyText": "Yes, you should use rebase, but don't worry about the tree being broken, it is not your fault, it should become green again soon (it is green now). That check simply reflects the build status of tip-of-tree.\n\nOk, I see~\nCan my PR be merged in this case?\nWe want to use the latest version as soon as possible",
                "createdAt": "2022-09-30T03:25:08Z"
            },
            {
                "author": "AesSedai101",
                "bodyText": "Can you confirm that @JunhuaLin 's explanation here resolves your concern?\n\nThat is not the behaviour I saw on my side, but it's possible that my environment is in a broken state",
                "createdAt": "2022-09-30T07:07:59Z"
            },
            {
                "author": "JunhuaLin",
                "bodyText": "Can you confirm that @JunhuaLin 's explanation here resolves your concern?\n\nThat is not the behaviour I saw on my side, but it's possible that my environment is in a broken state\n\nI'm not sure I understand your situation.\nMy changes are consistent with 3.0.5 and earlier features for build aar\uff0cso there should be no negative effect\uff01\nYou can use my branch master version to verify your problem\nor\uff1a\nCan you reproduce your problem in 3.0.5 or earlier?\nCan you provide a complete minimum reproducible code example \uff1f",
                "createdAt": "2022-09-30T07:31:28Z"
            },
            {
                "author": "GaryQian",
                "bodyText": "@AesSedai101 Ping on @JunhuaLin 's questions",
                "createdAt": "2022-10-02T16:20:12Z"
            },
            {
                "author": "JunhuaLin",
                "bodyText": "Can my PR be released with 3.4.0 @GaryQian",
                "createdAt": "2022-10-04T03:27:40Z"
            }
        ],
        "commentCount": 27
    },
    {
        "number": 110052,
        "title": "Add support for image insertion on Android",
        "author": "Tanay Neotia",
        "state": "MERGED",
        "closedAt": "2023-01-31T19:46:19Z",
        "createdAt": "2022-08-23T00:43:55Z",
        "comments": [
            {
                "author": "tneotia",
                "bodyText": "@justinmc what can I do about this ci.yaml validation? It says required but is failing.... I didn't change anything for any ci.yaml stuff\nFollowing the instructions and merging upstream did the trick \ud83d\ude04",
                "createdAt": "2022-08-23T15:50:33Z"
            },
            {
                "author": "tneotia",
                "bodyText": "@justinmc I got all checks to pass, this should be ready for a review now :)",
                "createdAt": "2022-08-24T14:29:05Z"
            },
            {
                "author": "codecov-commenter",
                "bodyText": "Codecov Report\n\nMerging #110052 (8815f60) into master (6d67fbb) will increase coverage by 0.00%.\nThe diff coverage is 100.00%.\n\n\n\u2757 Current head 8815f60 differs from pull request most recent head 22ae682. Consider uploading reports for the commit 22ae682 to get more accurate results\n\n@@           Coverage Diff            @@\n##           master   #110052   +/-   ##\n========================================\n  Coverage   91.45%    91.45%           \n========================================\n  Files         523       523           \n  Lines       94649     94649           \n========================================\n+ Hits        86561     86565    +4     \n+ Misses       8088      8084    -4     \n\n\n\nImpacted Files\nCoverage \u0394\n\n\n\n\n\n...ib/src/material/animated_icons/animated_icons.dart\n90.47% <\u00f8> (\u00f8)\n\n\n\n...c/material/animated_icons/animated_icons_data.dart\n100.00% <\u00f8> (\u00f8)\n\n\n\npackages/flutter/lib/src/material/icons.dart\n41.93% <\u00f8> (\u00f8)\n\n\n\npackages/flutter/lib/src/material/scrollbar.dart\n99.31% <100.00%> (\u00f8)\n\n\n\n...ages/flutter/lib/src/material/scrollbar_theme.dart\n97.67% <0.00%> (+4.65%)\n\u2b06\ufe0f\n\n\n\n\ud83d\udce3 We\u2019re building smart automated test selection to slash your CI/CD build times. Learn more",
                "createdAt": "2022-10-19T18:46:15Z"
            },
            {
                "author": "tneotia",
                "bodyText": "@justinmc what is next to get this moving forward? The only potential blocker I see right now is that test you wanted me to write, which I talked about in your most recent review.",
                "createdAt": "2022-11-02T19:15:02Z"
            },
            {
                "author": "justinmc",
                "bodyText": "@tneotia I just commented with an idea about the test, let me know if that helps or if you still can't get it going!",
                "createdAt": "2022-11-07T20:28:39Z"
            },
            {
                "author": "tneotia",
                "bodyText": "@tneotia I just commented with an idea about the test, let me know if that helps or if you still can't get it going!\n\nCan't believe I was missing such a small detail \ud83d\ude05 - it works now!!",
                "createdAt": "2022-11-07T22:33:40Z"
            },
            {
                "author": "tneotia",
                "bodyText": "@justinmc do you know why the bot thinks this PR affects goldens?",
                "createdAt": "2022-11-17T20:22:54Z"
            },
            {
                "author": "justinmc",
                "bodyText": "It seems to be ok, the goldens comment above appears out of date and doesn't show any broken goldens.  I've removed the \"will affect goldens\" label.",
                "createdAt": "2022-11-17T21:34:08Z"
            },
            {
                "author": "tneotia",
                "bodyText": "@justinmc what else is left here? Do I need to add anything further before this can be merged? I think the only thing we discussed is:\n\nGoogle testing needs fixing\nMigration guide PR (which is complete from my side)",
                "createdAt": "2022-12-01T16:03:22Z"
            },
            {
                "author": "justinmc",
                "bodyText": "This looks good to go except for the Google testing failure.  I'm actually struggling to see what the problem is there.  I'm asking around about it and will post back.",
                "createdAt": "2022-12-02T18:03:17Z"
            },
            {
                "author": "LongCatIsLooong",
                "bodyText": "The google testing is failing because it's introducing a new method to the TextInputClient interface which some of the internal classes implement so unfortunately I think this is a breaking change.  @tneotia would you mind adding a migration guide (and maybe a dartfix) following these steps in the wiki? https://github.com/flutter/flutter/wiki/Tree-hygiene#3-prepare-your-change",
                "createdAt": "2022-12-03T01:00:30Z"
            },
            {
                "author": "tneotia",
                "bodyText": "@LongCatIsLooong there is already a migration PR created at flutter/website#7692 by request from @justinmc :)",
                "createdAt": "2022-12-03T01:11:26Z"
            },
            {
                "author": "LongCatIsLooong",
                "bodyText": "Ah good to know. I'll start migrating the internal clients once the migration guide PR is merged.",
                "createdAt": "2022-12-03T01:15:58Z"
            },
            {
                "author": "tneotia",
                "bodyText": "@LongCatIsLooong should I mark that migration PR as ready to review then? Or leave it as draft?",
                "createdAt": "2022-12-03T01:17:44Z"
            },
            {
                "author": "CaseyHillers",
                "bodyText": "@tneotia can you rebase this PR with tip of tree? It's 50 commits behind which is causing issues with the Google testing infra.",
                "createdAt": "2022-12-05T18:59:38Z"
            },
            {
                "author": "tneotia",
                "bodyText": "@CaseyHillers done, although Google testing is likely broken due to the breaking change on TextInputClient",
                "createdAt": "2022-12-05T20:07:01Z"
            },
            {
                "author": "gnprice",
                "bodyText": "Ah good to know. I'll start migrating the internal clients once the migration guide PR is merged.\n\nIt looks like the migration guide PR flutter/website#7692 won't be merged until this PR lands (because the migration guide needs to say when the implementation landed.)\nFortunately, from the latest review flutter/website#7692 (review) on that migration guide PR, it seems like it's ready except for minor nits and that information about when this PR landed.\nSo: @LongCatIsLooong, perhaps that draft is ready for you to use to start migrating the Google-internal clients?",
                "createdAt": "2023-01-28T20:30:32Z"
            },
            {
                "author": "tneotia",
                "bodyText": "fwiw, we've been using the merged engine code in our production app with Flutter 3.7 and this PR cherry-picked in (as per #20796 (comment)). Still working great and would be absolutely amazing to have this merged in officially!",
                "createdAt": "2023-01-28T20:39:37Z"
            },
            {
                "author": "LongCatIsLooong",
                "bodyText": "The analyzer check is failing, likely because of dart 3.0 nnbd changes. Could you take a look?",
                "createdAt": "2023-01-30T02:47:55Z"
            },
            {
                "author": "tneotia",
                "bodyText": "The analyzer check is failing, likely because of dart 3.0 nnbd changes. Could you take a look?\n\nShould be good now :)",
                "createdAt": "2023-01-30T03:50:23Z"
            },
            {
                "author": "CaseyHillers",
                "bodyText": "@justinmc or @LongCatIsLooong the Google Testing failures have several breakages. Can you prep the internal patch before landing this PR?",
                "createdAt": "2023-01-30T14:11:26Z"
            },
            {
                "author": "justinmc",
                "bodyText": "@CaseyHillers Done, pinging you the CL.\n@tneotia I think the 2 other failures are infra flakes, but I'm not able to rerun them... Maybe push a merge commit?",
                "createdAt": "2023-01-30T21:09:57Z"
            },
            {
                "author": "tneotia",
                "bodyText": "@justinmc looks like all tests are a go now (apart from Google testing, not sure if that is already fixed or not)",
                "createdAt": "2023-01-30T21:52:35Z"
            },
            {
                "author": "justinmc",
                "bodyText": "Awesome, thank you!  The google tests should be fixed on our side soon if not already.  We might have to manually set it to passing.",
                "createdAt": "2023-01-30T21:56:25Z"
            },
            {
                "author": "LongCatIsLooong",
                "bodyText": "@tneotia Could you sync this to the tip of the tree?",
                "createdAt": "2023-01-31T19:08:41Z"
            },
            {
                "author": "tneotia",
                "bodyText": "@LongCatIsLooong done :)",
                "createdAt": "2023-01-31T19:10:15Z"
            },
            {
                "author": "justinmc",
                "bodyText": "Thanks @tneotia for your persistence with this PR!  A lot of people are going to appreciate this work.",
                "createdAt": "2023-01-31T19:51:08Z"
            },
            {
                "author": "tneotia",
                "bodyText": "No problem. Glad we could contribute this feature to Flutter, definitely a must-have for chat apps!\nHoepfully someone can pick up the torch and add iOS / Web / Desktop support to this API (right now we use the pasteboard package for web & desktop).\nRegardless, thanks for sticking with us as well for this! Super excited for this to land. When should I reopen the migration guide PR?",
                "createdAt": "2023-01-31T20:17:35Z"
            },
            {
                "author": "justinmc",
                "bodyText": "@tneotia Ah good call, I'll reopen it now.",
                "createdAt": "2023-02-02T19:05:38Z"
            }
        ],
        "commentCount": 29
    },
    {
        "number": 102687,
        "title": "[framework] remove forced compositing from opacity",
        "author": "Jonah Williams",
        "state": "CLOSED",
        "closedAt": "2022-05-26T02:00:42Z",
        "createdAt": "2022-04-27T20:47:34Z",
        "comments": [
            {
                "author": "jonahwilliams",
                "bodyText": "actually the goldens I'm seeing are making me think this isn't working correctly, investigating",
                "createdAt": "2022-04-27T21:24:20Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "running a few of these locally on windows and chrome they look identical",
                "createdAt": "2022-04-27T21:30:54Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Also skip saveLayer at 255 alpha",
                "createdAt": "2022-04-28T20:00:33Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "I'm going to do a g3 run to see what those scubas do",
                "createdAt": "2022-04-28T20:01:03Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Running google3 goldens I don't see any issues, its like opacity doesn't work but only on skia gold",
                "createdAt": "2022-04-29T01:09:07Z"
            },
            {
                "author": "flar",
                "bodyText": "I agree that we only want the forced compositing and isolated children on animating things. Some apps might drive opacity animations directly themselves using an Opacity widget, but they should look to use an animated widget instead for multiple reasons (for one thing, fewer rebuilds of their tree).",
                "createdAt": "2022-04-29T03:00:36Z"
            },
            {
                "author": "goderbauer",
                "bodyText": "I agree that we only want the forced compositing and isolated children on animating things. Some apps might drive opacity animations directly themselves using an Opacity widget, but they should look to use an animated widget instead for multiple reasons (for one thing, fewer rebuilds of their tree).\n\nAgreed. The docs already push people strongly away from Opacity if they want to animate.",
                "createdAt": "2022-04-29T16:10:42Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Yeah, use an animated opacity widget instead of opacity to animate is fairly straightforward advice",
                "createdAt": "2022-04-29T18:27:19Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "So I reproduced the skia gold issues locally. This is due to #48417\nTo make this landable I will force compositing only on the web",
                "createdAt": "2022-04-29T19:40:15Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Not sure what we should do about naming vs breaking. i'd lean towards not breaking, and I adjusted the name to pushOpacityValue which is at least not misleading if we don't push a layer. We could change the name to pushAlpha, since it accepts an int and not a double",
                "createdAt": "2022-04-29T22:30:44Z"
            },
            {
                "author": "flar",
                "bodyText": "The animations produce a double, though. I'm leaning toward breaking change depending on how wide your search was.\nCC @dnfield @Hixie",
                "createdAt": "2022-04-29T22:59:30Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "The OpacityLayer also takes an alpha: \n  \n    \n      flutter/packages/flutter/lib/src/rendering/layer.dart\n    \n    \n         Line 1751\n      in\n      fba9214\n    \n  \n  \n    \n\n        \n          \n           set alpha(int? value) { \n        \n    \n  \n\n\nI can certainly do the breaking change. We have a lot of headroom before the next release",
                "createdAt": "2022-04-29T23:01:23Z"
            },
            {
                "author": "flar",
                "bodyText": "The OpacityLayer also takes an alpha:\n\n  \n    \n      flutter/packages/flutter/lib/src/rendering/layer.dart\n    \n    \n         Line 1751\n      in\n      fba9214\n    \n  \n  \n    \n\n        \n          \n           set alpha(int? value) { \n        \n    \n  \n\n\nI can certainly do the breaking change. We have a lot of headroom before the next release\n\nWe can and should fix that. The graphics libraries can take double, so we shouldn't restrict the higher level interfaces to a lower precision (though in practice, the final results are an 8-bit pixel component, there are calculations before you get there that can happen in floating point and carry more precision until the final round to store the value in the framebuffer).\nAlso, it could take both types of value with a comment/assert to use only one of them.",
                "createdAt": "2022-04-29T23:07:51Z"
            },
            {
                "author": "flar",
                "bodyText": "It looks like phones are already embracing 10-bit per component technology.\nhttps://ledstrain.org/d/1358-phones-with-true-10-bit-display",
                "createdAt": "2022-04-29T23:14:00Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "If we can make the engine accept a double, we can certainly always provide a double. We won't always get to take advantage of the extra resolution though, since the Color class can only store an alpha, and the Paint object only accepts a color.",
                "createdAt": "2022-04-29T23:41:00Z"
            },
            {
                "author": "flar",
                "bodyText": "If we can make the engine accept a double, we can certainly always provide a double. We won't always get to take advantage of the extra resolution though, since the Color class can only store an alpha, and the Paint object only accepts a color.\n\nWe can have the ui.Paint object accept an alpha or an opacity on top of the color.\nCan we expand the ui.Color class to store higher precision in a backward compatible way? Skia has Color and something like Color4f and the SkPaint takes an alpha(int) or an alphaf(SkScalar).\nStuff we're going to have to consider at some point, but we can start with making new APIs take doubles, and can even have them take an int? or double? for both options.",
                "createdAt": "2022-04-29T23:54:59Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Makes sense, will update. I do sort of wonder if we should also use a small epsilon for comparison too...",
                "createdAt": "2022-04-30T00:16:42Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "RE: colors and opacity, we can definitely add new color objects/paint types. It would be good to evaluate what we need to move towards in the next few years so we can coordinate all the required changes",
                "createdAt": "2022-04-30T00:25:43Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Filled a bug for us to discuss next week: #102888\nI had a thought that this might be something we can use dart fix with.",
                "createdAt": "2022-05-01T02:25:46Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Since I looked again and found no use of these APIs outside of the flutter code base, I'm thinking we should just do the breaking change",
                "createdAt": "2022-05-02T15:34:06Z"
            },
            {
                "author": "flar",
                "bodyText": "@goderbauer do the other parts LGTY?",
                "createdAt": "2022-05-02T18:58:51Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "I believe that I've addressed all feedback and will plan on landing this on green CI assuming no other problems....",
                "createdAt": "2022-05-06T01:22:38Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Based on our experience trying to update the physical model layer, I'm going to make this one opt in",
                "createdAt": "2022-05-11T17:23:17Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "I'm currently waiting on a g3 frob run to confirm this has a smaller number of breakages",
                "createdAt": "2022-05-11T20:33:05Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "this has gotten stale, will reopen once we've resolved the scuba issues",
                "createdAt": "2022-05-26T02:00:42Z"
            }
        ],
        "commentCount": 25
    },
    {
        "number": 91496,
        "title": "[Stepper] Add Alternative Label on horizontal-type Stepper",
        "author": "Jiun Kim",
        "state": "MERGED",
        "closedAt": "2022-06-06T21:43:10Z",
        "createdAt": "2021-10-08T16:07:10Z",
        "comments": [
            {
                "author": "KKimj",
                "bodyText": "I will add new tests to check this PR",
                "createdAt": "2021-10-08T16:37:22Z"
            },
            {
                "author": "craiglabenz",
                "bodyText": "Thanks for the confirmation on tests, @KKimj. If you're new to widget tests, the existing Stepper widget tests contain many great examples of meaningful tests :)",
                "createdAt": "2021-10-08T23:43:48Z"
            },
            {
                "author": "KKimj",
                "bodyText": "@craiglabenz\nHello, I add new test for lable ( Alternative Label ) with stepper.\nPlease check, and give me some comments.\nThanks, HAGW!",
                "createdAt": "2021-10-09T09:29:25Z"
            },
            {
                "author": "KKimj",
                "bodyText": "@craiglabenz\nHello\nCan you please comment on my PR?\nThank you.",
                "createdAt": "2021-10-17T23:46:08Z"
            },
            {
                "author": "KKimj",
                "bodyText": "@craiglabenz\nHello, how are you doing?\nCan you give me a new feedback?\nThank you.",
                "createdAt": "2021-11-13T16:22:15Z"
            },
            {
                "author": "craiglabenz",
                "bodyText": "@KKimj\nI am So. So. sorry for disappearing for so long. Somehow, the alert for this PR snuck past me and I never caught it.\nIn my last comment, I wrote \"it would be nice to add another one that confirms the styling logic you've written is behaving as anticipated\", which I now realize was a little unclear. The key function I would like to see tested is _labelStyle, since it accepts an index and merges that with the user's progress through the stepper and the Dark Mode / Light Mode status before ultimately yielding a TextStyle. The internals of that function are pretty complicated, so I think we should have tests to verify that a Stepper with X steps, and currently at step Y, is rendering each label correctly. There are a few scenarios to cover there - steps before, on, and after the active step; in both light mode and dark mode.\nDoes all of that make sense?\nPS - I promise not to disappear this time!",
                "createdAt": "2022-01-26T22:25:24Z"
            },
            {
                "author": "KKimj",
                "bodyText": "Hello!! LTNS!!\nI understand what you say.\nI will update test-codes soon.\nSomething like below.\n\nLet, X := currentStepIndex, Y := arbitraryStepIndex (except current)\n\n\nset X = 0.\nCheck Styles of X and Y.\nset X = 1.\nInvoke setState().\nCheck Styles of X and Y.\n\nP.S\nHappy New Year!",
                "createdAt": "2022-01-31T03:47:20Z"
            },
            {
                "author": "craiglabenz",
                "bodyText": "Yes, that looks like the right pseudocode. Thanks so much and \ud83c\udf14 Happy New Year \ud83c\udf14 to you, too!",
                "createdAt": "2022-01-31T04:06:52Z"
            },
            {
                "author": "Hixie",
                "bodyText": "@KKimj Is this a PR you are interested in doing further work on? It's perfectly understandable if you don't have time right now, and if that's the case we can save what you've done so far and put it aside so that if someone else wants to work on this they can start from your PR. But if you do have the time to work on this, that would be great!",
                "createdAt": "2022-04-19T23:10:37Z"
            },
            {
                "author": "KKimj",
                "bodyText": "@Hixie\nHello!\nI always had it in mind. I want to finish all the work within April. How does that sound?",
                "createdAt": "2022-04-19T23:15:24Z"
            },
            {
                "author": "KKimj",
                "bodyText": "@craiglabenz\nHello..! It's been so long. How have you been?\nI pushed a commit for test about TextStyles of Label Widget.\nPlease Review my commit.\nThanks!",
                "createdAt": "2022-04-21T09:23:50Z"
            },
            {
                "author": "craiglabenz",
                "bodyText": "That test looks good, @KKimj. However, I just tested the code myself directly, and the padding / alignment issue does still seem to be in play. Is this something you're also looking to address?",
                "createdAt": "2022-04-22T16:25:16Z"
            },
            {
                "author": "KKimj",
                "bodyText": "@craiglabenz\nHello!\nNow I realize again that there is no alternative label in the Vertical type, StepperType.vertical.\n\nhttps://material.io/archive/guidelines/components/steppers.html#steppers-types-of-steppers\n\n\nAnyway, I found a way to solve the padding / alignment issue.\nThe method is to modify the function '_buildVerticalHeader', forcing width to 24.0, according to the Material Guide.\n\nCode diff here, (It was not pushed.)\n\n\n\nAn example UI can be similar to the following.\n\n\nBut it's too cramped, and as I said above, it's dubious because `alternative label` is not in the Vertical type. I'd like to ask for advice on how to do it.\nThanks, Have a good day!",
                "createdAt": "2022-04-25T15:41:43Z"
            },
            {
                "author": "craiglabenz",
                "bodyText": "Oh dear, we're running out of pixels below the circle. To be honest, I'm not sure that it makes sense to put anything in this spot, given the screenshots you shared and how cramped the area is. The fact that only such short strings will fit is a bit of a problem, in my opinion.\nTaking a step back - what informed your desire to land this change? Is there possibly another way that need could be satisfied?",
                "createdAt": "2022-04-25T16:10:14Z"
            },
            {
                "author": "KKimj",
                "bodyText": "@craiglabenz\nI was motivated for the horizontal type.\nIs it right to exclude it from the vertical type?\nOr is it right to include even more width?\nBut this would violate the width or margin value of the Material design.",
                "createdAt": "2022-04-25T16:53:06Z"
            },
            {
                "author": "craiglabenz",
                "bodyText": "I think it's probably fair to have this be horizontal-only, and to spell that out in the relevant docstrings.",
                "createdAt": "2022-04-25T16:55:05Z"
            },
            {
                "author": "KKimj",
                "bodyText": "Thank you!\nThen, when the label attribute is given in the vertical type, how should I handle it?\nShould I use an asset or something?",
                "createdAt": "2022-04-25T16:59:12Z"
            },
            {
                "author": "craiglabenz",
                "bodyText": "My ideal solution would simply be to do nothing in the vertical case. Have the new attribute's docstring mention that it is only honored in the horizontal alignment and then make no changes to the vertical build methods.",
                "createdAt": "2022-04-25T17:04:27Z"
            },
            {
                "author": "KKimj",
                "bodyText": "Thank you for letting me know about your Insight!\nI just did some new push.\nPlease check. Thank you!",
                "createdAt": "2022-04-25T17:17:31Z"
            },
            {
                "author": "craiglabenz",
                "bodyText": "I like that this is currently horizontal-only, but I'm also seeing a spacing issue there. Note that before adding a label, everything is appropriately centered:\n\nBut then after adding a label, the horizontal connectors shift and are no-longer centered. fwiw, I think this is largely the core challenge of this PR - you can no longer as easily predict the heights of each component to know how to keep the horizontal connectors centered within the circle.\n\nThe horizontal connectors look centered within the entire column of circle-and-label, but my hunch is that it should remain centered within the circle.",
                "createdAt": "2022-04-25T18:16:42Z"
            },
            {
                "author": "KKimj",
                "bodyText": "@craiglabenz\nThis is what you're expecting, right?",
                "createdAt": "2022-04-25T19:01:50Z"
            },
            {
                "author": "craiglabenz",
                "bodyText": "That centering looks good! I forget, is the elevation coming from the Stepper itself, or have you wrapped it in something in this demo? If it comes from the Stepper itself, then some padding below the label would help.",
                "createdAt": "2022-04-25T19:10:11Z"
            },
            {
                "author": "KKimj",
                "bodyText": "@craiglabenz\nFirst, padding and size will follow the following.\nlink\n\n\nAnd the elevation is coming from the Stepper itself.",
                "createdAt": "2022-04-25T19:16:08Z"
            },
            {
                "author": "KKimj",
                "bodyText": "@craiglabenz\nHello!!\nI Pushed some commits.\nPlease review!",
                "createdAt": "2022-04-25T20:20:07Z"
            },
            {
                "author": "KKimj",
                "bodyText": "And also, Please check out these corner cases, which are related to fontSize.",
                "createdAt": "2022-04-25T20:31:32Z"
            },
            {
                "author": "KKimj",
                "bodyText": "@craiglabenz\nCould you give me some comments?\nThanks!",
                "createdAt": "2022-05-02T14:47:42Z"
            },
            {
                "author": "KKimj",
                "bodyText": "@craiglabenz\nWow, thank you.\nIs there anything I need to do for customer_testing-linux, CI that has failed?",
                "createdAt": "2022-06-03T09:00:32Z"
            },
            {
                "author": "craiglabenz",
                "bodyText": "I strongly suspect that failure is a false-negative, but we'll have to see if it happens again.",
                "createdAt": "2022-06-03T09:53:34Z"
            },
            {
                "author": "craiglabenz",
                "bodyText": "I've been told that to clear the false-negative, we'll need to rebase this branch against master (vs merging in master like you currently did). Feel free to squash these commits to make the rebase easier, and then force push - and I think that should do it.",
                "createdAt": "2022-06-06T15:41:33Z"
            },
            {
                "author": "KKimj",
                "bodyText": "@craiglabenz\nThanks!\nIt works!",
                "createdAt": "2022-06-06T16:57:07Z"
            }
        ],
        "commentCount": 30
    },
    {
        "number": 83530,
        "title": "Add a more complete app template for Flutter (skeleton)",
        "author": "Filip Hracek",
        "state": "MERGED",
        "closedAt": "2021-06-28T22:26:05Z",
        "createdAt": "2021-05-28T00:23:02Z",
        "comments": [
            {
                "author": "filiph",
                "bodyText": "This is ready for re-review. Some notes:\n\nThis is an updated version of #76519, which already got LGTM from @goderbauer, @zanderso, @Hixie, @csells.\nStill, I'd like someone to go over the final product, including my changes:\n\nThe template is now null safe\nThe change is rebased to latest Flutter (~3 months of development)\n\n\nThe change will fail CI until I also land flutter/packages#366. In the original PR, @stuartmorgan asks not to land the flutter/packages change until this one is fully approved and ready to land.\n\nAlso, @brianegan, can I ask you to  reply @googlebot I consent. here, please?",
                "createdAt": "2021-06-01T23:33:30Z"
            },
            {
                "author": "csells",
                "bodyText": "lgtm",
                "createdAt": "2021-06-02T13:52:15Z"
            },
            {
                "author": "HansMuller",
                "bodyText": "Maybe Dummy isn't the best prefix. Stub or proxy might be better.",
                "createdAt": "2021-06-02T17:48:53Z"
            },
            {
                "author": "filiph",
                "bodyText": "Renamed Dummy* to Sample*. Thanks for the naming idea, @Hixie, I really like it.",
                "createdAt": "2021-06-03T19:13:21Z"
            },
            {
                "author": "brianegan",
                "bodyText": "@googlebot I consent.",
                "createdAt": "2021-06-04T10:51:34Z"
            },
            {
                "author": "brianegan",
                "bodyText": "Looking good, glad to see this one moving forward :) Also, I like the change from Dummy to Sample as well \ud83d\udc4d",
                "createdAt": "2021-06-04T10:52:12Z"
            },
            {
                "author": "filiph",
                "bodyText": "One complication that I only realized as I'm testing locally is the fact that adding generated localization from the very start invalidates our flutter create steps.\nObserve:\n$ flutter create -t skeleton my_test\nCreating project my_test...\n  [...]\nWrote 133 files.\n\nAll done!\nIn order to run your application, type:\n\n  $ cd my_test\n  $ flutter run\n\nYour application code is in my_test/lib/main.dart.\n\nIf you try to follow the instructions above, you get an error:\n$ cd my_test\n$ flutter run\nLaunching lib/main.dart on Pixel 2 XL in debug mode...\nError: Couldn't resolve the package 'flutter_gen' in 'package:flutter_gen/gen_l10n/app_localizations.dart'.\nlib/src/app.dart:2:8: Error: Not found: 'package:flutter_gen/gen_l10n/app_localizations.dart'\nimport 'package:flutter_gen/gen_l10n/app_localizations.dart';\n       ^\n[...]\n\nException: Gradle task assembleDebug failed with exit code 1\n\nWhat you need to do at that point is:\n$ flutter pub get\n\nAfter that, flutter run works. This is confusing, since some version of flutter pub get is called after flutter create, as far as I know. I guess it's running too soon?\n@jonahwilliams and I quickly chatted about this on Discord because the same issue happens in testing. It's easy enough to run flutter pub get --offline in automated tests, but it's harder to ask users to remember to do that.\nNow, I wonder if we want to fix the flutter create output (easier but uglier) or to start automatically doing flutter pub get --offline after create.\nWe never had this issue because no template had source generation in it from the very beginning.",
                "createdAt": "2021-06-07T19:34:30Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Now, I wonder if we want to fix the flutter create output (easier but uglier) or to start automatically doing flutter pub get --offline after create.\n\nI think this sounds like a reasonable approach, it will be fast and we could always hide the output from that step too.",
                "createdAt": "2021-06-07T19:36:09Z"
            },
            {
                "author": "filiph",
                "bodyText": "Ok, I'll add that to the CL, then.",
                "createdAt": "2021-06-07T19:39:44Z"
            },
            {
                "author": "zanderso",
                "bodyText": "Ok, I'll add that to the CL, then.\n\nShould it go in a separate CL? This CL is already pretty big.",
                "createdAt": "2021-06-07T19:44:17Z"
            },
            {
                "author": "filiph",
                "bodyText": "I'll be more than happy to do it in a separate one!",
                "createdAt": "2021-06-07T20:49:08Z"
            },
            {
                "author": "filiph",
                "bodyText": "I filed the issue for the flutter create fix: #84150.\nI consider this PR ready to go, so I asked @stuartmorgan for a review & merge of flutter/packages#366, which should make the tests here go green.\nUPDATE Stuart correctly notes that two of the reviewers here have only commented so far and haven't actually approved. My bad, I somehow thought everyone here approved in a comment.\n@Hixie, @HansMuller: does the change look good to you now?",
                "createdAt": "2021-06-07T21:01:15Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "All you need to do is set this line to true: https://github.com/flutter/flutter/blob/master/packages/flutter_tools/lib/src/commands/create_base.dart#L427",
                "createdAt": "2021-06-07T22:08:46Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Sorry, totally slipped my mind",
                "createdAt": "2021-06-07T22:08:54Z"
            },
            {
                "author": "filiph",
                "bodyText": "Sweet! Thanks @jonahwilliams, I made the change here.\nFixes #84150.",
                "createdAt": "2021-06-08T02:24:51Z"
            },
            {
                "author": "frankhasen",
                "bodyText": "I would be very happy if the template would implement the Navigator 2.",
                "createdAt": "2021-09-10T11:01:26Z"
            },
            {
                "author": "Add00w",
                "bodyText": "I would be very happy if the template would implement the Navigator 2.\n\nwith bottom navigation too.",
                "createdAt": "2022-07-26T13:31:24Z"
            },
            {
                "author": "stuartmorgan",
                "bodyText": "This PR has been closed since last year; the place to file new enhancement requests is the issue tracker.",
                "createdAt": "2022-07-26T13:44:15Z"
            }
        ],
        "commentCount": 18
    },
    {
        "number": 62330,
        "title": "Use a LinkedList to improve the performances of ChangeNotifier",
        "author": "Remi Rousselet",
        "state": "MERGED",
        "closedAt": "2020-08-26T18:34:03Z",
        "createdAt": "2020-07-27T11:19:34Z",
        "comments": [
            {
                "author": "fluttergithubbot",
                "bodyText": "It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption to this rule, contact Hixie on the #hackers channel in Chat.\nReviewers: Read the Tree Hygiene page and make sure this patch meets those guidelines before LGTMing.",
                "createdAt": "2020-07-27T11:19:37Z"
            },
            {
                "author": "goderbauer",
                "bodyText": "It would probably be best to submit the benchmark fist to https://github.com/flutter/flutter/tree/master/dev/benchmarks/microbenchmarks so we can collect a couple of numbers with the current implementation and then see how this PR changes the numbers when it gets submitted.\nThe benchmark should probably also track the performance of the other relevant operations (adding/removing listeners).",
                "createdAt": "2020-07-27T20:34:25Z"
            },
            {
                "author": "escamoteur",
                "bodyText": "I'm currently working on a package that offers rx like operators for ValueListenables so to say the poor mans rx without streams.\nhttps://github.com/escamoteur/listenable_pipe/tree/master\nIn this context I would appreciate any performance improvements here",
                "createdAt": "2020-07-27T20:50:40Z"
            },
            {
                "author": "rrousselGit",
                "bodyText": "I've fixed all comments\nWhat's remaining is:\n\nmake a benchmark on https://github.com/flutter/flutter/tree/master/dev/benchmarks/microbenchmarks\nsupport recursive notifyListeners calls\n\nI'll come back to this PR in a bit later this week",
                "createdAt": "2020-07-27T22:33:09Z"
            },
            {
                "author": "escamoteur",
                "bodyText": "It would be great if @munificent could have a look at the benchmark in respect of cache misses as we talked about on Twitter. As @letsar pointed out it may be that the whole benchmark data might fit in the cache so that we don't see any cache miss effects.",
                "createdAt": "2020-07-28T11:21:22Z"
            },
            {
                "author": "goderbauer",
                "bodyText": "@escamoteur Can you link to the twitter conversation for context?",
                "createdAt": "2020-07-28T16:27:40Z"
            },
            {
                "author": "rrousselGit",
                "bodyText": "https://twitter.com/lets4r/status/1287670675801604096?s=19",
                "createdAt": "2020-07-28T16:35:10Z"
            },
            {
                "author": "dkwingsmt",
                "bodyText": "If we're moving forward with this change, we probably want to make the same change to actions.dart where the exact listener logic is replicated.\n(We might want to do the same to InkWell too, where ObserverList is used because we want to maintain an expectedly short list; however your benchmark shows that LinkedList beats ObserverList even in small number cases.)",
                "createdAt": "2020-07-30T23:39:37Z"
            },
            {
                "author": "rrousselGit",
                "bodyText": "I've changed a bit the algorithm to still rely on cloning the list of listeners, as otherwise the logic gets quite dirty to support nested listeners/notify calls.\nUsing LinkedList still removes the contains call, so we are still winning in even for 1-2 listeners and changing from O(N^2) to O(N)\nThe difference at 0 listeners is explained by the early return if there is no listener (as the current implementation do a list clone for no reason)",
                "createdAt": "2020-08-01T05:45:43Z"
            },
            {
                "author": "goderbauer",
                "bodyText": "The difference at 0 listeners is explained by the early return if there is no listener (as the current implementation do a list clone for no reason)\n\nWhich early return do you mean?",
                "createdAt": "2020-08-07T17:46:14Z"
            },
            {
                "author": "rrousselGit",
                "bodyText": "The difference at 0 listeners is explained by the early return if there is no listener (as the current implementation do a list clone for no reason)\n\nWhich early return do you mean?\n\nInside notifyListeners",
                "createdAt": "2020-08-07T18:21:43Z"
            },
            {
                "author": "rrousselGit",
                "bodyText": "Will do.\nThe benchmark numbers are indeed up to date with the latest implementation",
                "createdAt": "2020-08-07T18:22:36Z"
            },
            {
                "author": "goderbauer",
                "bodyText": "Inside notifyListeners\n\nI don't see an early return in there?",
                "createdAt": "2020-08-07T18:24:31Z"
            },
            {
                "author": "rrousselGit",
                "bodyText": "Oh I forgot to push it!\nIt's basically a:\nnotifyListeners() {\n  if (listeners.isEmpty)\n    return;\n}",
                "createdAt": "2020-08-07T18:26:39Z"
            },
            {
                "author": "goderbauer",
                "bodyText": "Not sure why that one check keeps failing on cirrus. You may have to rebase the PR to the latest master.",
                "createdAt": "2020-08-14T18:32:10Z"
            },
            {
                "author": "goderbauer",
                "bodyText": "/cc @Hixie What do you think about this?",
                "createdAt": "2020-08-14T18:38:32Z"
            },
            {
                "author": "dnfield",
                "bodyText": "Very cool! Approach seems sound to me. It'll have a slightly higher memory cost, but only slightly and worth it for the speed gain.",
                "createdAt": "2020-08-14T18:46:45Z"
            },
            {
                "author": "rrousselGit",
                "bodyText": "Note that I still believe we should fuse addListener and removeListener as I mentioned in the issue (#59611) such that we have a usage similar to Stream.listen and its StreamSubscription.\nThis would fix the comment about removeListener having a surprising behavior when a listener is added multiple times:\n\n/// If a listener had been added twice, and is removed once during an\n/// iteration (i.e. in response to a notification), it will still be called\n/// again. If, on the other hand, it is removed as many times as it was\n/// registered, then it will no longer be called. This odd behavior is the\n/// result of the [ChangeNotifier] not being able to determine which listener\n/// is being removed, since they are identical, and therefore conservatively\n/// still calling all the listeners when it knows that any are still\n/// registered.\n///\n/// This surprising behavior can be unexpectedly observed when registering a\n/// listener on two separate objects which are both forwarding all\n/// registrations to a common upstream object.\n\nBut that would be breaking and it's not too important.",
                "createdAt": "2020-08-14T21:05:16Z"
            },
            {
                "author": "Hixie",
                "bodyText": "This PR looks great!\nWould it make sense to deprecate ObserverList entirely if it is consistently slower than the LinkedList approach?\nWhat platforms did we test this on? Might make sense to double-check the findings on iOS, x86, ARM, and Web to make sure it's better on all the platforms (could be a weird artifact of the platform it was tested on).",
                "createdAt": "2020-08-17T22:22:30Z"
            },
            {
                "author": "rrousselGit",
                "bodyText": "I would recommend some of the team members to run the benchmark themselves to double-check. As I mentioned, I'm not a benchmark expert and may have made a mistake when generating these numbers\nFor reference, the benchmark was added to the microbenchmark folder.",
                "createdAt": "2020-08-18T08:22:57Z"
            },
            {
                "author": "Hixie",
                "bodyText": "It looks like nobody has the immediate bandwidth to set up benchmarking for this.\nMy recommendation would be to run some of our existing benchmarks on a couple of platforms (e.g. desktop, web, android, or whatever you have available), and see how those benchmarks fare. Maybe instrument some of the tests to report how many ChangeNotifiers they are using to find a benchmark that uses them more heavily than the others. (I'm not up to date on what benchmarks we have these days so I don't know which one to recommend off hand.)",
                "createdAt": "2020-08-25T23:29:41Z"
            },
            {
                "author": "dnfield",
                "bodyText": "@Hixie is #62715 not satisfactory to benchmark this?\nThose get run on Android and iOS (64 bit).",
                "createdAt": "2020-08-26T00:35:32Z"
            },
            {
                "author": "Hixie",
                "bodyText": "I had understood @rrousselGit's comments above as saying that he didn't have confidence in his benchmark and wanted another. If we have a benchmark we have confidence in then great, let's just run that on a few platforms. :-)",
                "createdAt": "2020-08-26T02:22:27Z"
            },
            {
                "author": "dnfield",
                "bodyText": "Between the specific microbenchmark and benchmarks we have for other tests on other platforms, I'd be confident in landing this as is.",
                "createdAt": "2020-08-26T02:30:47Z"
            },
            {
                "author": "dnfield",
                "bodyText": "I landed this. We can keep an eye on the benchmarks for this commit in the devicelab. Assuming it goes well, we should look to apply this pattern to other places that could use it:\n\nRawKeyboard._handleKeyEvent (raw_keyboard.dart)\nAnimationLocalListenersMixen.notifyListeners (listener_helpers.dart)\nAction.notifyActionListeners (actions.dart)\nFocusManager._notifyHighlightModeListeners (focus_manager.dart).\n\nWould be nice if we could somehow encapsulate the pattern for those.",
                "createdAt": "2020-08-26T18:37:18Z"
            },
            {
                "author": "Hixie",
                "bodyText": "Looking at the benchmarks, it's not clear that this had the impact we were hoping for.\nI didn't see any change on memory-related benchmarks I looked at, or on performance macrobenchmarks.\nOn the listener-specific microbenchmarks, on Android it made addListener2_iteration much (~10x) worse (maybe because it pushed the benchmark into needing more GC?), addListener3_iteration, addListener4_iteration, and addListener5_iteration a little worse (~15%), the notifyListenerX_iteration benchmarks got better (higher Xs got proportionally better improvement), and removeListenerX_iteration tests are mostly unaffected. On iOS the data is too noisy to discern an effect, though based on eyeballing the data, I suspect that if we were to do a rigorous analysis we'd find similar trends but with less amplitude.\nOverall I think this was a wash. :-/ Probably worth keeping since hopefully adding listeners is rarer than notifying, though there's a chance this will have a negative effect on launch performance.\nIt might be that the increased constant cost of a linked list, and the loss of locality, offset much of the potential gain?\nfyi @liyuqian",
                "createdAt": "2020-09-03T23:58:40Z"
            },
            {
                "author": "rrousselGit",
                "bodyText": "Would it make sense to have a custom linked list implementation?\nAnother thing I've been thinking is, we could optimize 1-2 listeners by storing them out of the list:\nclass Notifier {\n  VoidCallback firstListener;\n  LinkedLisf<ListenerEntry> otherListeners;\n\n  addListener(VoidCallback cb) {\n    if (firstListener == null) {\n      firstListener = cb;\n    }\n    else\n       otherListeners.add(ListenerEntry(cb));\n  } \n}\nThst could make very small listeners cases faster.",
                "createdAt": "2020-09-04T00:34:09Z"
            },
            {
                "author": "letsar",
                "bodyText": "@Hixie I created another implementation based on a List and not a LinkedList. The benchmark result was pretty similar to what @rrousselGit came up, but it was always a bit behind its implementation so I didn't mention it.\nHow could I benchmark my implementation with the micro and macrobenchmark you mentioned before, so that I could see whether the list implementation brings performance improvements or not?",
                "createdAt": "2020-09-04T06:20:46Z"
            },
            {
                "author": "Hixie",
                "bodyText": "They're the benchmarks should on https://flutter-dashboard.appspot.com/, which is just the tests listed in https://github.com/flutter/flutter/blob/master/dev/devicelab/manifest.yaml, which you can run locally, see the README in that directory.",
                "createdAt": "2020-09-07T19:35:07Z"
            },
            {
                "author": "Kavantix",
                "bodyText": "@Hixie I have done some testing and I found that for some reason the iterator of LinkedList is very slow.\nSo that could explain why the removeListener benchmark became so much slower and also why the notifyListeners impact isn't as great as we hoped.\nOn my 7+ and iPad pro I ran a test in release mode where I do the notifyListeners pattern (list size is 2 and repeat is 1e6)\nWhen using List.of it takes about 32 ms on the 7+ and 24ms on the ipad to do this:\n  for (int j = 0; j < repeat; j++) {\n    final entries = List.of(linked);\n    for (final entry in entries) {\n      if (entry.list == list) sum += entry.val;\n    }\n  }\n(With a list size of 20 this becomes 173 ms on the 7+ and 105 ms on the ipad)\nWhen I however use a custom copy of the list it takes only about 8ms on the 7+ and 5ms on the ipad:\n  for (int j = 0; j < repeat; j++) {\n    Entry entry = linked.first;\n    final entries = List.generate(linked.length, (_) {\n      final e = entry;\n      entry = entry.next;\n      return e;\n    });\n    for (final entry in entries) {\n      if (entry.list == list) sum += entry.val;\n    }\n  }\n(With a list size of 20 this becomes 72 ms on the 7+ and 40 ms on the ipad)\nAnd for reference using a list instead of linked list:\n  for (int j = 0; j < repeat; j++) {\n    final copy = List.of(list);\n    for (final i in copy) {\n      if (list.contains(i)) sum += i;\n    }\n  }\nThis takes:\n37 ms with size 2 and 436 ms with size 20 on the 7+\n45 ms with size 2 and 294 ms with size 20 on the ipad",
                "createdAt": "2020-11-13T09:47:15Z"
            },
            {
                "author": "liyuqian",
                "bodyText": "Traversal over a continuous range of elements is expected to be much slower for a LinkedList compared to a List for the following reasons.\n\nA List puts adjacent items in adjacent memory. When you access a list item, the CPU L1/L2 cache will fetch adjacent memory which likely covers the next few items. Hence visiting the next item will be a CPU L1/L2 cache hit which is much faster than accessing the main memory.\nA LinkedList puts adjacent item in random locations. Accessing an item is unlikely to fetch adjacent items into CPU L1/L2 cache. Hence visiting adjacent items will be slower due to cache miss, but it has a better asymptotic complexity when items can be inserted/removed at random locations. A List takes O(N) time to do that while a LinkedList takes O(1) time to do that.\n\nOf course, one can implement a custom HybridList which links smaller continuous List together to utilize CPU L1/L2 cache for adjacent items, and limit worst case complexity by limiting the smaller List to have a constant size.\nThat may be an over-optimization unless we can prove that piece of code is actually a bottleneck in real applications. That said, I'm Ok with both the List and LinkedList approach since I haven't seen any related performance issues in real applications yet. Even the O(N^2) vs O(N) worst case complexity doesn't bother me too much as I expect N to be quite small (<10) in most cases. For example, the standard quick sort algorithm in C++ uses O(N^2) sorting algorithm instead of O(N log N) algorithm for small N.\nIn summary, if it's me, I'll just pick the one that's easiest to implement and read, until I see a performance issue in a real app.",
                "createdAt": "2020-11-13T20:19:48Z"
            }
        ],
        "commentCount": 31
    },
    {
        "number": 43735,
        "title": "Fixed onSort bug in data_table.dart",
        "author": "Ander Moran",
        "state": "CLOSED",
        "closedAt": "2020-03-13T01:20:51Z",
        "createdAt": "2019-10-29T17:25:27Z",
        "comments": [
            {
                "author": "fluttergithubbot",
                "bodyText": "It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption to this rule, contact Hixie.\nReviewers: Read the Tree Hygiene page and make sure this patch meets those guidelines before LGTMing.",
                "createdAt": "2019-10-29T17:25:30Z"
            },
            {
                "author": "googlebot",
                "bodyText": "Thanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\ud83d\udcdd Please visit https://cla.developers.google.com/ to sign.\nOnce you've signed (or fixed any issues), please reply here with @googlebot I signed it! and we'll verify it.\n\nWhat to do if you already signed the CLA\nIndividual signers\n\nIt's possible we don't have your GitHub username or you're using a different email address on your commit. Check your existing CLA data and verify that your email is set on your git commits.\n\nCorporate signers\n\nYour company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the Google project maintainer to go/cla#troubleshoot (Public version).\nThe email used to register you as an authorized contributor must be the email used for the Git commit. Check your existing CLA data and verify that your email is set on your git commits.\nThe email used to register you as an authorized contributor must also be attached to your GitHub account.\n\n\u2139\ufe0f Googlers: Go here for more info.",
                "createdAt": "2019-10-29T17:25:31Z"
            },
            {
                "author": "andermoran",
                "bodyText": "@Hixie do I need any tests for a change so straightforward?\ncc @willlarche",
                "createdAt": "2019-10-29T17:28:42Z"
            },
            {
                "author": "andermoran",
                "bodyText": "@googlebot I signed it!",
                "createdAt": "2019-10-29T17:30:02Z"
            },
            {
                "author": "googlebot",
                "bodyText": "CLAs look good, thanks!\n\u2139\ufe0f Googlers: Go here for more info.",
                "createdAt": "2019-10-29T17:30:07Z"
            },
            {
                "author": "HansMuller",
                "bodyText": "This appears to be a nice fix for what was probably a typo; thanks! It will definitely need a test: we don't want this issue to crop up again.\nAlso: there are some presubmit DataTable test failures.",
                "createdAt": "2019-10-30T00:50:11Z"
            },
            {
                "author": "andermoran",
                "bodyText": "@HansMuller I've never done a pull request on a public repository so I'm unsure what the next steps are to get this approved.",
                "createdAt": "2019-10-30T18:37:56Z"
            },
            {
                "author": "willlarche",
                "bodyText": "You\u2019re doing a great job!\nFind a test file that\u2019s already doing tests on these classes and add one specifically to check for your case that is being fixed.",
                "createdAt": "2019-10-30T20:59:36Z"
            },
            {
                "author": "andermoran",
                "bodyText": "What I want to test:\nIf you create a DataTable with DataColumns that have no onSort parameter, the text in the cells will not be centered with the columns and the text of the columns will be slightly misaligned because flutter thinks it needs to have space for the arrow associated with a column when the user taps on the column to sort it.\n\nMy fix corrects this (as shown below) and automatically centers the content in the column but I have not the slightest idea as to how to write a test for this.\n\nI know the test file is flutter/packages/flutter/test/material/data_table_test.dart and the test should be in the existing test\n  testWidgets('DataTable column onSort test', (WidgetTester tester) async {\n    await tester.pumpWidget(\n      MaterialApp(\n        home: Material(\n          child: DataTable(\n            columns: const <DataColumn>[\n              DataColumn(\n                label: Text('Dessert'),\n              ),\n            ],\n            rows: const <DataRow>[\n              DataRow(\n                cells: <DataCell>[\n                  DataCell(\n                    Text('Lollipop'), // wraps\n                  ),\n                ],\n              ),\n            ],\n          ),\n        ),\n      ),\n    );\n    await tester.tap(find.text('Dessert'));\n    await tester.pump();\n    expect(tester.takeException(), isNull);\n  });\nI somehow need to test the _buildHeadingCell method of DataTable to make sure that it is possible for a null value to be passed into the onSort parameter. I am unsure how to test a private method in a test file.",
                "createdAt": "2019-11-01T16:32:25Z"
            },
            {
                "author": "andermoran",
                "bodyText": "Also, how is this test\n  testWidgets('DataTable column onSort test', (WidgetTester tester) async {\n    await tester.pumpWidget(\n      MaterialApp(\n        home: Material(\n          child: DataTable(\n            columns: const <DataColumn>[\n              DataColumn(\n                label: Text('Dessert'),\n              ),\n            ],\n            rows: const <DataRow>[\n              DataRow(\n                cells: <DataCell>[\n                  DataCell(\n                    Text('Lollipop'), // wraps\n                  ),\n                ],\n              ),\n            ],\n          ),\n        ),\n      ),\n    );\n    await tester.tap(find.text('Dessert'));\n    await tester.pump();\n    expect(tester.takeException(), isNull);\n  });\ntesting onSort? There isn't even an onSort parameter passed so what exactly is this testing for?",
                "createdAt": "2019-11-01T16:42:40Z"
            },
            {
                "author": "andermoran",
                "bodyText": "Note: another bad ternary comparison argument is also present in this snipped of code in data_table.dart but I am unaware of its side effects.\n      for (DataRow row in rows) {\n        tableRows[rowIndex].children[0] = _buildCheckbox(\n          color: theme.accentColor,\n          checked: row.selected,\n          onRowTap: () => row.onSelectChanged != null ? row.onSelectChanged(!row.selected) : null ,\n          onCheckboxChanged: row.onSelectChanged,\n        );\n        rowIndex += 1;\n      }",
                "createdAt": "2019-11-01T20:16:58Z"
            },
            {
                "author": "andermoran",
                "bodyText": "@HansMuller I'm stuck here and want to get this fix implemented as soon as possible! I'm struggling on the new tests I'm supposed to create (even the existing tests don't make sense) and I need some help.",
                "createdAt": "2019-11-05T16:07:50Z"
            },
            {
                "author": "andermoran",
                "bodyText": "@HansMuller I believe this pr is ready",
                "createdAt": "2019-11-18T16:10:02Z"
            },
            {
                "author": "HansMuller",
                "bodyText": "@andermoran the PR still doesn't include a test. I'm afraid I don't have the time to help craft one at the moment, sorry about that.",
                "createdAt": "2019-11-20T20:02:47Z"
            },
            {
                "author": "andermoran",
                "bodyText": "Despite weeks of looking at several resources to figure out how to write flutter tests, I still can't get the hang of it. Will this bug fix ever be merged?",
                "createdAt": "2020-01-09T18:03:01Z"
            },
            {
                "author": "Hixie",
                "bodyText": "Might https://flutter.dev/docs/cookbook/testing/widget/introduction help?",
                "createdAt": "2020-01-10T08:32:25Z"
            },
            {
                "author": "andermoran",
                "bodyText": "@Hixie I\u2019m not sure if you\u2019re trolling me or not but I just said I\u2019ve spent weeks looking at several resources to write flutter tests but have been unable to. Yes, I have looked at the intro page as well as many other resources. I\u2019ve really tried my hardest to write these tests because I want this merge to happen badly but I\u2019ve been unable to. I\u2019ve looked at all the resources on the web about flutter testing as well as looking through flutter tests in flutter\u2019s source code to how it was done there. At this point I\u2019ve given up. I wish someone could at least write one test for this PR that I need so that I can work off that.",
                "createdAt": "2020-01-10T14:40:50Z"
            },
            {
                "author": "Hixie",
                "bodyText": "If you could file a bug that describes what you tried and how the documentation failed you, that would be great. I'm sad to hear that the current documentation was inadequate to the task.",
                "createdAt": "2020-01-11T01:05:17Z"
            },
            {
                "author": "deadsoul44",
                "bodyText": "Any update?",
                "createdAt": "2020-01-31T09:52:06Z"
            },
            {
                "author": "dkwingsmt",
                "bodyText": "@andermoran I looked into it since this is indeed an interesting PR and exposes some problems of our code coverage. I came up with a unit test as below:\n  testWidgets('DataTable column label position - no sort', (WidgetTester tester) async {\n    Widget buildTable({ int sortColumnIndex, bool sortAscending = true }) {\n      return DataTable(\n        sortColumnIndex: sortColumnIndex,\n        sortAscending: sortAscending,\n        columns: <DataColumn>[\n          const DataColumn(\n            label: Expanded(child: Center(child: Text('Name'))),\n            tooltip: 'Name',\n          ),\n          DataColumn(\n            label: const Expanded(child: Center(child: Text('Calories'))),\n            tooltip: 'Calories',\n            numeric: true,\n            onSort: (int columnIndex, bool ascending) {},\n          ),\n        ],\n        rows: const <DataRow>[\n          DataRow(\n            cells: <DataCell>[\n              DataCell(Text('A long desert name')),\n              DataCell(Text('A lot of calories')),\n            ],\n          ),\n        ]\n      );\n    }\n\n    await tester.pumpWidget(MaterialApp(\n      home: Material(child: buildTable()),\n    ));\n\n    final Finder nameText = find.text('Name');\n    expect(nameText, findsOneWidget);\n    final Finder nameRow = find.ancestor(of: find.text('Name'), matching: find.byType(Row)).first;\n    expect(tester.getCenter(nameText), equals(tester.getCenter(nameRow)));\n  });\nThis test finds the text and its immediately wrapping row, and see if they have the same center, indicating that no other padding is added. This test breaks on master and passes on your PR.\nHowever, I did find a bug (unrelated to this PR) that causes the header to disappear on mouse move, which I've filed at #51152. This bug seems to occur only when the text is not wrapped in the InkWell (which is only found out thanks to your PR), so until that issue is fixed, you'll need to wrap the header in InkWell unconditionally.\nHopefully this is a good starting point for you!",
                "createdAt": "2020-02-21T01:49:48Z"
            },
            {
                "author": "deadsoul44",
                "bodyText": "I fear @andermoran gave up due its frustration. One of team members from flutter should finalize the pull request. It has been already more than 5 months.",
                "createdAt": "2020-02-21T15:56:03Z"
            },
            {
                "author": "andermoran",
                "bodyText": "I fear @andermoran gave up due its frustration. One of team members from flutter should finalize the pull request. It has been already more than 5 months.\n\nCan confirm. Was frustrating to create a test. Did give up.",
                "createdAt": "2020-02-21T16:28:24Z"
            },
            {
                "author": "Hixie",
                "bodyText": "@dkwingsmt If the original bug was alignment issues we should probably have the test toggle the sortability (have onSort be null once, then non-null) and verify that the alignment is correct in both cases.",
                "createdAt": "2020-02-22T00:53:21Z"
            },
            {
                "author": "dkwingsmt",
                "bodyText": "@Hixie I can test that the alignment with onSort is consistent, but it's never gonna be at the center. (Although I can test that the row is centered in the cell, it's not useful since the row is supposed to fill up the cell).",
                "createdAt": "2020-02-22T01:07:53Z"
            },
            {
                "author": "deadsoul44",
                "bodyText": "I would like to have datacolumn label to be still centered even if it is sorted (up or down arrow appears on the right of the centered label). It can be annoying to see centered label moves when it is sorted.",
                "createdAt": "2020-02-22T08:03:02Z"
            },
            {
                "author": "dkwingsmt",
                "bodyText": "@deadsoul44 It's a good proposal, but let me explain the obstacle. The current structure can roughly be presented as:\ntableCell = Container(\n  child: Row(\n    children: [\n      label,  // The `label` argument of `DataColumn`\n      if (onSort != null) sortingArrow,\n    ],\n  ),\n);\nImagine the cell is 100px wide, the arrow being 10px wide and the text 40 px wide. You would expect that:\n\nIf label: Text('Cities') the text is at the left edge of the cell, i.e. [0, 40]\nIf label: Center(child: Text('Cities')) the text is at the center of the cell, [30, 70]\n\n\nThis wouldn't directly work because Row prefers the minimum size, but you can fix it by wrapping it with an Expand.\n\n\nIf label: Align(alignment: Alignment.centerRight), child: Text('Cities')) the text is at the right edge of the possible space, i.e. [50, 90]. (You'll also need Expand).\n\nApparently No. 2 wouldn't center the text in the cell with the current implementation, because the text will be at the center of the remaining space, which is [25, 65].\nAlright, what if we add a mirroring padding at the left, so that since we know the arrow is 10px wide, make the text centered within [10, 90], which is [30, 70]? Well then No. 1 would place the text at [10, 50] instead of the desired [0, 40].\nThe root cause is that DataTable have no information of its child label, and can't decide what to align its child to. I'd like to hear if you have any suggestions!",
                "createdAt": "2020-02-27T22:03:44Z"
            },
            {
                "author": "dkwingsmt",
                "bodyText": "I submitted a PR that continues this one in #51667",
                "createdAt": "2020-02-28T22:59:40Z"
            },
            {
                "author": "deadsoul44",
                "bodyText": "I understand that it is hard to align with current structure. Another option can be to add a \"labelAlignment\" argument. Depending on developer choice, the label can be right, center or left aligned. Currently, it is already assumed as right aligned if column is numeric and left aligned otherwise.",
                "createdAt": "2020-02-29T09:32:49Z"
            },
            {
                "author": "deadsoul44",
                "bodyText": "Pending reviewer for two weeks...",
                "createdAt": "2020-03-11T13:26:15Z"
            },
            {
                "author": "dkwingsmt",
                "bodyText": "This PR has been continued by #51667, which has been merged.",
                "createdAt": "2020-03-13T01:20:51Z"
            }
        ],
        "commentCount": 30
    },
    {
        "number": 28152,
        "title": "Improve hot reload performance",
        "author": "Jonah Williams",
        "state": "MERGED",
        "closedAt": "2019-03-15T22:02:46Z",
        "createdAt": "2019-02-19T17:51:13Z",
        "comments": [
            {
                "author": "Hixie",
                "bodyText": "cc @aam",
                "createdAt": "2019-02-21T01:40:37Z"
            },
            {
                "author": "Hixie",
                "bodyText": "cc @zanderso for review",
                "createdAt": "2019-02-21T01:41:03Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Looks like I'll need to test the path logic on my home windows machine",
                "createdAt": "2019-02-25T21:24:37Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "cc @aam I've added some more information on windows performance",
                "createdAt": "2019-03-02T00:32:47Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "I've also patched this in and run presubmit on it in google3: CL/236402292 all tests, including our hot reload tests are passing",
                "createdAt": "2019-03-02T01:08:02Z"
            },
            {
                "author": "aam",
                "bodyText": "Sorry, I'm not clear what timeline on Windows tells us. 480ms is spent in analyzer(which we want to get rid of in favor of deps produced by compiler), 60ms - in scanning files for changes?",
                "createdAt": "2019-03-03T06:04:45Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "almost 10 ms scanning project directory\n60 ms scanning packages\nalmost 10 ms scanning bundle entries\n90 ms scanning assets\nSo about 170 ms for a small project (flutter gallery) to diff files.",
                "createdAt": "2019-03-03T06:38:34Z"
            },
            {
                "author": "aam",
                "bodyText": "So about 170 ms for a small project (flutter gallery) to diff files.\n\nTo get timestamp, not diff content, right?. Is this number significantly different between windows and mac or linux?",
                "createdAt": "2019-03-04T16:49:52Z"
            },
            {
                "author": "aam",
                "bodyText": "What is the file watcher's latency? Is there a concern that flutter tools won't get notified in time if hot reload follows file update? IJ flutter plugin has a mode where it does automatic hot reload on every save.",
                "createdAt": "2019-03-04T16:51:26Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "To get timestamp, not diff content, right?. Is this number significantly different between windows and mac or linux?\n\nRight, no actual content is read and no File_open calls show up for this portion in the CPU profile. The execution time for the flutter_gallery is about ~90ms for mac/linux which is faster, but still significant.\n\nWhat is the file watcher's latency? Is there a concern that flutter tools won't get notified in time if hot reload follows file update? IJ flutter plugin has a mode where it does automatic hot reload on every save.\n\nI didn't notice any issues when testing locally using hot reload on save, I tested on Linux, Mac, and Windows. There was one place where I encountered an issue, the hot reload integration test which mutates a file and then calls hot reload: https://github.com/flutter/flutter/pull/28152/files#diff-ce4fde68d0bd16865c11a354197704dcR42.\nCurrently if a file were to be missed then it could be picked up on the next hot reload.",
                "createdAt": "2019-03-04T17:50:19Z"
            },
            {
                "author": "zanderso",
                "bodyText": "Currently if a file were to be missed then it could be picked up on the next hot reload.\n\nI think it's not that simple. For example, consider:\n\nThe IDE saves many files all at once.\nThe IDE issues a hot reload\n(These both percolate through the Dart VM's IO eventhandler in non-deterministic order)\nThe flutter tool receives the hot reload command before receiving every file system watcher event\nHot reload fails because of failing to read updates for files whose events haven't come in yet.\n\nAny workaround that adds delays or re-queueing messages will eventually get bitten by this race.\nOne fix could be to supply some sort of ACK to the IDE so that the IDE doesn't issue the hot reload command until getting an ACK for each file that it has saved recently.",
                "createdAt": "2019-03-05T17:51:30Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "One fix could be to supply some sort of ACK to the IDE so that the IDE doesn't issue the hot reload command until getting an ACK for each file that it has saved recently.\n\nWe could also have the daemon protocol provide the list of changed files itself. So in this case, save multiple files and hot reload, the updated files are sent along with the daemon request? We can leave the watchers for non-daemon workflows or editors which don't support that portion.\ncc @devoncarew",
                "createdAt": "2019-03-05T20:51:33Z"
            },
            {
                "author": "devoncarew",
                "bodyText": "I agree w/ the race condition logic in #28152 (comment).\nIs it feasible to re-scan the filesystem for changes when flutter_tools receives a reload/restart request? By the time the IDEs send that request, they've already saved any dirty files.",
                "createdAt": "2019-03-05T21:09:13Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Adding some numbers so that we're aware of the context here:\nVSCode:\nFileWatch notification: 1551824700858\nHot Reload started: 1551824701059\nAbout 200 ms of latency\nIntellij:\nFileWatch notification: 1551825011092\nHot Reload started: 1551825011202\nAbout 110 ms of latency\n\nIs it feasible to re-scan the filesystem for changes when flutter_tools receives a reload/restart request?\n\nWe can, the problem is that it is slow, especially on windows. A single library invalidation hot reload on a windows emulators with this change takes 180 ms. Scanning the flutter gallery and dependencies (a fairly small application) takes about 170 ms, or about as much time as the hot reload itself.\n\nHot reload fails because of failing to read updates for files whose events haven't come in yet.\n\nI haven't been able to reproduce a case where this error is triggered. I am not sure if the frontend server can allow it.",
                "createdAt": "2019-03-05T22:35:38Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "I think I have an idea to drive this forward.\n\nWe re-instate file stat for diffing the workspace and packages\n\nWe always skip file stat on packages in the pub-cache. Updating a package means changing the directory and the pub cache is shared across all apps, so changing the files there is unsafe.\nThat should still improve performance somewhat, since a noticeable chunk of the file stat was in the dependencies.\n\nFor build_runner based workflows with code generation, we augment the daemon protocol to also return a list of additional files produced during the build. This would allow us to skip file stat in the .dart_tool build cache, which could potentially contain thousands of stale or intermediary artifacts.\n\n@zanderso @aam WDUT?",
                "createdAt": "2019-03-06T04:53:42Z"
            },
            {
                "author": "aam",
                "bodyText": "We always skip file stat on packages in the pub-cache. Updating a package means changing the directory and the pub cache is shared across all apps, so changing the files there is unsafe.\n\nWhat about the case when you do pub upgrade(independently from ongoing debugging session) which updates pub-cache contents? You do want for hot reload compiler to pick up updated packages in that case, do you?",
                "createdAt": "2019-03-06T16:44:47Z"
            },
            {
                "author": "aam",
                "bodyText": "Ah, I guess pub upgrade won't update existing versions of the packages, can only download new ones.\nI know me myself in the past have been editing sources in pubcache location - sometimes that is very convenient quick way to experiment with changes in some packages.",
                "createdAt": "2019-03-06T16:57:29Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "It is definitely something I have done as well, but I think supporting it with hot reload is an edge case. pub itself also has no idea that you might have changed something in the cache, so the modified files are left around until that directory is manually deleted or reverted.",
                "createdAt": "2019-03-06T18:23:41Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "I've updated the code to use file stat tracking instead of watching, with some additional restrictions:\nWe only traverse the lib directory of all projects and we only track .dart files. This appears to be considerably faster than our previous approach, since I believe there were some additional inefficiencies in tracking the \"device URI\" which is currently unused.",
                "createdAt": "2019-03-06T20:52:37Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Oh, and we do not traverse directories which are under a .pub_cache directory",
                "createdAt": "2019-03-06T20:53:06Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "This actually seems to regress gallery hot reload timing.",
                "createdAt": "2019-03-06T20:55:38Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Ahh nevermind, in this case changing a common widget like text for the flutter gallery invalidates a huge number of libraries and the resulting reload is much slower. We're still a bit faster with this change\nw/ Change\nPerforming hot reload...                                                                                     \nReloaded 291 of 577 libraries in 2,230ms.\n\nHEAD\nPerforming hot reload...                                                \nReloaded 0 of 577 libraries in 667ms.\n\nPerforming hot reload...\nReloaded 291 of 577 libraries in 3,465ms.",
                "createdAt": "2019-03-06T20:58:31Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Ahh, back to debugging windows at home :)",
                "createdAt": "2019-03-07T00:36:19Z"
            },
            {
                "author": "aam",
                "bodyText": "I've updated the code to use file stat tracking instead of watching, with some additional restrictions:\n\nNow that we again do file stat why not do file stat only for the files that are actually used by the compiler?",
                "createdAt": "2019-03-07T00:48:35Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "That sounds like the best approach, but we'll need to augment the frontend_server to keep us updated. I think that should be landed separately as an optimization to this approach.",
                "createdAt": "2019-03-07T01:34:02Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "I've added additional logic to filter out dev_dependencies as well. With the change to use file stat we've regressed windows improvement to about 275 ms from the previous 180 ms. This is still significantly better than the current performance\nPerforming hot reload...\nReloaded 0 of 577 libraries in 299ms.\n\nPerforming hot reload...\nReloaded 0 of 577 libraries in 265ms.\n\nPerforming hot reload...\nReloaded 0 of 577 libraries in 270ms.\n\nPerforming hot reload...\nReloaded 0 of 577 libraries in 254ms.",
                "createdAt": "2019-03-07T04:57:36Z"
            },
            {
                "author": "aam",
                "bodyText": "That sounds like the best approach, but we'll need to augment the frontend_server to keep us updated. I think that should be landed separately as an optimization to this approach.\n\nIf we want we don't have to regress to directory watching as I think the change to frontend_server is pretty straightforward and can be landed before this cl(first https://dart-review.googlesource.com/c/sdk/+/95920, then #29004).",
                "createdAt": "2019-03-07T18:47:32Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "If we want we don't have to regress to directory watching as I think the change to frontend_server is pretty straightforward and can be landed before this cl(first https://dart-review.googlesource.com/c/sdk/+/95920, then #29004).\n\nI though we agreed this should be landable without the frontend server updates?",
                "createdAt": "2019-03-08T22:23:30Z"
            },
            {
                "author": "aam",
                "bodyText": "If we want we don't have to regress to directory watching as I think the change to frontend_server is pretty straightforward and can be landed before this cl(first https://dart-review.googlesource.com/c/sdk/+/95920, then #29004).\n\nI though we agreed this should be landable without the frontend server updates?\n\nNot sure. I thought last conversation on this was before we realized we do need to stat files, can't rely on watching directories, no?",
                "createdAt": "2019-03-08T22:33:43Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "I think how we detect which files are changed is unrelated to any additional subsetting we do.",
                "createdAt": "2019-03-08T23:01:29Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "We should still be able to update existing packages though, will update the PR.\nEDIT: same issue as adding a new package",
                "createdAt": "2019-03-12T21:51:03Z"
            }
        ],
        "commentCount": 31
    },
    {
        "number": 16705,
        "title": "Add support for listing and launching emulators",
        "author": "Danny Tuppeny",
        "state": "MERGED",
        "closedAt": "2018-05-09T15:04:01Z",
        "createdAt": "2018-04-18T10:06:59Z",
        "comments": [
            {
                "author": "DanTup",
                "bodyText": "@devoncarew @mit-mit I've been working through the Android Studio code to see how it gets more info about AVDs and it seems that it doesn't just shell out to emulator as I am, it basically parses the AVD ini files itself, finding the location like:\n    public static String getAvdFolder() throws AndroidLocationException {\n        if (sAvdLocation == null) {\n            String home = findValidPath(Global.ANDROID_AVD_HOME);\n            if (home == null) {\n                home = getFolder() + FOLDER_AVD;\n            }\n            sAvdLocation = home;\n            if (!sAvdLocation.endsWith(File.separator)) {\n                sAvdLocation += File.separator;\n            }\n        }\n        return sAvdLocation;\n    }\nDo we want to copy this? Without it, I think we could only display the IDs so I think we do, but it's a big step from just parsing the output of emulator as we need to start coding in fairly specific knowledge about how emulator etc. works (I don't know if it's likely to change, but it's a risk).",
                "createdAt": "2018-04-18T10:10:30Z"
            },
            {
                "author": "mit-mit",
                "bodyText": "Yes, we would very much like to show the AVD names, this is #11850",
                "createdAt": "2018-04-18T10:25:49Z"
            },
            {
                "author": "DanTup",
                "bodyText": "Yes, we would very much like to show the AVD names, this is #11850\n\nThat might be the opposite problem - that's getting the AVD names from a running device, whereas this is about getting more info on the AVDs. Matching up a connected device to an AVD ini on disk might be more complicated (I might have a better idea once I've done dug into the ini files for the AVD side).",
                "createdAt": "2018-04-18T10:44:59Z"
            },
            {
                "author": "DanTup",
                "bodyText": "The IDs in flutter devices seem totally different - I'm not sure if we can match them up (I presume the info that flutter devices is getting is runtime info from the device, whereas the AVD info is all just metadata and user-defined names?).",
                "createdAt": "2018-04-18T14:12:00Z"
            },
            {
                "author": "DanTup",
                "bodyText": "@devoncarew @mit-mit It might not be bullet proof yet, but this generally works for listing and launching Android and iOS emulators on my Mac and Windows now:\n\nI've added some basic tests for the emulator classes (sorta copied from the equiv with devices) and the ini parsing; I don't know if we could easily have end-to-end tests here (do our CIs have Android SDKs and AVDs we could use without having to mock the files on disk etc.?).\nFeedback appreciated!",
                "createdAt": "2018-04-18T16:10:11Z"
            },
            {
                "author": "mit-mit",
                "bodyText": "Can you share a screenshot of what you have in the Android Studio emulator dialog for comparison?",
                "createdAt": "2018-04-18T16:12:17Z"
            },
            {
                "author": "DanTup",
                "bodyText": "@mit-mit Here's devices/emulators/Android Studio:\n\nWe have access to the info that Android Studio has (from the ini), but neither of them seem to match the name that we get from flutter devices from a running device (\"Android SDK built for x86\"/\"emulator-5554\").\nThough now I'm wondering what happens if I clone an AVD and then boot both copies - what would flutter devices report them as if that name/ID is buried inside the image?",
                "createdAt": "2018-04-18T16:23:59Z"
            },
            {
                "author": "devoncarew",
                "bodyText": "it basically parses the AVD ini files itself, finding the location like\n\nDo you have a sense for how stable that is, Android SDK release to release? That's less of a stable API surface area than the emulator command.\n\ndo our CIs have Android SDKs and AVDs we could use without having to mock the files on disk etc\n\nOur devicelabs bots very likely do.",
                "createdAt": "2018-04-19T05:26:01Z"
            },
            {
                "author": "DanTup",
                "bodyText": "Do you have a sense for how stable that is, Android SDK release to release? That's less of a stable API surface area than the emulator command.\n\nNot really. I'd guess they're relatively stable since there are many tools (and versions of tools) that read them, but it is a risk. I do believe I handle when we can't find the AVD folder (displaying a message) or the config/ini but I don't know if there are any options besides not having the extra info or taking this risk.\nFWIW, the original hope was that the names would match up with flutter devices and they don't, so we're really just getting a prettier display name and some other info (we can see screen res, memory, etc.) we could display. If we don't think it's worth it, we can remove this (though we'd just have IDs like Nexus_5X_x64_API_27 which may be a little unfriendly).\n\nOur devicelabs bots very likely do.\n\nAre they likely to have a consistent environment all with the same AVDs set up? I don't think I can check this without merging test code into master and logging it. Even they do, maybe it'd make things a little fragile - maybe it'd be better once we add create to add tests here, so we can create them, make sure they're listed, maybe even launch them.",
                "createdAt": "2018-04-19T07:07:40Z"
            },
            {
                "author": "DanTup",
                "bodyText": "@devoncarew Thanks! I think I've addressed all the comments except:\n\nIssues with awaiting the launch of emulator\nUse of yield in getEmulatorsMatching\n\nAnd the above comments about integration tests.",
                "createdAt": "2018-04-19T08:10:40Z"
            },
            {
                "author": "mit-mit",
                "bodyText": "@DanTup I have no idea how it does it, but when you hit Run in Android Studio and get prompted to select a target, it does seem to be able to list the running device with the same information/IDs as in the AVD dialog:",
                "createdAt": "2018-04-19T09:07:47Z"
            },
            {
                "author": "mit-mit",
                "bodyText": "For now, I'm using the term emulators to refer to these (these being AVDs in the case of Android and \"the simulator\" for iOS), but this can easily be changed.\n\nI wonder if it would be better to just include these in flutter devices, e.g.:\n$ flutter devices\n2 connected, running devices:\n\nAndroid SDK built for x86 \u2022 emulator-5554                        \u2022 android-x86 \u2022 Android 8.0.0 (API 26) (emulator)\niPhone X                  \u2022 6545ED50-3F15-479F-937E-CB0851E43D57 \u2022 ios         \u2022 iOS 11.3 (simulator)\n\n1 stopped emulator (use flutter devices --start <ID> to start):\n\nNexus 5X \u2022 emulator-5556                        \u2022 android-x86 \u2022 Android 8.0.0 (API 26) (emulator)",
                "createdAt": "2018-04-19T09:13:55Z"
            },
            {
                "author": "DanTup",
                "bodyText": "it does seem to be able to list the running device with the same information/IDs as in the AVD dialog\n\nOh yeah, that does look promising - I didn't realise it was categorising the online ones (I didn't see that dialog). I've got the code checked out, so I'll dig through and see what they're doing :-)\n\nI wonder if it would be better to just include these in flutter devices, e.g.:\n\nPossibly - it was one of the options in the doc. One of the things that put us off was not being able to tie them together (which based on the above may have been misguided), which would've resulted in the same things appearing both as online devices and offline. Let me dig into this and see what I can do, and if we can tie them together we can discuss again (I don't have strong opinions as long as we don't confuse the user with the same device listed twice with different names).",
                "createdAt": "2018-04-19T10:38:45Z"
            },
            {
                "author": "DanTup",
                "bodyText": "Ok, I managed to find this (sorry for screenshot, not sure where I can link to this code online):\n\nIt seems that when a device is running, it has a command called avd which can be run to get the name (avd name). So I don't think we can get the emulator name from the ACD, however I think in flutter devices we may be able to do the opposite.\nI'm not sure if flutter devices already has the necessary plumbing to execute commands like this on the device (I'd guess so?). I'll do some digging after lunch and maybe discuss with @devoncarew during our call later.",
                "createdAt": "2018-04-19T12:00:30Z"
            },
            {
                "author": "DanTup",
                "bodyText": "@mit-mit How did you get that dialog? When I hit Run in AS with no emulators running, I get an error saying I must connect a device. If I have one running, it just launches on that directly. I'm not sure how to get the dialogs you showed?\nI can find a few references online to the avd name command being available if you connect to the device, but it doesn't seem to work for me (suggests there's no avd command - so I'm curious whether the dialog you showed would work on my image).",
                "createdAt": "2018-04-19T13:08:36Z"
            },
            {
                "author": "mit-mit",
                "bodyText": "There is a setting for this in the Launch Configuration. Make sure Target is set to 'Open Select Deployment Target Dialog'.",
                "createdAt": "2018-04-19T13:11:21Z"
            },
            {
                "author": "DanTup",
                "bodyText": "Strange, I seem to have that set:\n\nYet clicking Run or Debug gives this:\n\nIf I start the emulator first, then the drop-down at the top changes to show it and then it always launches on that device. You're launching be pressing the Play/Debug buttons on the toolbar, right?\nIs there a way to open the \"Select deployment target\" dialog without clicking run?",
                "createdAt": "2018-04-19T13:16:15Z"
            },
            {
                "author": "DanTup",
                "bodyText": "Actually, it's \"Android App\" where I have that set, there is no similar setting in Flutter:\n\n\nThis is all unfamiliar to me, can you confirm where it is you have that set?",
                "createdAt": "2018-04-19T13:18:48Z"
            },
            {
                "author": "mit-mit",
                "bodyText": "We don't have this for Flutter; I was describing it on a regular Android project. And, yes you need one or more running devices for the dialog to trigger.",
                "createdAt": "2018-04-19T13:23:42Z"
            },
            {
                "author": "DanTup",
                "bodyText": "Aha, gotcha! Got it working now, and it is indeed working as you described. I'll see if I can figure out how it's matching these up. Thanks!",
                "createdAt": "2018-04-19T13:27:48Z"
            },
            {
                "author": "DanTup",
                "bodyText": "Ok, got it:\ndantup-macbookpro:inetutils-1.9 dantup$ flutter emulators --start danny\ndantup-macbookpro:inetutils-1.9 dantup$ adb devices\nList of devices attached\nemulator-5554\tdevice\n\ndantup-macbookpro:inetutils-1.9 dantup$ telnet/telnet localhost 5554\nConnected to localhost.\nEscape character is '^]'.\nAndroid Console: Authentication required\nAndroid Console: type 'auth <auth_token>' to authenticate\nAndroid Console: you can find your <auth_token> in \n'/Users/dantup/.emulator_console_auth_token'\nOK\navd name\nDanny_Nexus\nOK\n\nI can't find a way to get this through adb shell, seems to be a special command that works over telnet. So I think whenever flutter devices polls, we will need to open a telnet connection, run avd name and then close the connection. I don't know how much more expensive this'll make it but it'll mean we could subtract these names from the list of AVDs and then add what's left to the end of the devices list and allow a user to launch them.",
                "createdAt": "2018-04-19T13:47:18Z"
            },
            {
                "author": "DanTup",
                "bodyText": "@devoncarew @mit-mit\nI created a branch of this code and implemented showing the AVD name in flutter devices (I don't think we want this, it was just an easy place to put it to show it's working so we can review the Code to see whether we want to be connecting to devices like this):\nDanTup@5cab59c\n\nDanny_Nexus is the AVD name for this emulator.\nWith this, we could extend flutter devices to fetch the list of AVDs (as we currently have in emulators), remove those where a running device has that AVD name and then show those items on the end of the list as offline.\nIt does mean making the devices command/classes more complicated and blurs these emulator images with devices; however to the end user this might make more sense.\nLMK what you think, or we can discuss next week if easier on VC.",
                "createdAt": "2018-04-19T16:02:36Z"
            },
            {
                "author": "devoncarew",
                "bodyText": "Taking a look at this again (and, sorry for the long delay!).\nI have two comments on the UX, and will take a spin through the code after:\nI'd like to keep lists of emulators out of the output of flutter devices. I don't have any super defensible reasons for this, but like the separation. Instead, if no devices are found in flutter devices, we should change our ending message in flutter devices from:\nIf you expected your device to be detected, please run \"flutter doctor\" to diagnose\npotential issues, or visit https://flutter.io/setup/ for troubleshooting tips.\n\nto something like:\nRun 'flutter emulators' to list and start any available device emulators.\n\nOr, if you expected a device to be detected, run \"flutter doctor\" to diagnose\npotential issues or visit https://flutter.io/setup/ for troubleshooting tips.\n\nThe other UI think is that we could consider a different name for --start; perhaps --launch? --run might be conflated with actually starting an app.",
                "createdAt": "2018-05-03T14:00:41Z"
            },
            {
                "author": "DanTup",
                "bodyText": "@devoncarew\n\ncan you clarify re: 'Issues with awaiting the launch of emulator' - I didn't find the reference in the PR\n\nCurrently emulator.dart declares launch as returning void, but the overrides return Futures. If we change it to Future and then await it, then flutter emulators --launch x will await the completion of that process (wait until the user closes it).\nIf I don't await the process in the launch method, then I can't check the exit code. So, I guess I need to wait a short period (a second?) and if the process is still running, then assume it's a running emulator and not wait for it (we want to return the user to a terminal). I can't just fire-and-forget from the start because if it fails we'll give the user no indication of what it didn't launch (eg. not route the stderr to them).",
                "createdAt": "2018-05-03T15:39:56Z"
            },
            {
                "author": "DanTup",
                "bodyText": "I think I've addressed all the comments; and I've updated the checklist at the top with the things I think are remaining.\n@yjbanov Do you know whether the device lab machines all have a common AVD we could use in tests? (If not, we might need to implement --create before we can add automated tests).\n@devoncarew Should we support flutter-tester here? With the flag, we could list it and allow launching it; not sure if there's much value though.",
                "createdAt": "2018-05-03T16:21:18Z"
            },
            {
                "author": "devoncarew",
                "bodyText": "If I don't await the process in the launch method, then I can't check the exit code. So, I guess I need to wait a short period (a second?) and if the process is still running, then assume it's a running emulator and not wait for it (we want to return the user to a terminal). I can't just fire-and-forget from the start because if it fails we'll give the user no indication of what it didn't launch (eg. not route the stderr to them).\n\nAh, gotcha. There's no signal to indicate a successful launch.\n\nShould we support flutter-tester here?\n\nI'm not sure it helps, but haven't thought about it.\nlgtm w/ the logic to check for an unsuccessful launch (that takes a few seconds to determine).",
                "createdAt": "2018-05-04T18:07:58Z"
            },
            {
                "author": "DanTup",
                "bodyText": "I'm not sure it helps, but haven't thought about it.\n\nI was thinking if flutter-tester was listed and launchable, it might give us a way to have some tests that don't don't can run outside of devicelab and don't require some specific setup on devicelab. However, it occurs to me now that flutter devices includes the test device when passed the flag always; it doesn't list it only when it's running (since it doesn't really run like a normal device that can be connected to).\nAnyway, I've pushed a change to add the missing awaits and to automatically return from AndroidEmulator.launch() after 3 seconds if the process is still running.\nThere are two outstanding issues at the top; one is about Simulator location - I think we should probably just remove the TODO and assume the path is always this. If it's not, the worst to happen is that the simulator won't appear in the devices list.\nThe other one is about tests. I think the options are:\n\nLeave them until we've done --create and then create devicelab tests that create, list, launch, verify launch\nEnsure devicelab has some consistent AVDs (and iOS Simulator?) we can use\n\nIf we're going to do 1, it'd be good to have someone else check the code out and have a little test for sanity. LMK what you think!",
                "createdAt": "2018-05-07T09:54:02Z"
            },
            {
                "author": "devoncarew",
                "bodyText": "I patched it in locally and gave it a spin:\n\nIt looks great! We may want to tweak two things:\nAbove, there's a trailing bullet for the ios simulator. If no label for an emulator (like for simulators), we could not print the last bullet.\nAfter printing the emulators description, we should give the user an indication for how to run one. So, if one or more emulators are found, print To run an emulator, run 'flutter emulator --launch=<emulator id> or similar.",
                "createdAt": "2018-05-09T06:27:14Z"
            },
            {
                "author": "DanTup",
                "bodyText": "If no label for an emulator (like for simulators), we could not print the last bullet.\n\nDone!\n\nAfter printing the emulators description, we should give the user an indication for how to run one.\n\nDone!\n\nflutter emulator --launch\n\nThe command is actually emulators but I've added an alias since emulator feels more natural to type with --launch or --create, but I've used emulators (the way it's written in the help output) in the text.",
                "createdAt": "2018-05-09T07:10:58Z"
            },
            {
                "author": "DanTup",
                "bodyText": "I've pushed some changes; I think this covers all comments and outstanding issues with the exception of integration tests. @devoncarew lmk if you're happy enough with it to land as-is and put tests in once we have creation.\nI'll give it a quick run on Windows again shortly with the latest changes too.",
                "createdAt": "2018-05-09T07:13:39Z"
            },
            {
                "author": "devoncarew",
                "bodyText": "\ud83d\udc4d lgtm",
                "createdAt": "2018-05-09T13:33:04Z"
            }
        ],
        "commentCount": 31
    },
    {
        "number": 99731,
        "title": "[Material] Create an InkSparkle splash effect that matches the Material 3 ripple effect",
        "author": "Anthony",
        "state": "MERGED",
        "closedAt": "2022-03-09T23:13:47Z",
        "createdAt": "2022-03-08T02:50:33Z",
        "comments": [
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 1 new digest(s) on patchset 3.\nView them at https://flutter-gold.skia.org/cl/github/99731",
                "createdAt": "2022-03-08T07:48:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 3 new digest(s) on patchset 6.\nView them at https://flutter-gold.skia.org/cl/github/99731",
                "createdAt": "2022-03-08T16:33:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 3 new digest(s) on patchset 7.\nView them at https://flutter-gold.skia.org/cl/github/99731",
                "createdAt": "2022-03-08T17:08:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 2 new digest(s) on patchset 8.\nView them at https://flutter-gold.skia.org/cl/github/99731",
                "createdAt": "2022-03-08T20:03:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 20 new digest(s) on patchset 9.\nView them at https://flutter-gold.skia.org/cl/github/99731",
                "createdAt": "2022-03-08T20:13:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 15 new digest(s) on patchset 10.\nView them at https://flutter-gold.skia.org/cl/github/99731",
                "createdAt": "2022-03-08T20:38:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 7 new digest(s) on patchset 11.\nView them at https://flutter-gold.skia.org/cl/github/99731",
                "createdAt": "2022-03-08T21:08:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 12 new digest(s) on patchset 12.\nView them at https://flutter-gold.skia.org/cl/github/99731",
                "createdAt": "2022-03-08T22:03:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 14 new digest(s) on patchset 13.\nView them at https://flutter-gold.skia.org/cl/github/99731",
                "createdAt": "2022-03-08T22:43:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 12 new digest(s) on patchset 14.\nView them at https://flutter-gold.skia.org/cl/github/99731",
                "createdAt": "2022-03-08T23:38:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 1 new digest(s) on patchset 16.\nView them at https://flutter-gold.skia.org/cl/github/99731",
                "createdAt": "2022-03-08T23:53:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 1 new digest(s) on patchset 17.\nView them at https://flutter-gold.skia.org/cl/github/99731",
                "createdAt": "2022-03-09T00:03:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 12 new digest(s) on patchset 18.\nView them at https://flutter-gold.skia.org/cl/github/99731",
                "createdAt": "2022-03-09T00:23:06Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 12 new digest(s) on patchset 19.\nView them at https://flutter-gold.skia.org/cl/github/99731",
                "createdAt": "2022-03-09T02:03:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 24 new digest(s) on patchset 20.\nView them at https://flutter-gold.skia.org/cl/github/99731",
                "createdAt": "2022-03-09T02:43:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 12 new digest(s) on patchset 24.\nView them at https://flutter-gold.skia.org/cl/github/99731",
                "createdAt": "2022-03-09T09:53:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 24 new digest(s) on patchset 25.\nView them at https://flutter-gold.skia.org/cl/github/99731",
                "createdAt": "2022-03-09T09:58:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 24 new digest(s) on patchset 29.\nView them at https://flutter-gold.skia.org/cl/github/99731",
                "createdAt": "2022-03-09T10:48:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 36 new digest(s) on patchset 30.\nView them at https://flutter-gold.skia.org/cl/github/99731",
                "createdAt": "2022-03-09T10:53:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 3 new digest(s) on patchset 32.\nView them at https://flutter-gold.skia.org/cl/github/99731",
                "createdAt": "2022-03-09T18:23:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 1 new digest(s) on patchset 33.\nView them at https://flutter-gold.skia.org/cl/github/99731",
                "createdAt": "2022-03-09T18:28:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 3 new digest(s) on patchset 34.\nView them at https://flutter-gold.skia.org/cl/github/99731",
                "createdAt": "2022-03-09T18:38:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 3 new digest(s) on patchset 36.\nView them at https://flutter-gold.skia.org/cl/github/99731",
                "createdAt": "2022-03-09T19:28:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 1 new digest(s) on patchset 37.\nView them at https://flutter-gold.skia.org/cl/github/99731",
                "createdAt": "2022-03-09T19:53:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 1 new digest(s) on patchset 38.\nView them at https://flutter-gold.skia.org/cl/github/99731",
                "createdAt": "2022-03-09T20:08:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 1 new digest(s) on patchset 39.\nView them at https://flutter-gold.skia.org/cl/github/99731",
                "createdAt": "2022-03-09T21:18:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 24 new digest(s) on patchset 40.\nView them at https://flutter-gold.skia.org/cl/github/99731",
                "createdAt": "2022-03-09T22:08:05Z"
            },
            {
                "author": "zanderso",
                "bodyText": "Sorry if I'm missing this somewhere, but since @goderbauer made comments, the usual practice would have been to wait for an lgtm from him before landing.",
                "createdAt": "2022-03-09T23:21:23Z"
            },
            {
                "author": "goderbauer",
                "bodyText": "@zanderso We synced over chat. It's all good.",
                "createdAt": "2022-03-09T23:22:56Z"
            }
        ],
        "commentCount": 29
    }
]