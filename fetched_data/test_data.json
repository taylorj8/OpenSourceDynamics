[
    {
        "number": 85954,
        "title": "Flutter web add support for NetworkImage headers",
        "author": "Jonas Martinez",
        "state": "MERGED",
        "closedAt": "2022-01-26T23:00:13Z",
        "createdAt": "2021-07-06T09:20:50Z",
        "comments": [
            {
                "author": "goderbauer",
                "bodyText": "@jonas-martinez Can you please add a test for this?\n/cc @yjbanov @GaryQian Can one of you take a look at this?",
                "createdAt": "2021-07-07T21:44:09Z"
            },
            {
                "author": "jonas-martinez",
                "bodyText": "@googlebot I fixed it.",
                "createdAt": "2021-07-13T14:00:46Z"
            },
            {
                "author": "jonas-martinez",
                "bodyText": "@googlebot I fixed it.",
                "createdAt": "2021-07-13T15:01:41Z"
            },
            {
                "author": "jonas-martinez",
                "bodyText": "@googlebot I consent.",
                "createdAt": "2021-07-13T15:02:29Z"
            },
            {
                "author": "jonas-martinez-lenra",
                "bodyText": "@googlebot I consent.",
                "createdAt": "2021-07-13T15:03:51Z"
            },
            {
                "author": "yjbanov",
                "bodyText": "This PR needs a test.",
                "createdAt": "2021-07-21T17:21:32Z"
            },
            {
                "author": "goderbauer",
                "bodyText": "(PR triage): @jonas-martinez do you still have plans to come back to this PR to add some tests?",
                "createdAt": "2021-08-03T21:38:47Z"
            },
            {
                "author": "jonas-martinez",
                "bodyText": "(PR triage): @jonas-martinez do you still have plans to come back to this PR to add some tests?\n\n@goderbauer I recently tried to add some tests, I could not figure out a way to make them work properly. I will not be able to work on that for 2 weeks so during this time any idea or implementation about how to add good tests to this PR would be welcomed.\nSorry for the delay",
                "createdAt": "2021-08-04T07:45:31Z"
            },
            {
                "author": "yjbanov",
                "bodyText": "We'd probably need a test that's similar to the engine variant (the first interesting test there is probably \"skiaInstantiateWebImageCodec loads an image from the network\"). Since the test would be testing web-specific functionality, I would suggest to also use conditional imports in the test and import dart:html directly. I believe the conditional import will also allow the test to import _network_image_web.dart directly and mock out the network API.\nWhen using conditional imports you need to provide both a web version and a mobile version. Since there's nothing to test for the mobile version, you can make it a noop, just an empty function that doesn't test anything (example).\nHere's a rough sketch:\n// network_image_web_test.dart\nimport '_network_image_web_io_test.dart' if (dart.library.html) '_network_image_web_test.dart';\nvoid main() {\n  runTests();\n}\n\n// _network_image_web_io_test.dart\nvoid runTests() {\n  // This is a web-specific test. Nothing to do for AOT engine.\n}\n\n// _network_image_web_test.dart\nvoid runTests() {\n  test('loads an image from the network', () {\n    ...\n  });\n}",
                "createdAt": "2021-08-21T18:45:02Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 30 new digest(s) on patchset 9.\nView them at https://flutter-gold.skia.org/cl/github/85954",
                "createdAt": "2021-08-23T14:56:46Z"
            },
            {
                "author": "jonas-martinez",
                "bodyText": "We'd probably need a test that's similar to the engine variant (the first interesting test there is probably \"skiaInstantiateWebImageCodec loads an image from the network\"). Since the test would be testing web-specific functionality, I would suggest to also use conditional imports in the test and import dart:html directly. I believe the conditional import will also allow the test to import _network_image_web.dart directly and mock out the network API.\nWhen using conditional imports you need to provide both a web version and a mobile version. Since there's nothing to test for the mobile version, you can make it a noop, just an empty function that doesn't test anything (example).\nHere's a rough sketch:\n// network_image_web_test.dart\nimport '_network_image_web_io_test.dart' if (dart.library.html) '_network_image_web_test.dart';\nvoid main() {\n  runTests();\n}\n\n// _network_image_web_io_test.dart\nvoid runTests() {\n  // This is a web-specific test. Nothing to do for AOT engine.\n}\n\n// _network_image_web_test.dart\nvoid runTests() {\n  test('loads an image from the network', () {\n    ...\n  });\n}\n\nI've done some tests following your sketch, the headers are now correctly passed when using Flutter Web.\nI am now waiting for a review to know if I should add more tests or maybe refactor some code \ud83d\ude04",
                "createdAt": "2021-08-26T09:06:53Z"
            },
            {
                "author": "goderbauer",
                "bodyText": "@jonas-martinez Looks like some checks are failing now. Can you take a look at those failures and update the PR?",
                "createdAt": "2021-09-29T21:55:29Z"
            },
            {
                "author": "goderbauer",
                "bodyText": "Looks like there are still failures.",
                "createdAt": "2021-10-06T23:31:44Z"
            },
            {
                "author": "jonas-martinez",
                "bodyText": "I'm trying to fix the remaining CI errors but I might need some advice as to how to handle them.\nThe Linux analyze action is returning this error :\nThe following file import a test directly. Test utilities should be in their own file.\n/b/s/w/ir/x/w/flutter sdk/packages/flutter/test/painting/network_image_web_test.dart\n\nI think that the problem is that the two conditional tests _network_image_web_io_test.dart and _network_image_web_test.dart need to be moved outside of the test folder or should be ignored. What would be the best solution as I did not find any similar example in the test folder?\nThe luci-flutter action is indicating that the tree is broken, what does that mean and how can it be fixed?",
                "createdAt": "2021-10-26T08:25:57Z"
            },
            {
                "author": "yjbanov",
                "bodyText": "I wonder if the analyzer is complaining because the name of the file ends with _test.dart. If that's the case then an easy fix is to rename to _test_web.dart and _test_io.dart. I think we want to avoid the _test.dart suffix anyway, because it steps on the convension that all files that end with _test.dart are standalone tests that you can run directly, which is not the case for these specific files. The test entrypoint is network_image_web_test.dart, which imports the others.\nYou don't need to do anything about luci-flutter. It's there to prevent PR submissions because the tree is currently broken. It will eventually become green, at which point it will be safe to submit the PR.",
                "createdAt": "2021-10-26T18:37:53Z"
            },
            {
                "author": "jonas-martinez",
                "bodyText": "Everything should be ok now, there is still an error in Linux analyze but that seems to be a problem unrelated to this PR.\nThank you for your help @yjbanov, I am now awaiting instructions if anything else needs to be done on this PR \ud83d\ude03",
                "createdAt": "2021-10-27T08:54:48Z"
            },
            {
                "author": "yjbanov",
                "bodyText": "Great! This is very close. Can you please rebase the PR on top of the latest master to fix the \"Linux analyze\" issue? I think it's blocking the \"flutter-gold\" checks.",
                "createdAt": "2021-10-27T22:38:58Z"
            },
            {
                "author": "jonas-martinez",
                "bodyText": "I am having some difficulties getting the two new tests to work, they work when they are run individually but not when the whole test file is run. It may have something to do with the fact that these tests are run asynchronously and that the httpRequestFactory is replaced in each test.\nI will spend more time on that later this week.",
                "createdAt": "2021-11-02T12:24:14Z"
            },
            {
                "author": "goderbauer",
                "bodyText": "From triage: @jonas-martinez did you have some time to look at these again?",
                "createdAt": "2021-11-17T23:02:32Z"
            },
            {
                "author": "jonas-martinez",
                "bodyText": "Yes i took some time to look at these tests but still could not find a working solution. I tried to regroup these 3 tests into one big test so that the httpServer mock would be overwritten synchronously between each step but it triggered the same problems as when they were split into 3 different tests.\nI am wondering if there is something I am missing to properly mock the httpServer or if it comes from somewhere else.",
                "createdAt": "2021-11-18T11:08:29Z"
            },
            {
                "author": "yjbanov",
                "bodyText": "I'll try running the test locally and see what I can find.",
                "createdAt": "2021-12-01T22:56:32Z"
            },
            {
                "author": "yjbanov",
                "bodyText": "The reason the test behaves differently when running all tests at once is because the tests are fetching from the same URL, so the first test fetches and caches the image, and subsequent tests get the cached version. To fix this add the following line to tearDown:\nPaintingBinding.instance!.imageCache!.clear();",
                "createdAt": "2021-12-02T23:29:19Z"
            },
            {
                "author": "jonas-martinez",
                "bodyText": "Thank you @yjbanov !\nUsing the PaintingBinding.instance!.imageCache!.clear(); did not work as expected so I just changed the URLs for each test.",
                "createdAt": "2021-12-03T12:32:27Z"
            },
            {
                "author": "Piinks",
                "bodyText": "(triage) Hey @jonas-martinez can you update your PR with the latest from master? It looks like the test failure here is unrelated to your change.\n#94949 and #94948 are currently tracking this customer testing shard issue.",
                "createdAt": "2021-12-09T22:55:08Z"
            },
            {
                "author": "jonas-martinez",
                "bodyText": "@Piinks Sure !\nI did it but it seems that the problem did not go away.",
                "createdAt": "2021-12-10T11:21:02Z"
            },
            {
                "author": "nt4f04uNd",
                "bodyText": "@jonas-martinez can you try doing a git rebase instead? It usually solves this kind of problem with customer_testing",
                "createdAt": "2021-12-29T21:25:04Z"
            },
            {
                "author": "jonas-martinez",
                "bodyText": "I'm sorry for the review requests, I did a bad force push which added the requests automatically.",
                "createdAt": "2021-12-30T09:27:37Z"
            },
            {
                "author": "jonas-martinez",
                "bodyText": "@jonas-martinez can you try doing a git rebase instead? It usually solves this kind of problem with customer_testing\n\nThank you @nt4f04uNd ! Problem solved",
                "createdAt": "2021-12-30T11:04:58Z"
            },
            {
                "author": "goderbauer",
                "bodyText": "(triage) Looks like all this needs is a secondary review now. I've asked on discord if somebody is up for it.",
                "createdAt": "2022-01-05T22:48:57Z"
            },
            {
                "author": "tstarasinic",
                "bodyText": "What is the state with this feature ?",
                "createdAt": "2022-01-24T08:49:21Z"
            }
        ],
        "commentCount": 30
    },
    {
        "number": 83047,
        "title": "[Material 3] Add Navigation Bar component to flutter framework.",
        "author": "MH Johnson",
        "state": "MERGED",
        "closedAt": "2021-09-26T15:03:04Z",
        "createdAt": "2021-05-20T19:44:51Z",
        "comments": [
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 1 untriaged digest(s) on patchset 1.\nView them at https://flutter-gold.skia.org/cl/github/83047",
                "createdAt": "2021-05-20T19:51:12Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 2 untriaged digest(s) on patchset 3.\nView them at https://flutter-gold.skia.org/cl/github/83047",
                "createdAt": "2021-05-21T01:21:12Z"
            },
            {
                "author": "YazeedAlKhalaf",
                "bodyText": "@johnsonmh Where can I find Material You guidelines as a non-googler?",
                "createdAt": "2021-05-21T06:55:00Z"
            },
            {
                "author": "creativecreatorormaybenot",
                "bodyText": "@johnsonmh Quick question: where are the Material references for this and do they also feature the double ink? (one for the highlight and one for the tap?) Seems out of place but might be me.",
                "createdAt": "2021-05-21T10:58:37Z"
            },
            {
                "author": "rydmike",
                "bodyText": "@johnsonmh Thanks for the comments on Twitter (https://twitter.com/MHJohnson8/status/1395530093729140736?s=20), I really appreciated them. \ud83d\udc4d\ud83c\udffb\nWhile the NavigationBarDestinationBuilder may make it possible to set something up that replicates the old interface of Widgets as icons that e.g. current BottomNavigationBarItem and NavigationRailDestination` uses, it gets very complex and verbose to actually do so.\nI tried, but failed miserably. All I want and need out of it is to be able to provide Widgets for the selected and unselected icons, as in the old/current interfaces for the destinations. Rest of it should behave as the default NavigationBar does.\nPlease consider adding an example that demonstrates how to do this, or some helper interfaces to easier accomplish it for better/easier backwards compatible API interfaces.\nMaybe I just don't fully get all the possibilities yet, but it seemed to be easier to just copy/fork the entire widget and make my own slightly modified version to do it. Mostly due to the need for the SelectableAnimatedBuilder providing animation to NavigationBarDestinationInfo that must be parent to NavigationBarDestinationBuilder.\nUse case for Widgets as Icons - Legacy lowest common interface\nI have a setup (custom widget/package) where it is possible in the API (and end user UI) to select what type of bottom navigation bar (eg Cupertino, Material, Adaptive) you want to use, and it would be nice to add MaterialYuo (NavigationBar) to it, without stepping down the API interface for its destination wrapper to IconData. This does at the moment seem to be the easy way out, but then it would all loose the Widget flexibility. Which would otherwise be the lowest common interface. This new design still feels like it will for most use cases force it down to IconData, despite the nice builder feature NavigationBar has, but as said , maybe some concrete usage example is enough.\nObservation - API Naming Consistency\nThe API naming for selected and unSelected icons seem to be a bit inconsistent between navigation control Widgets. In particular NavigationBar switches the usage of icon for selectedIcon, which typically has been used for the unselected icon or one that is just the same for both states. The table below compares some API naming differences between navigation control widgets.\nEdit 22.5.2021: Added API for selecting an item or destination to the comparison, since it was mentioned in later discussion.\n\n\n\nProperty\nNavigationBar\nNavigationRail\nBottomNavigationBar\nCupertinoTabBar\n\n\n\n\nSelected icon\nicon\nselectedIcon\nactiveIcon\nactiveIcon\n\n\nUnselected icon\nunselectedIcon\nicon\nicon\nicon\n\n\ncurrent index\nselectedIndex\nselectedIndex\ncurrentIndex\ncurrentIndex\n\n\nSelect a destination\nonTap\nonDestinationSelected\nonTap\nonTap",
                "createdAt": "2021-05-21T11:35:55Z"
            },
            {
                "author": "rydmike",
                "bodyText": "@johnsonmh I noticed you made a commit to change the NavigationBarDestination icon and unselectedIcon to Widgets instead of IconData, I think that is good move. \ud83d\udc4d\ud83c\udffb\nI did not try the revised version yet, but I think it is a nice choice for consistency and simplicity, especially if all you want to do is to modify the icons with a small custom widget, but otherwise keep the default behavior or want to make a shared wrapper API with current navigation control widgets.\nTooltip Observation\nConcerning the tooltips, there is via NavigationBarDestination currently no simple way to control the tooltips.\nThis makes it complex to change them from the icon label and to even adjust their usage at all.\nCurrently tooltips also show up on Desktop/Web also when the label is also shown in the NavigationBar, thus duplicating the already shown label as a tooltip, with the same text. This does not add any new information to the UI and is actually a bit annoying to users on desktop/web.\nThe BottomNavigationBar used to be like this too, but it was later fixed so it is now possible to remove the tooltips, or customize the tooltips via BottomNavigationBarItem to something else than just the icon label.\nBasically if you in BottomNavigationBarItem don't define a tooltip, you get the icon label, but you can remove it by specifying an empty string, or customize it to something that adds some other info than just the icon label that is already shown, if you really also want a tooltip when you are showing the labels.\nIt makes it possible to do something like this:\n        child: BottomNavigationBar(\n          items: <BottomNavigationBarItem>[\n            for (MyDestination item in destinations)\n              BottomNavigationBarItem(\n                icon: item.icon,\n                activeIcon: item.selectedIcon,\n                label: item.label,\n                tooltip: useTooltips &&\n                        item.tooltip != item.label &&\n                        item.tooltip != null\n                    ? item.tooltip\n                    : '',\n              ),\n          ],\n         ...\nWhich would only show tooltips if an \"app\" level flag to actually show tooltips is true, and if the tooltip is different from the label. Obviously in a NavigationBar equivalent destination you would also have to combine the logic with the used labelBehavior.\nUsers may then choose in settings (affecting useTooltips if tooltips are used or not in the app. Many users perceive that tooltips get in the way after you are familiar with the app.\nPlease consider some similar feature for NavigationBar to make it easier to build support for the above behavior.\nThis GIF show the tooltips showing up all the time now on Desktop/Web and there is no simple way to get rid of them.\n\nAccessibility/Legibility Design Issue\nThis is a Material design matter. However, the default NavigationBar label size using the Flutter overline text style is barely legible on Web/Desktop that use device pixel ratio 1.0.\nThis seems to be something that Material Design team may have overlooked in the design spec.\nMajority (+80% globally) of Desktop Windows and Linux PCs use a display setting that have a device pixel ratio of 1.0. Fonts with very small dp become illegible on them. The small 10dp works OK on devices with a higher device pixel ratio, like all modern phones, tablets and also most Mac desktop/laptop computers. Some Windows/Linux laptops also use device pixel ratio of 1.5 or higher, on them the default overline size of the NavigationBar works OK, but generally desktops use 1.0.\nI tried by moving the running version of the above test app over to a my laptop screen with pixel density 1.5, on that it looks OK, but not on a normal desktop screen with device pixel ratio 1.0.\nThe above GIF recording also show this. The above gif recording is from a screen with device pixel ratio 1.0. click on the GIF to open it from GitHub in native resolution and not its inline zoomed state.",
                "createdAt": "2021-05-21T13:46:35Z"
            },
            {
                "author": "rydmike",
                "bodyText": "@johnsonmh Another wish, I hope NavigationBar also gets its own subtheme where you can address some of the basic customization needs.\nNow if you want to customize its look just a little bit, like making it use colorScheme.primary for the selected icon, OK if the icons are now Widgets this part became a easier, you can tweak it there, but normally that part has been preferred to be in the Widgets sub-theme so you can just set it once for your app. Plus you may want it to use colorScheme.primary with same opacity as it has for the current default colorScheme.secondary now for the highlight around the selected icon. But you can't re-use that easily, since it is hard coded. The roundness is also hard coded to border radius 20dp, maybe consider using a shape with a default stadium border if that is the design intent, and make the highlight shape customizable via a theme. The Flutter shapes have the added built-in advantage that they also animates between shape changes if it is changed, just a cool bonus.\nWhen using NavigationBar you may also want to tune the unselected icon color and labels to match that of the NavigationRail's unselected default theme icon and label color (which imo are nicer defaults than this one has now). Regardless of opinions on what is nicer looking, in a scenario where you use both NavigationRail and NavigationBar in a responsive design, you may often want their styles to match exactly. The defaults diverge quite a bit now, so you need to customize one of them quite a bit to accomplish that.\nYou may also need to customize is the label font/size, if you feel it is required for more legible labels. Having access to them via a theme would be nice.\nAs it looks now, you kind of have to build the NavigationBar up from all of its atomic builders to do most of above customizations. Doable, sure perhaps so, but imo not very fun or as easy to modify as previous approach. Not for the most common customization scenarios anyway, for  totally changing the NavigationBar into something entirely customized, the builders are a great addition of course.",
                "createdAt": "2021-05-21T15:14:27Z"
            },
            {
                "author": "johnsonmh",
                "bodyText": "@YazeedAlKhalaf I don't have guidance to link to at the moment - more will be shared later this Fall.\n@creativecreatorormaybenot Thanks for spotting this, the intention is not to have a highlight color and only have the ripple. I will update the code to remove the highlight color.\n@rydmike Thank you for the detailed feedback, this is all very helpful. I will incorporate the feedback to hopefully 1) Make the API more consistent with existing bottom navigation and navigation rail API and 2) make the customization easier (and with more examples given).",
                "createdAt": "2021-05-21T16:45:15Z"
            },
            {
                "author": "rydmike",
                "bodyText": "@johnsonmh I noticed another difference and minor inconsistency compared to default background with BottomNavigationBar.\nThe BottomNavigationBar's default background is when using newer color scheme based Themes ThemeData.from basing its background color on colorScheme.background via the fact that ThemeData.from assigns colorScheme.background to ThemeData.canvasColor that the default Material canvas type uses as background color.\nThis new NavigationBar on the other hand, bases its default background color on colorScheme.surface  via\nMaterial(\n      elevation: elevation,\n      color: backgroundColor ??\n          ElevationOverlay.colorWithOverlay(\n              colorScheme.surface, colorScheme.onSurface, 3.0),\nNormally when dealing with plain vanilla surface and background colors, these are of course identical. However, when building more nuanced user interfaces for a larger canvas, it is common to use a slight hint of primary color (alphaBlend) mixed into to the colorScheme.surface and/or colorScheme.background. When you go really fancy, you can use a slightly different blend strength of primary into the surface and background colors, for even more nuanced effects.\nWhen you do so, the end result is that the BottomNavigationBar and NavigationBar have backgrounds that then looks different in such designs, since they use different theme based default background colors. Perhaps this is intentional, but it might be worth considering if they should not default to the same base background color definition, it would seem more logical and again have less an impact on expected default background if you switch between them, or eg when you migrate from BottomNavigationBar to the new NavigationBar.\nHere is an example showing the difference when using such primary blended surface and background color theming in dark mode. I used a bit exaggerated difference in primary blend strength on surface and background color, than one might normally use, just to show the difference more clearly, the used example theme colors are shown too:\n\nHere it is shown as a hires GIF animation too. I also removed the double Ink ripple for this demo that @creativecreatorormaybenot mentioned:\n\nThis was just a quick experimental fix using:\nreturn NavigationBarDestinationSemantics(\n      child: NavigationBarDestinationTooltip(\n        message: label,\n        child: InkWell(\n          highlightColor: Colors.transparent,  // Hide ink effect\n          splashColor: Colors.transparent,     // Hide ink effect\n          onTap: info.onTap,\n          child: Row(\n            children: <Widget>[\n              Expanded(\n                child: NavigationBarDestinationLayout(\n                  icon: buildIcon(context),\n                  label: buildLabel(context),\n                ),\n              ),\n            ],\n          ),\n        ),\n      ),\n    );\nIt still has hover effect on desktop as before though, shown below. The yellow dot ink effect in the GIF are just from the screen recorders mouse click effect, that it uses to show when and where mouse was clicked.",
                "createdAt": "2021-05-21T20:52:40Z"
            },
            {
                "author": "bernaferrari",
                "bodyText": "Nice work! I have a few questions:\n\nCould you please add onLongPress? It might not be frequent usage, but I've seen apps delegating the long press as reload mechanism or quick settings.\nShouldn't you use onPressed instead of onTap? ElevatedButton, OutlinedButton and TextButton uses onPressed.\nWhy is the tooltip vertical offset set to 42? Can't the user change it? For mobile it might not make a lot of sense, but who knows what people do on the web and other platforms. What if someone uses that on the top? Then there would be no tooltip.",
                "createdAt": "2021-05-21T21:48:32Z"
            },
            {
                "author": "rydmike",
                "bodyText": "Good comments @bernaferrari, here are my additions on the same topic.\n\n\nI agree, onLongPress and with that rationale also, onSecondaryPress, for opening, typically a right mouse click based context menu on desktop apps, could certainly both be useful interactions to support out of the box for other devices than phones and tablets, but perhaps it is not in the Material spec for this widget to support that, pasts ones don't do it either. Hard to say, I don't think none Googlers have the new spec for this new MaterialYou widget yet.\n\n\nThe BottomNavigationBar, that this Widget primarily replaces also uses onTap (so does the CupertinoTabBar), so from that viewpoint the current onTap is the correct choice. I added API naming comparison to my earlier table. The onPressed callback used by buttons are as far as I recall always a void callback, whereas as the onTap callbacks are ValueChanged<int>? so there is that as well. But generally sometimes it seems these call back API names are a bit varied, the NavigationRails onDestinationSelected is a good example, what was wrong with onTap for that one for consistency? These things happens in big SDKs.\n\n\nAbout tooltips, I totally agree the NavigationBar API should expose more config options without requiring constructing the thing from atoms using its builders. Tooltip labels should be possible to easily customize to something else than the navbar's text label, or completely removed. And like you say, if a default vertical offset is need (probably is due to height of this widget) that is different from Tooltip default theme vertical office, it must be available as parameter via a property, if it is hard coded like now it can't be modified even by wrapping the entire widget in its own ThemeData and custom TooltipThemeData.\n\n\n\nSome additional observations, these are just my viewpoints from playing with and using the new widget a bit. I know the design is probably written in stone by the Material Design Theme, but I'm going to throw my views out there anyway.\nHeight when labels are shown.\nIn my opinion the default height design is a bit excessive when it comes to height when labels are shown (74dp), there is room to remove a few pixels and still keeping the look balanced and nice, the size when labels are not shown, could also be tighter (it is 56dp). Old bottom nav bar is 56dp and Cupertino one is 50dp btw. However, since the API includes a height adjustment it already allows for very easy minor opinionated tweaks to this, so it honestly does not matter so much, since you can tweak it as you want it easily.\nHowever, @johnsonmh I noticed a bug, the height property currently has no impact on the height of the widget! The line:\n   final double effectiveHeight = \n      labelBehavior == NavigationBarDestinationLabelBehavior.alwaysHide\n            ? 56\n            : 74;\nshould probably be:\n   final double effectiveHeight = height ??\n        (labelBehavior == NavigationBarDestinationLabelBehavior.alwaysHide\n            ? 56\n            : 74);\nOtherwise the height property has  has no impact on the height of the NavigationBar.\nDefault label font\nThe current default font style is an odd one, the overline style has letter spacing that just looks a bit strange. Flutter 2.2 still defaults to old typography (2014), my demos use the newer \"correct\" one (2018). However, the overline style is the same with both, it is just a peculiar style choice imo, with its 1.5 letter spacing. Plus as mentioned before, due to its default small size (10dp), it is barely legible on monitors with device pixel ratio 1.0. The old BottomNavigationBar defaults are clearer, and strangely even Cupertino looks better than this, although it is also too small for device pixel ratio 1.0, but it still looks much nicer.\nLike I mentioned before, an API, perhaps via own sub-theme for the NavigationBar is needed to adjust the label text styles (maybe both selected/unselected?) easily, the sub-theme could then also include more/additional style, layout and theming properties, like e.g. custom heights for the different label style behaviors.\nBelow is an additional example showing NavigationBar, BottomNavigationBar and CupertinoTabBar on same screen.\nI applied the height fix so I could change the height of the NavigationBar, just to try how it looks at some other sizes. I tried 50dp, same as Cupertino, when not showing labels, and quite a bit tighter, 62dp when showing labels, alongside with is current default values 56 and 74. The tighter values work well enough too. But like mentioned, if it has a working version of the height property, the default can be whatever, easy enough to tweak. However, the height values should also be themeable, both values, so it is easy to theme it differently globally for an app, and not apply it to every widget, or be forced to make a custom wrapper widget for it and use that instead, just to change the height. Great that you are supposed to be able to easily adjust the height too though, this is a welcome new feature.\nThe first screen GIF recording below is at device pixel ratio 1.5. On a high res laptop screen you might have that or higher, also on devices the device pixel ratio is normally 1.5 or even much higher, at this device pixel ratio, and higher, the small fonts on NavigationBar and CupertinoTabBar are still legible and fine, although the overline font style looks odd when used here, due to its 1.5 letter spacing.\n\nHere is the same screen, but now on a normal (none Mac) desktop screen, that use the most common desktop device pixel ratio 1.0. Now the small default font size is barely legible and have poor readability and accessibility due to that.\n\n(In both cases, click on the GIFs to open them to see them at actual pixel accurate sizes).\nYou could consider the caption style instead as the default label style, if it has to have style and not just default text style with a size of 12dp. Caption uses 12dp and very similar style as default unselected label on the BottomNavigationBar, which is smaller than the default selected label on it (14dp). It would look like this, on device pixel ratio 1.0 screen, when using the newer typography 2018.\n\nIt still fits nicely, even in my smaller height examples, and this is legible on screens with device pixel ratio 1.0 as well, and the letter spacing does not look odd, like it does with the overline text style.\nWith typography 2014 there would be a bit more space between the letters, caption 2018 uses letter spacing 0.4 and 2014 is 1.0, both are 12dp.\nAs a rule of thumb, most fonts become close to illegible at 10dp if the device pixel ratio is 1.0, while 12dp is OK with most fonts, 11dp is OKish.  If the device pixel ratio is 1.5 or higher, then using font size 10dp is perfectly fine, the problem is +80% of desktops in the world use monitors that are setup to use device pixel ratio 1.0.  Since Flutter also support desktop usage, I think default font choices for widgets should also consider that they also need to work well enough and be legible on screens using device pixel ratio 1.0.\nI also drive my 2x32\" 4k home office screens at native resolution, thus at screen pixel ratio 1.0. However my 13\" touch laptop screen is 3000x2000 pixels, this one is too small to drive at such high native resolution, so here I zoom 150%, meaning the device pixel ratio is 1.5.\n\nThe discussion of too small font size (10dp) at device pixel ratio 1.0, was also earlier discussed when it comes to the default Flutter tooltip theme style, that now also uses 10dp, a size that is just too small to be legible at device pixel ratio 1.0. This was discussed and and demonstrated here #71429.\nThe Material Design team rep even seemed to agree after the demonstration that 10dp is not a very legible choice. Tooltips were 14dp before in Flutter, before it changed to 10dp. I recommended 12dp instead as default as good compromise between compact but still legible. It has however not been changed yet, so the issue is still open. It is however easy to theme the tooltip globally and correct the unfortunately too small default font size.\n\nBy the way, here is also the issue where tooltip config (other label than icon label and no tooltip at all shown) was added to the BottomNavigationBar, plus its rationale and discussion too: #71049\nThe NavigationBar is now in its current form recreating the issue that was fixed for the BottomNavigationBar, can we please not do that? \ud83d\ude03",
                "createdAt": "2021-05-22T18:19:20Z"
            },
            {
                "author": "rydmike",
                "bodyText": "@johnsonmh Sorry about dropping even more comments. I was however wondering before when I tried the widget why it was getting overlay color also in light theme mode and not changing with elevation changes, not even in dark theme mode.\nAt least in the past, background overlay color has in Flutter only been applied to Material backgrounds in dark theme mode and when ambient ThemeData applyElevationOverlayColor is set to true. In this Widget you are applying overlay to both dark and light theme mode and it is not controlled by ambient theme setting for this behavior at all, as before in Flutter.\nAlso the elevation used for the elevation overlay color is hard coded to 3, and not using the actual elevation of the NavigationBar widget, so the overlay color is always constant, it does not change with elevation as it normally would in Flutter, and it is also applied to light theme mode, which is currently not the case in Flutter when using overlay color for elevation, you have this now:\nYou are using colorWithOverlay\n    return Material(\n      elevation: elevation,\n      color: backgroundColor ??\n          ElevationOverlay.colorWithOverlay(colorScheme.surface, colorScheme.onSurface, 3.0),\n      child: NavigationBarBottomPadding(\n   ...\nPerhaps this is a new standard? But more in line with current expected behavior in Flutter would be using applyOverlay:\n    return Material(\n      elevation: elevation,\n      color: backgroundColor ??\n          ElevationOverlay.applyOverlay(context, colorScheme.onSurface, elevation),\n      child: NavigationBarBottomPadding(\n   ...\nThis would use the widget elevation for applied overlay color, but only in dark theme mode, and only when the theme flag that toggles its usage is true.\nThis still gives the widget a default colorScheme.surface colored background and not the colorsScheme.Background color, like widgets of this type currently use as their background color, that they actually get from the Material's default background color.\nTo make it use the same default background and the Material dark overlay color behavior, then simply just pass the backgroundColor, it will get the Material default color if it is null or used supplied backgroundColor, and get overlay color applied based on the elevation of the Material and only in dark theme mode, and only when the flag to use it is set in ambient theme data, simply because this is already baked in behavior in Material.\n    return Material(\n      elevation: elevation,\n      color: backgroundColor,\n      child: NavigationBarBottomPadding(\n   ...\nStill of course, it all depends on what the new Material You design specs are, but it seems a bit off that it would deviate this much from past designs, when it comes to elevation, if that is the case pretty much all past widgets in Flutter will need to be rewritten or replaced with new ones to accommodate MaterialYou color scheme behavior.\nAnyway, I just though I would mention this since it deviated quite radically from past Flutter SDK background color and elevation behavior.",
                "createdAt": "2021-05-23T18:15:40Z"
            },
            {
                "author": "JaffaKetchup",
                "bodyText": "Wow, this looks amazing! Any chance of this coming soon?",
                "createdAt": "2021-06-26T09:14:10Z"
            },
            {
                "author": "evrifaessa",
                "bodyText": "Any updates?",
                "createdAt": "2021-07-16T13:09:41Z"
            },
            {
                "author": "JaffaKetchup",
                "bodyText": "It's been 4 months, and Android 12 with Material You is now in open-beta; is it time to look at this again?",
                "createdAt": "2021-08-12T14:37:15Z"
            },
            {
                "author": "rydmike",
                "bodyText": "@JaffaKetchup and @evrifaessa if I would have to guess, I would say that this MaterialYou widget is perhaps being worked on and tested in a none public clone, away from public eyes. Probably together with a number of other new MaterialYou related updates that Flutter will need in order to support MaterialYou that is introduced with Android12.\nIf not, there will indeed be a big rush to release Anroid12 related MaterialYou widgets and features in Flutter when Android12 is released. So I'm pretty sure Flutter - Android - Material teams are collaborating on including support for MaterialYou in a way that will try to match the release of Android12, if possible. This way Flutter applications can also migrate and use new MaterialYou design features after Abdroid12 is released. Sure it would of course be nice to have them before Android12 is released so that we could also prepare Flutter apps that use the new Material design features in advance too. However, I have not noticed them in master channel yet, although I must admit I have not spent so much time on master channel recently.\nI know that the above feedback has been received and reviewed by the Material design team, but I guess we will have to wait and see what the result is until it is released.\ncc: @willlarche",
                "createdAt": "2021-08-13T20:44:49Z"
            },
            {
                "author": "rami-a",
                "bodyText": "Hey folks, we are definitely hard at work in bringing Material You to Flutter soon! Please be patient as we continue to bring all these important updates to Flutter in the coming months :)",
                "createdAt": "2021-08-13T21:20:52Z"
            },
            {
                "author": "rami-a",
                "bodyText": "Thanks for all the great feedback on this PR folks, MH and I have tried to incorporate much of it, and I believe we can add additional functionality at a later time if needed.",
                "createdAt": "2021-08-25T16:04:45Z"
            },
            {
                "author": "rami-a",
                "bodyText": "Looking good. I love the composability here! Would it make sense to add some params to the constructor and theme that allow the developer to override things like DestinationBuilder for easier customization?\n\nPossibly, but I think this first iteration should be simpler for now",
                "createdAt": "2021-08-25T18:18:37Z"
            },
            {
                "author": "bernaferrari",
                "bodyText": "Possibly, but I think this first iteration should be simpler for now\n\nAdding things incrementally is fine, but I'm afraid later it becomes breaking change :(",
                "createdAt": "2021-08-25T19:03:31Z"
            },
            {
                "author": "rami-a",
                "bodyText": "Possibly, but I think this first iteration should be simpler for now\n\nAdding things incrementally is fine, but I'm afraid later it becomes breaking change :(\n\nIn some cases, things can be breaking but I guess it depends case by case",
                "createdAt": "2021-08-25T19:10:20Z"
            },
            {
                "author": "rami-a",
                "bodyText": "I think it makes sense to align the APIs for both nav bar and nav rail (#88887). So I'm thinking of renaming all the classes that compose this Nav Bar to drop the word Bar in order to use them in the NavRail too.\nThoughts @clocksmith and @HansMuller ?",
                "createdAt": "2021-08-26T13:34:00Z"
            },
            {
                "author": "rydmike",
                "bodyText": "Thanks @HansMuller, what an excellent review!\nI was actually looking at it a bit too and I think you captured most of the things I noticed too and then some.  I'm just out of curiosity following this review a bit, since I tried the super early version. \ud83d\ude03  Which was when I noticed some issues (on earlier version), like the elevation overlay in dark mode was not used, if theme used it and height parameter had no effect and minor other things, like more control over tooltips. The visual density and text scale factor questions where next on my list too ask about too. Oh, I like the idea with both text labels and optional widget, used it for some custom widgets for similar as mentioned reasons too.\nEven if this is a new Material v3 widget, I think it is important that it fits and uses conventions that matches how Flutter widgets currently behave, whenever that is appropriate and may be reasonably expected. Glad to see you are taking time to get it as right as possible. Great job @johnsonmh and I'm looking forward to using this widget for real soon enough \ud83d\ude4f\ud83c\udffb \ud83d\ude03\nDesign question\nThe usage of overline style ad default label choice and its default size is still poor imo. It is not very legible on most common desktops that actually use pixel ratio 1.0, as demonstrated earlier. Curios as to what drives design choices like it, as default values anyway. Sure on phone devices with much higher device pixel ratio it works, but not on a 1.0 desktop, but I guess it is what it is \ud83d\ude03 \ud83d\udc99",
                "createdAt": "2021-09-03T17:34:22Z"
            },
            {
                "author": "rami-a",
                "bodyText": "hey @rydmike, thanks for all your useful feedback! Regarding the overline usage. That is going to be what the spec calls for (and keep an eye out for updates to the text theme default values coming soon, which will update overline to be size 12 by default I believe)\nThe height param is now used and themable. The widget does not adjust its size due to visualDensity or textScaleFactor, by design. The tooltips do adjust to textScaleFactor however.\nThanks for the thorough review so far @HansMuller !",
                "createdAt": "2021-09-07T14:12:12Z"
            },
            {
                "author": "LasseRosenow",
                "bodyText": "In you screenshots above I noticed that the on click effect (ripple) is a rectangle, but the new clocks app from Google that already uses the new component has a circle which also overlaps with the item next to it.\nAlso the circle is not a gray shade, but some very transparent shade of the accent color or secondary color or something like that.",
                "createdAt": "2021-09-10T13:37:16Z"
            },
            {
                "author": "rami-a",
                "bodyText": "Hey @LasseRosenow thanks for the feedback!\nI've spoken with our Android counterparts and I think the overlapping/unbounded ripples are actually a bug and should be fixed shortly. The spec (once published) should indicate that the ripple expands out to the bounds of the destination (so a rectangle)\nAs for the color of the ripple, that can be customized with the ThemeData.splashColor param and we'll make sure to set the correct default for Material 3/You once we have a full Material 3 theme ready.",
                "createdAt": "2021-09-10T14:36:09Z"
            },
            {
                "author": "rami-a",
                "bodyText": "For some reason Github wouldn't let me directly reply to a few of the comments, so I'll address them here @HansMuller\n\nNot respecting textScaleFactor doesn't seem like a good idea wrt a11y, but OK.\n\nThis was an a11y decision made by Material last year since growing the height of the bar wouldn't add value as the labels would just become truncated and you'd lose screen real estate. So the a11y text scaling decision was to just scale the tooltips up instead (this also aligns with Apple's bottom navigation behavior)\n\nIf a NavigationDestination needs a builder to create its icon or label, why not just use Builder?\n\nI made the builder class private for now, we can explore making it a building block after",
                "createdAt": "2021-09-16T14:04:59Z"
            },
            {
                "author": "creativecreatorormaybenot",
                "bodyText": "@rami-a off-topic, but you can only reply in the original thread (when responding go a previous review in a review) on GitHub.",
                "createdAt": "2021-09-16T18:33:52Z"
            },
            {
                "author": "LasseRosenow",
                "bodyText": "Is the height of the new NavigationBar really still supposed to be 80?\n\nI just read, that the most recent GMail App changed it to be the same height as the old BottomNavigationBar.",
                "createdAt": "2021-09-22T23:57:13Z"
            },
            {
                "author": "rami-a",
                "bodyText": "Is the height of the new NavigationBar really still supposed to be 80?\n\nHey @LasseRosenow, yes the new default height is supposed to be 80 (you'll be able to see this once the official spec is published on material.io). It's likely that gmail decided to override this, and we provided the flexibility for developers to override the default as well.",
                "createdAt": "2021-09-23T14:00:42Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite customer_testing-linux has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2021-09-23T17:28:06Z"
            },
            {
                "author": "therealsujitk",
                "bodyText": "I've spoken with our Android counterparts and I think the overlapping/unbounded ripples are actually a bug and should be fixed shortly. The spec (once published) should indicate that the ripple expands out to the bounds of the destination (so a rectangle)\n\nHi @rami-a, I'm not sure if you'll get a notification about this comment or not since this PR is already merged, but I'm not really sure where else to ask this.\nYou mentioned overlapping/unbound ripples are a bug, to be honest that's a shame because it looks so much better, but I assume the spec says the ripples shouldn't overlap so that it doesn't give the impression the touch areas overlap as well. Wouldn't it look better to have a circular boundary rather than a rectangular one? (Like in the current YouTube app for example)\n\nI wasn't able to select two at a time like in the other apps, but they don't overlap. I still like the \"bug\" a lot better though.",
                "createdAt": "2021-11-15T04:57:48Z"
            },
            {
                "author": "MaxYablochkin",
                "bodyText": "@rami-a\nWhat is the difficulty of implementing NavigationBar(Material 3/You) exactly the same as in native Android? For example, I noticed that the effect of InkRipple.splashFactory for NavigationBar in Flutter is somewhat different from BottomNavigationBar(Material 3/You) in native Android. The radius of the circle when clicking on the NavigationBar is also different from the native Android, while the borders of the elements on the panel are visible, and there is still no ripple effect on the circle. I gave an example in two screenshots of the bottom navigation bar in Flutter, the first BottomNavigationBar, the second NavigationBar.",
                "createdAt": "2022-04-13T22:03:08Z"
            },
            {
                "author": "MaxYablochkin",
                "bodyText": "@rami-a\nWhy are some style properties not supported in the NavigationBar widget by default, namely indicatorColor, labelTextStyle, and iconTheme, but they can be called in the NavigationBarThemeData widget? I also wanted to know why, using the BottomNavigationBar example, you can use all the default style properties without using the BottomNavigationBarThemeData widget?",
                "createdAt": "2022-04-15T00:29:04Z"
            },
            {
                "author": "dposs",
                "bodyText": "M3 specs define badges (small and large) in Navigation Bar. Is it implemented in any way?\nhttps://m3.material.io/components/navigation-bar/specs",
                "createdAt": "2022-08-17T13:16:13Z"
            },
            {
                "author": "guidezpl",
                "bodyText": "No, not yet.",
                "createdAt": "2022-08-17T14:40:18Z"
            },
            {
                "author": "HansMuller",
                "bodyText": "@dposs - There was an attempt (now closed) to add support for badges about 5 months ago: #99853. Should be a relatively straightforward feature to implement.",
                "createdAt": "2022-08-18T14:34:38Z"
            }
        ],
        "commentCount": 37
    },
    {
        "number": 68086,
        "title": "Introduce `MaxLengthEnforcement`",
        "author": "Alex Li",
        "state": "MERGED",
        "closedAt": "2020-12-09T23:32:00Z",
        "createdAt": "2020-10-14T07:30:53Z",
        "comments": [
            {
                "author": "AlexV525",
                "bodyText": "Should we move these tests into text formatter test?",
                "createdAt": "2020-10-15T03:01:47Z"
            },
            {
                "author": "justinmc",
                "bodyText": "I think I'm in favor of this solution to the problems discussed in #67898. Limiting length with/without composing characters both seem to have valid uses, so it makes sense to let developers choose which they want.  I'm also interested in what @LongCatIsLooong thinks.\nMaybe instead of a bool, this should be combined with maxLengthEnforced and made into an enum?  Like maxLengthEnforcement or something like that.  Then deprecate maxLengthEnforced.  Then we don't have to worry about both bools being true, and it's future-proof if more cases appear later.",
                "createdAt": "2020-10-16T00:41:35Z"
            },
            {
                "author": "AlexV525",
                "bodyText": "Maybe instead of a bool, this should be combined with maxLengthEnforced and made into an enum?\n\nBefore, maxLengthEnforced in TextField controls whether a LengthLimitingTextInputFormatter will be inserted or not. If not, it will be only an error tip when the value reached limitation.\nIf it can convert to enum, I prefer maxLengthEnforcement  too, and there will be three values for it:\n\nnone or regular: Same as the current truncate behavior, as default.\nwarningOnly: Same as maxLength == x && maxLengthEnforced == false.\ntruncateComposing: Apply length limit on composing value too.\n\nDoes it seems valid?",
                "createdAt": "2020-10-16T01:44:48Z"
            },
            {
                "author": "AlexV525",
                "bodyText": "This doesn't seem to be a breaking change? See https://github.com/flutter/flutter/wiki/Tree-hygiene#1-determine-if-your-change-is-a-breaking-change, the tests seem to be passing?\n\nIt was suggested from #67898 (comment)",
                "createdAt": "2020-10-16T04:31:42Z"
            },
            {
                "author": "LongCatIsLooong",
                "bodyText": "@AlexV525 Ah I meant this PR per se is not breaking (at least customer_testing is not failing).\nMaking maxLengthEnforced an enum sounds good to me.\n\nnone or regular: Same as the current truncate behavior, as default.\nI think none is already covered by setting maxLength to null or -1?",
                "createdAt": "2020-10-16T04:36:13Z"
            },
            {
                "author": "AlexV525",
                "bodyText": "I think none is already covered by setting maxLength to null or -1?\n\nSo maybe regular is more fit for the case, which means truncated while it's not composing.",
                "createdAt": "2020-10-16T04:43:48Z"
            },
            {
                "author": "AlexV525",
                "bodyText": "Ah I meant this PR per se is not breaking (at least customer_testing is not failing).\n\n\ud83d\ude15 Then how should we announce this...? Or not?",
                "createdAt": "2020-10-16T04:46:41Z"
            },
            {
                "author": "LongCatIsLooong",
                "bodyText": "confused Then how should we announce this...? Or not?\n\nSorry I got ahead of myself in that issue. If we deprecate the maxLengthEnforced parameter then it will be a breaking change (when we eventually remove the parameter it's going to break code that's still using it).",
                "createdAt": "2020-10-16T04:59:54Z"
            },
            {
                "author": "AlexV525",
                "bodyText": "Both TextField and CupertinoTextField have maxLengthEnforced, is it okay to put the enum in editable_text.dart ? Maybe text_formatter.dart ?",
                "createdAt": "2020-10-17T03:19:56Z"
            },
            {
                "author": "LongCatIsLooong",
                "bodyText": "Yeah makes sense to put it in text_formatter.dart since that's where the length limiting formatter is.",
                "createdAt": "2020-10-17T05:53:12Z"
            },
            {
                "author": "AlexV525",
                "bodyText": "It should need more test in API reference, hold on a sec.",
                "createdAt": "2020-10-17T11:41:42Z"
            },
            {
                "author": "AlexV525",
                "bodyText": "It's breaking gallery's tests, with usages of maxLengthEnforced \ud83d\udc4d",
                "createdAt": "2020-10-17T16:05:14Z"
            },
            {
                "author": "justinmc",
                "bodyText": "Also, the test failures are due to a usage of maxLengthEnforced in lib/demos/material/text_field_demo.dart that we will need to update to use maxLengthEnforcement.",
                "createdAt": "2020-10-23T18:08:41Z"
            },
            {
                "author": "AlexV525",
                "bodyText": "Also, the test failures are due to a usage of maxLengthEnforced in lib/demos/material/text_field_demo.dart that we will need to update to use maxLengthEnforcement.\n\nShould we update tests ourselves or contact people that tests referred?",
                "createdAt": "2020-10-24T02:45:01Z"
            },
            {
                "author": "AlexV525",
                "bodyText": "By reviewing previous changes to the formatter, I found no behaviors update patched, yet seems need to be change too. I think we can make another PR to gathered them together. So I'm going to revert selection behavior change in here.",
                "createdAt": "2020-10-24T06:05:44Z"
            },
            {
                "author": "AlexV525",
                "bodyText": "@justinmc @LongCatIsLooong Take the last review then let's start the rest process. \ud83e\udd23",
                "createdAt": "2020-10-26T01:40:58Z"
            },
            {
                "author": "AlexV525",
                "bodyText": "I see that you already have a migration guide. Should I review that yet?\n\nDefinitely. \ud83d\ude04\n\nWe'll also have to create a design doc and get that reviewed, and get Hixie to look at the migration guide.\n\nWill update the description once it's finished.",
                "createdAt": "2020-10-27T05:28:24Z"
            },
            {
                "author": "AlexV525",
                "bodyText": "@Hixie A design doc has added (see description), could you help me review the doc?",
                "createdAt": "2020-10-27T05:59:31Z"
            },
            {
                "author": "justinmc",
                "bodyText": "Thanks for all the work on this.  The test failures looked like infrastructure problems to me (not problems with the PR), so I re-ran them.  If they don't turn green in an hour or so, then you might have to merge master into this to get them to turn green.",
                "createdAt": "2020-11-02T19:31:58Z"
            },
            {
                "author": "justinmc",
                "bodyText": "There is one analyzer error now:\ninfo \u2022 'maxLengthEnforced' is deprecated and shouldn't be used. Use maxLengthEnforcement parameter which provides more specific behavior related to the maxLength limit. This feature was deprecated after v1.23.0-19.0.pre. \u2022 lib/demos/material/text_field_demo.dart:218:19",
                "createdAt": "2020-11-03T16:53:35Z"
            },
            {
                "author": "AlexV525",
                "bodyText": "There is one analyzer error now\n\nYou mean the one in gallery's test? I've filed a PR and wait until this lands.",
                "createdAt": "2020-11-04T00:29:40Z"
            },
            {
                "author": "justinmc",
                "bodyText": "I think it's an old usage of maxLengthEnforced in lib/demos/material/text_field_demo.dart that you can update now, but let me know if I'm wrong.\nAlso, there are some conflicts now FYI.",
                "createdAt": "2020-11-04T01:13:20Z"
            },
            {
                "author": "AlexV525",
                "bodyText": "I think it's an old usage of maxLengthEnforced in lib/demos/material/text_field_demo.dart that you can update now, but let me know if I'm wrong.\n\nI'm pretty sure this is the fix you're looking for. \ud83d\ude04 flutter/gallery#358\nI'll solve those conflicts again once the doc is good to go.",
                "createdAt": "2020-11-04T01:25:26Z"
            },
            {
                "author": "justinmc",
                "bodyText": "Ah sorry you're right, I didn't realize those tests were in the gallery repo.",
                "createdAt": "2020-11-04T16:44:11Z"
            },
            {
                "author": "justinmc",
                "bodyText": "Hey @AlexV525, I'm checking back in on this after being on leave for awhile.  Is there anything blocking you here, or are you able to fix the conflicts and move forward with the PR?",
                "createdAt": "2020-11-30T18:57:02Z"
            },
            {
                "author": "AlexV525",
                "bodyText": "Hey @AlexV525, I'm checking back in on this after being on leave for awhile. Is there anything blocking you here, or are you able to fix the conflicts and move forward with the PR?\n\nJust seeking for potential solutions. :D",
                "createdAt": "2020-12-01T13:11:14Z"
            },
            {
                "author": "justinmc",
                "bodyText": "Sorry, I was missing so much context after being out.  Let's continue the discussion in the issue.  I've made a proposal: #67898 (comment)",
                "createdAt": "2020-12-02T23:00:00Z"
            },
            {
                "author": "AlexV525",
                "bodyText": "The implementation has been updated according to @justinmc 's suggestion, provide behavior according to platforms by default. Those behaviors are added to the description, and will be updated to the doc and the migration guide.\n\nAndroid, Windows: MaxLengthEnforcement.enforced. The native behavior of these platforms is enforced. The composing will be handled by the IME while users are entering CJK characters.\niOS: MaxLengthEnforcement.truncateAfterCompositionEnds. iOS has no default behavior and it requires users implement the behavior themselves. Allow the composition exceed to avoid breaking CJK input.\nWeb / macOS / linux / fuchsia: MaxLengthEnforcement.truncateAfterCompositionEnds. These platforms allow the composition exceed by default.",
                "createdAt": "2020-12-04T10:37:02Z"
            },
            {
                "author": "AlexV525",
                "bodyText": "One thing needs to point out is Windows have different behaviors when you're using different IMEs. For example Microsoft PinYin IME cannot exceed the limit when it's composing, but Sogou PinYin can while it holds the composition inside itself like Gboard with CJK's on Android.",
                "createdAt": "2020-12-04T10:40:58Z"
            },
            {
                "author": "justinmc",
                "bodyText": "Also I think there may be a legitimate test failure due to a deprecated use of maxLengthEnforced at: lib/demos/material/text_field_demo.dart:218:19.",
                "createdAt": "2020-12-04T18:15:09Z"
            },
            {
                "author": "justinmc",
                "bodyText": "In order to get around the customer test failures (which are coming from the gallery), this is what we'll have to do:\n\nRemove the @Deprecated flags from this PR, then merge it when it goes green.\nSubmit a PR in the Flutter gallery to migrate from maxLengthEnforced to maxLengthEnforcement here.\nSubmit another PR here to add back the deprecation.",
                "createdAt": "2020-12-07T18:12:04Z"
            },
            {
                "author": "AlexV525",
                "bodyText": "There is another serious issue with characters calculation when I was testing \"Composing range handled correctly when it's overflowed\" in editable text tests.\n\nThe calculation of newValue.text is resulting a wrong length, which should be 6. This will cause the test fail but not related to the current PR. /cc @LongCatIsLooong @justinmc\nPreviously the test won't failed because the range is completely overflowed, but when I tried with a shorter text this happened. So I'm going to keep the current working test and separate this to another issue or PR.",
                "createdAt": "2020-12-08T05:11:48Z"
            },
            {
                "author": "justinmc",
                "bodyText": "Which test is it that fails like that?  I don't follow exactly why it's failing now.\nIn general though I think that's a good plan, if this is unrelated.  You should create a new issue and then add a TODO in the code with a link to the issue.",
                "createdAt": "2020-12-08T05:53:54Z"
            },
            {
                "author": "AlexV525",
                "bodyText": "Which test is it that fails like that? I don't follow exactly why it's failing now.\nIn general though I think that's a good plan, if this is unrelated. You should create a new issue and then add a TODO in the code with a link to the issue.\n\n\"Composing range handled correctly when it's overflowed\" in editable_text_tests. I've saw some related issues before, I'll file a new one if it doesn't exist.",
                "createdAt": "2020-12-08T05:55:26Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nPlease get at least one approved review before re-applying this label. Reviewers: If you left a comment approving, please use the \"approve\" review action instead.",
                "createdAt": "2020-12-08T06:23:04Z"
            },
            {
                "author": "AlexV525",
                "bodyText": "Thanks for everyone that make efforts to this PR to make it solid! It's a huge change and hope it can truly solve composing issues.",
                "createdAt": "2020-12-09T23:30:23Z"
            }
        ],
        "commentCount": 36
    },
    {
        "number": 33213,
        "title": "Expose InheritedWidget subscription cancelation",
        "author": "Remi Rousselet",
        "state": "CLOSED",
        "closedAt": "2019-09-18T21:38:09Z",
        "createdAt": "2019-05-22T20:19:57Z",
        "comments": [
            {
                "author": "Hixie",
                "bodyText": "This change is scary, but I can't think of a case off-hand that it would break...",
                "createdAt": "2019-06-06T00:46:45Z"
            },
            {
                "author": "Hixie",
                "bodyText": "That said, it probably doesn't do what you want. For example, if you have a child that registers with inherited widgets A and B in build 1, then A makes it dirty and the second time it only registers with A, B won't hear about it until the widget goes away entirely, which might be never.\nSo I probably wouldn't recommend going down this path. It's better to just vend the actual stream and let the stream do the logic.",
                "createdAt": "2019-06-06T00:48:37Z"
            },
            {
                "author": "rrousselGit",
                "bodyText": "B won't hear about it until the widget goes away entirely, which might be never.\n\nIndeed, but that's because the d\u00e9pendent is actually still depending on B, such that if B makes it dirty, the dependent will still rebuild even if it doesn't call inheritFromWidgetOfExactType(B) anymore.\nSo thats excepted",
                "createdAt": "2019-06-06T07:10:09Z"
            },
            {
                "author": "rrousselGit",
                "bodyText": "@Hixie so, is this something that can potentially be merged?\nI don't mind it being refused, but a feature for a package of mine may be implemented differently depending on if  can get merged or not.\nThe changes described here are not critical, but it'd serve as a solution for #30062",
                "createdAt": "2019-06-14T12:09:58Z"
            },
            {
                "author": "Hixie",
                "bodyText": "Indeed, but that's because the d\u00e9pendent is actually still depending on B, such that if B makes it dirty, the dependent will still rebuild even if it doesn't call inheritFromWidgetOfExactType(B) anymore.\n\nBut if you use the \"vend a Stream\" solution, B would unregister from the stream and so things would be more efficient.\nI'm torn on this one. On the one hand, I can see it being useful. On the other hand, it's a few extra cycles even in cases where we don't use it, and you only need a few thousand such \"it's only a few extra cycles\" before it really adds up. There's also the tradeoff between doing it the efficient way by vending a stream and the reality that doing that is somewhat convoluted and not as clean.\nHave you considered making a Builder widget that looks up the stream from an InheritedWidget and does the subscribe/unsubscribe? Maybe that would be clean enough?",
                "createdAt": "2019-06-14T20:17:39Z"
            },
            {
                "author": "rrousselGit",
                "bodyText": "I'm torn on this one.\n\nSorry, I don't understand this paragraph.\n\nHave you considered making a Builder widget that looks up the stream from an InheritedWidget and does the subscribe/unsubscribe? Maybe that would be clean enough?\n\nYes, but that is not compatible with what provider does.\nOne of the key feature behind provider is that it allows listening to any kind of object just by using Provider.of.\nThat both makes it easier to use (a single API), safer (can't forget to subscribe), and malleable (can be used inside didChangeDependencies).\n\nAn alternative solution is to expose a set of event listeners for the different widgets life-cycle on Element \u2013 like a add/removeUnmountListener.\nBut I think that would be a lot more dangerous than what this PR does.",
                "createdAt": "2019-06-14T21:27:55Z"
            },
            {
                "author": "rrousselGit",
                "bodyText": "Any update? I'm getting quite a few requests about that.\nI'm definitely convinced that listening to complex objects on the inherited widget instead of the consumer is a good idea.\nThis allows many powerful things that wouldn't be possible otherwise. AnimatedTheme is one example.",
                "createdAt": "2019-06-27T17:14:50Z"
            },
            {
                "author": "Hixie",
                "bodyText": "\"I'm torn on this one\" is an English idiom meaning that I am struggling to make a decision because I see good arguments both for and against.\nMaybe provider could be changed to do the subscribing/unsubscribing?\nThe more I think about this the more I think we probably shouldn't do it, because it adds a few cycles to every operation involving inherited widgets, and it isn't strictly adding anything that can't already be done, and it isn't really a complete solution to the problem (since it only handles some \"unsubscribes\").\nNot sure what you mean about AnimatedTheme. Why is it not possible? We do it today, no?",
                "createdAt": "2019-07-01T20:45:16Z"
            },
            {
                "author": "rrousselGit",
                "bodyText": "(I hope that I do not sound harsh or too insisting)\n\nBut if you use the \"vend a Stream\" solution, B would unregister from the stream and so things would be more efficient.\n\n\nNot sure what you mean about AnimatedTheme. Why is it not possible? We do it today, no?\n\nThese two quotes are related.\nprovider voluntarily works like Theme because it makes the API a lot easier to use and composable.\nWith Theme, consumers don't need an AnimatedBuilder to listen to the object.\nBut still, replacing Theme by AnimatedTheme is enough to make virtually all widgets that depend on ThemeData to play the animation.\nprovider does that, but instead of ThemeData, any object will do.\nThat works great, but one of the requirement is that the \"vend a Stream\" is not an option (unless I missed something?).\nI'd prefer to cancel my plans for #30062 and other similar requests than to lose the simplicity of the current API.\n\nbecause it adds a few cycles to every operation involving inherited widgets\n\nI do not understand what this means.\nThe proposed changes shouldn't have any impact on existing InheritedWidgets.\n\nit isn't really a complete solution to the problem\n\nIs it because of #12992?\nIf so, then I disagree.\nThe use-case behind these changes is to do extra work when all listeners are removed (usually when a Route is unmounted).\nDue to the nature of InheritedWidgets, there will rarely be only one widget listening to an InheritedWidget (otherwise an InheritedWidget is probably not useful). Therefore #12992 would rarely have an impact.\nAnd even in the event where it does have an impact, then there's a simple workaround to that specific issue.\nInstead of:\nif (foo) {\n  return Text(Foo.of(context));\n} else {\n  return Text(Bar.of(context));\n}\nwe can have:\nif (foo) {\n  return Builder(\n    key: const Key('foo'),\n    builder: (context) => Text(Foo.of(context)),\n  );\n} else {\n  return Builder(\n    key: const Key('bar'),\n    builder: (context) => Text(Bar.of(context)),\n  );\n}",
                "createdAt": "2019-07-01T22:55:18Z"
            },
            {
                "author": "Hixie",
                "bodyText": "The proposed changes shouldn't have any impact on existing InheritedWidgets.\n\nAt a very minimum it adds a polymorphic call to removeDependencies. This is a few cycles. We have to be strict about not adding a few cycles because otherwise everyone has their few cycles they can add and suddenly we have a LOT of cycles that aren't strictly necessary, and things get slow.\n#12992 is what I was referring to by \"not complete\", yes.\nI don't really see why you need this for the AnimatedTheme-equivalent behaviour. AnimatedTheme just builds a new Theme each frame. Why doesn't that work for provider?",
                "createdAt": "2019-07-18T01:21:01Z"
            },
            {
                "author": "rrousselGit",
                "bodyText": "This isn't to implement an AnimatedTheme.\nIt's instead to implement a \"maintainState\"-like parameter, while still being compatible with AnimatedTheme. Such that we have our AnimatedTheme, but when not used anymore, it's GCed.",
                "createdAt": "2019-07-18T06:52:47Z"
            },
            {
                "author": "rrousselGit",
                "bodyText": "In case this wasn't clear enough, a concrete example is:\nWith provider, it's not rare to have many Inheritedwidgets above Navigator.\nThese can vary from a simple immutable data, to an object that listens a firestore stream.\nThere's no problem with the former, but for the latter we do want to both lazily create the object and dispose it when it's not needed anymore.",
                "createdAt": "2019-07-18T07:34:27Z"
            },
            {
                "author": "Hixie",
                "bodyText": "For the problem of having a Listenable which behaves differently with zero listeners than non-zero listeners, I would expose the Listenable on the InheritedWidget, and then use an AnimationBuilder to register the callbacks:\n   return AnimationBuilder(\n     animation: MyNotifierSource.of(context),\n     builder: (...) { ... },\n   );\n\nSimilarly if it's a ValueListenable I'd use a ValueListenableBuilder. You can do similar things with a stream, e.g. using StreamBuilder.\nI don't see why the inherited widget itself needs to do track if you have callbacks.",
                "createdAt": "2019-07-19T21:10:32Z"
            },
            {
                "author": "rrousselGit",
                "bodyText": "I don't see why the inherited widget itself needs to do track if you have callbacks.\n\nFor the same reasons behind Theme.of not returning a ValueListenable<ThemeData>.\nThat heavily simplify the API.\nAlso:\n\n\nIt guards peoples against forgetting to listen to the Listenable. There's nothing preventing the following for instance:\nWidget build(context) {\n  ValueListenable<T> foo = Something.of(context);\n  // we forgot to use `AnimatedBuilder`\n  return Text(foo.value.toString());\n}\nBut that's unlikely to be desired as it won't rebuild when the value change.\nIf .of returns T instead of ValueListenable<T>, then that issue is avoided entirely.\n\n\nIt makes very easy to listen to an observable object outside of build thanks to didChangeDependencies.\nThe typical:\nclass _FooState extends State<Foo> {\n  Bar bar;\n  ValueListenable<int> listenable;\n\n  @override\n  void didChangeDependencies() {\n    super.didChangeDependencies();\n    ValueListenable<int> listenable = Something.of(context);\n    if (listenable != this.listenable) {\n      this.listenable?.removeListener(listener);\n      this.listenable = listenable;\n      listenable.addListener(listener);\n      // the listener is not called immediatly, so we compute the state manually first\n      bar = Bar(listenable.value);\n    }\n  }\n\n  void listener() {\n    setState(() {\n      bar = Bar(listenable.value);\n    });\n  }\n\n  @override\n  void dispose() {\n    super.dispose();\n    listenable.removeListener(listener);\n  }\n}\nbecomes:\nclass _FooState extends State<Foo> {\n  Bar bar;\n  int previous;\n\n  @override\n  void didChangeDependencies() {\n    super.didChangeDependencies();\n    int value = Something.of(context);\n    if (value != previous) {\n      previous = value;\n      bar = Bar(value);\n    }\n  }\n}\nThis, too, removes a whole range of potential errors. And it also make the code more readable by removing the \"unnecessary redundant bits\".\n\n\nIt makes the listening process works for everything. There's no need to learn both AnimatedBuilder, StreamBuilder, FutureBuilder, ...\n.of(context) works for everything.\n\n\nThis is compatible with immutability. Animation/ValueListenable are mutable even if their .value property contains immutable objects.\nThis can cause issues with asynchronous event handlers. There's no guarantee that the value hasn't changed between the build that created the event handler, and the time where the .value is used.\nBy having Provider.of do the listening, then the value returned is completely immutable. It is therefore guaranteed that there's no undesired mutation that happened in the meantime.",
                "createdAt": "2019-07-19T22:39:51Z"
            },
            {
                "author": "Hixie",
                "bodyText": "For the same reasons behind Theme.of not returning a ValueListenable<ThemeData>.\n\nBut Theme doesn't expose a Stream or Listenable, and AnimatedTheme doesn't avoid animating if there's no subscribers. So I don't think that's the same thing at all.\n\n\nIt guards peoples against forgetting to listen to the Listenable.\n\n\nYou can avoid this by using an API where you only get access to the data if you subscribe (e.g. Stream) if that's a concern.\n\n\nIt makes very easy to listen to an observable object outside of build thanks to didChangeDependencies.\n\n\nIn the same way that a widget like AnimatedBuilder can expose a build method, it can expose callbacks for didChangeDependencies and dispose (though at that point, why not just do the listening directly), or, for the case you have, it could expose a transform callback:\n  return ValueListenableWithTransformBuilder<int, Bar>(\n    valueListenable: Something.of(context),\n    transform: (int value) => Bar(value),\n    build: (BuildContext context, Bar value) {\n      // ...\n    },\n  );\n\n\nIt makes the listening process works for everything. There's no need to learn both AnimatedBuilder, StreamBuilder, FutureBuilder, ... .of(context) works for everything.\n\n\nI'm not really convinced that hiding details like this is a good thing. It just makes it harder to figure out why things break when they break.\nAlso, it doesn't actually work for everything, as we noted earlier in this thread. It fails to unsubscribe promptly in some cases.\n\n\nThis is compatible with immutability. Animation/ValueListenable are mutable even if their .value property contains immutable objects.\n\n\nYou don't have to use these objects, if you need different properties. They're just existence proofs.",
                "createdAt": "2019-07-20T02:34:50Z"
            },
            {
                "author": "rrousselGit",
                "bodyText": "There's nothing as simple as returning T instead of Anything<T>.\nUsing ValueLisrenable here is just the easiest example available. All other objects comes with their own complexity.\nFor example Stream is problematic, because in most cases the first event is emitted the next frame. So we have to deal with a blank frame, even when we have our data.\nThen we'll typically have to use rxdart, for BehaviorSubject (otherwise our app is likely bugged). Which adds another dependency, and with a big learning curve at that.\n\n\nI'm not really convinced that hiding details like this is a good thing. It just makes it harder to figure out why things break when they break.\n\nWhy would it break?\n\nAlso, it doesn't actually work for everything, as we noted earlier in this thread. It fails to unsubscribe promptly in some cases.\n\nWhile that issue is interesting, it is technically unrelated to these changes.\nIt's a separate problem that, if this were to big merged, would be fixed by having removeDependencies called when a build stops calling .of\nRight now, there's technically still a listener. So it is logical for removeDepenencies to not be called, and for hasDependencies to stay true:\n\nValueListenableWithTransformBuilder\n\nThat's a lot more complex.\nThis would require a new Widget in the framework, for all objects, and for all situations.\nAnd this approach will get stuck when creating our Bar from two providers instead of one.\nBecause that ValueListenableWithTransformBuilder<int> will work for one and only one dependency, while didChangeDependencies can handle as many as desired.\n\nIn any case, provider have always been doing that.\nIt's simple and similar to how many widgets from the framework works. Be it Theme.of or Scrollable.of, the listening is performed on the parent, not the descendant.\nChanging that would invalidate nearly the entirely library, and reintroduce bugs that were made voluntarily harder.\nAnd even then, that is still incompatible with the desired feature that is a maintainState variable on the widget that crates the object.\nFor a maintainState to work using your suggestion, it is necessary to override the addListener-like methods, which is outside of the scope of provider.\nprovider is made to help manipulating existing classes, not to implement its own alternatives.",
                "createdAt": "2019-07-20T07:36:39Z"
            },
            {
                "author": "Hixie",
                "bodyText": "We don't seem to be really convincing each other. I hear what you are saying, it just doesn't seem like a compelling enough reason to change the framework. If you think that I'm missing something, I recommend writing some demo apps using the style you want; we can see what it would look like to do them in styles possible today, and see how compelling the difference is.",
                "createdAt": "2019-07-20T14:56:36Z"
            },
            {
                "author": "rrousselGit",
                "bodyText": "A demo will take a bit of time to make since I have other priorities.\nBut in the mean-time, I have another argument:\nHaving the InheritedWidget do the listening instead of the consumer of that information absorbs the performance issue of classes such as ChangeNotifier.\nThe documentation is pretty clear:\n\nChangeNotifier is optimized for small numbers (one or two) of listeners. It is O(N) for adding and removing listeners and O(N\u00b2) for dispatching notifications (where N is the number of listeners).\n\nBy having InheritedWidgets do the listening, we'll stay in that \"one or two listeners\" situations for the entire life of our ChangeNotifier.\nIf provider changed to listen the ChangeNotifier on the consumer instead of the InheritedWidget, then that would mean we'd end up with dozens if not hundreds of listeners as the app grows.",
                "createdAt": "2019-07-30T10:23:51Z"
            },
            {
                "author": "rrousselGit",
                "bodyText": "@Hixie I've been thinking: is hasDependencies alone reasonable?\nWith my use-case, I could replace removeDependencies by a post-frame callback.",
                "createdAt": "2019-09-01T16:00:41Z"
            },
            {
                "author": "jtlapp",
                "bodyText": "Having the InheritedWidget do the listening instead of the consumer of that information absorbs the performance issue of classes such as ChangeNotifier.\n\nWhat about implementing your own Listenable?\nIn appears that in the Flutter framework itself, the dependents are the keys of a HashMap, and the framework iterates over these keys marking each for rebuilding. That's O(n), which is better than ChangeNotifier's O(n^2) for dispatching notifications.\nChangeNotifier appears to notify at O(n^2) because while it's iterating over the listeners in one list, it's first verifying the listeners in another list. That reminds me of working off of an immutable copy to protect data across threads, especially in closures, though I don't know why ChangeNotifier is doing it in this case.\nSo I'm not seeing why provider couldn't maintain its own list at O(1) for adding and removing listeners and O(n) for dispatching notifications. Mind you, I'm working with very little understanding here! [edited]",
                "createdAt": "2019-09-01T17:26:19Z"
            },
            {
                "author": "jtlapp",
                "bodyText": "Within a single thread, I can't see any reason for a Listenable to be O(n^2) unless it's allowing listener callbacks to add and remove other listeners.",
                "createdAt": "2019-09-01T17:45:30Z"
            },
            {
                "author": "Hixie",
                "bodyText": "cc @gspencergoog who has been working on fixing the O(N) thing",
                "createdAt": "2019-09-01T20:44:47Z"
            },
            {
                "author": "rrousselGit",
                "bodyText": "@Hixie I think you missed my question here #33213 (comment):\nIs\u00a0hasDependencies\u00a0alone reasonable? With my use-case, I could replace\u00a0removeDependencies\u00a0by a post-frame callback\n\n\nWhat about implementing your own Listenable?\n\nReimplementing Listenable is outside of the scope of provider. The library is just an util for inherited widgets.\nIt just pass existing objects. It should not create new types of objects.\nIn any case, it's not just about O(N) vs O(N\u00b2).\nNot having to deal with listeners (and as such forgetting to remove a listener) is pretty significant too.\nAnd having only one listener allows supporting streams without having to broadcast them. That's important to correctly support async* functions.",
                "createdAt": "2019-09-02T06:56:48Z"
            },
            {
                "author": "jtlapp",
                "bodyText": "@Hixie wrote:\n\nwhy not just do the listening directly\n\n@rrousselGit replied:\n\nHaving the InheritedWidget do the listening instead of the consumer of that information absorbs the performance issue of classes such as ChangeNotifier.\n[...]\nChangeNotifier is optimized for small numbers (one or two) of listeners. It is O(N) for adding and removing listeners and O(N\u00b2) for dispatching notifications (where N is the number of listeners).\n[...]\nIf provider changed to listen the ChangeNotifier on the consumer instead of the InheritedWidget, then that would mean we'd end up with dozens if not hundreds of listeners as the app grows.\n\nI responded with a way to listen without using ChangeNotifier and without getting the O(N^2) performance you expressed worry about.\nI didn't mean that would create a new public Listenable class or even a Listenable class at all, just that you would do the listening. I pointed to how Flutter was \"listening\" to its dependencies by using a HashMap as an example of what could be done instead.\nEDIT: Rereading now I see that you would instead have the \"consumer\" do the listening. My reading was that provider could listen to the data source and then call setState() on the consumers. Maybe I read that incorrectly.",
                "createdAt": "2019-09-02T12:49:25Z"
            },
            {
                "author": "rrousselGit",
                "bodyText": "Rereading now I see that you would instead have the \"consumer\" do the listening. My reading was that provider could listen to the data source and then call setState() on the consumers. Maybe I read that incorrectly.\n\nThat'd be equivalent to reimplementing InheritedWidget, which is not possible as a third party package since it requires changes inside Element.\nThe only way we can make this work without that PR is to stop supporting Provider.of(context).",
                "createdAt": "2019-09-02T13:19:56Z"
            },
            {
                "author": "jtlapp",
                "bodyText": "That'd be equivalent to reimplementing InheritedWidget, which is not possible as a third party package since it requires changes inside Element.\n\nI stand corrected. It sounds like the unsubscribe belongs on InheritedWidget.",
                "createdAt": "2019-09-02T16:13:24Z"
            },
            {
                "author": "jtlapp",
                "bodyText": "I have a question for you @Hixie. I'm reading this issue as Flutter having a memory leak but the leak apparently not being bad enough to fix, perhaps because the memory would normally free on page change, which presumably happens often enough.\nQUESTION: Assume inheritFromWidgetOfExactType() subscribes a descendant widget to InheritedWidget state changes. When the descendant widget rebuilds, it actually creates a new widget which must also subscribe to state changes of the InheritedWidget. Are the prior instances of these descendant widgets unsubscribed? Or does every widget that ever subscribed remain subscribed for the life of the InheritedWidget, whether still in use or not? I imagine that those that remain subscribed have to be tested for being dead, lest they rebuild.",
                "createdAt": "2019-09-13T15:25:57Z"
            },
            {
                "author": "rrousselGit",
                "bodyText": "I can answer that for hixie:\nIt's not the widgets that subscribes to an InheritedWidget, but its Element instead.\nThe Element stays subscribed to the InheritedWidget until it is \"deactivated\", which happens when:\n\nthe associated widget is removed from the widget tree\nthe widget is moved in the tree (using GlobalKey)\n\nOn the other hand, the subscription is not cleared if the widget's build method stops calling inheritFromWidgetOfExactType.",
                "createdAt": "2019-09-13T15:42:50Z"
            },
            {
                "author": "jtlapp",
                "bodyText": "On the other hand, the subscription is not cleared if the widget's build method stops calling inheritFromWidgetOfExactType.\n\nThank you @rrousselGit! You've prevented me from expressing a misunderstanding in the article I'm writing. It sounds like a widget need only subscribe on its first build to forever thereafter be subscribed, even if it subsequently calls ancestorWidgetOfExactType. That is, subsequent to the first call, inheritFromWidgetOfExactType and ancestorWidgetOfExactType only serve to retrieve the ancestor widget, not to also establish or decline to establish a subscription.",
                "createdAt": "2019-09-13T16:02:37Z"
            },
            {
                "author": "Hixie",
                "bodyText": "@Hixie I've been thinking: is hasDependencies alone reasonable?\nWith my use-case, I could replace removeDependencies by a post-frame callback.\n\nI don't understand what this means.\nI think we should close this PR, as per #33213 (comment), until we have a stronger reason to make any changes to the framework for this.",
                "createdAt": "2019-09-15T01:00:34Z"
            },
            {
                "author": "goderbauer",
                "bodyText": "I am going to close this PR as per the previous comment.",
                "createdAt": "2019-09-18T21:38:09Z"
            },
            {
                "author": "szotp",
                "bodyText": "Maybe this PR should be reconsidered:\n\nProvider package is popular enough that it probably deserves these few cycles.\nnotifyListeners is still O(N\u00b2).\nStream based solution would be significantly harder than inheriting - probably broadcast stream with some logic to pause/resume it.\nSince setDependencies, updateDependencies, getDependencies already exists (presumably to support InheritedModel which hardly anyone uses), adding removeDependencies & hasDependencies would only slightly increase API surface while making things consistent.\nInheritedWidget is a very cool idea, imagine if we had to setup individual listeners for theme, language, screen width, etc. Those two methods would give us a chance to experiment a bit and maybe make it even better.",
                "createdAt": "2020-02-27T21:19:14Z"
            },
            {
                "author": "rrousselGit",
                "bodyText": "I definitely agree with @szotp.\nI find it surprising that we have methods for getDependencies & co, which are called a lot. But removeDependencies is rejected, when it would  be called only when an Element is deactivated (and it is fairly rare).\nCurrently we may be able to work around it by overriding setDependencies to track everything. But that is a lot of overhead for something that would be very easy to fix on the framework side.",
                "createdAt": "2020-02-28T16:20:56Z"
            },
            {
                "author": "rrousselGit",
                "bodyText": "@Hixie is this completely out of question, or could opening a design doc and making some example potentially convince the team?",
                "createdAt": "2020-02-28T16:22:22Z"
            },
            {
                "author": "Hixie",
                "bodyText": "My recommendation would be to file an issue that describes the problem, ideally using sample code that demonstrates the problem. Until there is agreement that there is a real problem worth solving here, there's not much point us talking about what the solutions should be.\nYou can write such an issue on GitHub or as a design doc, whatever is easiest for you. The point is just to separate the \"problem\" stage from the \"solution\" stage. It may be that someone can come up with a much better solution to the problem once they understand the problem fully.",
                "createdAt": "2020-02-28T19:14:34Z"
            },
            {
                "author": "rrousselGit",
                "bodyText": "The issue already exists #30062\nThis is not about a \"problem\", in the sense that it is impossible to do today.\nThis is about improvement, to make it easier to solve such thing",
                "createdAt": "2020-02-28T19:47:00Z"
            },
            {
                "author": "szotp",
                "bodyText": "A more general problem would be:\nI want an InheritedWidget that knows if it is being inherited.\nI will create an issue with better description.",
                "createdAt": "2020-02-29T10:27:08Z"
            },
            {
                "author": "Hixie",
                "bodyText": "\"I want X\" isn't a problem.\n\"It is hard to do Y\" is a problem, especially if you demonstrate it with code that is indeed difficult to write or understand.\n\"Doing Y involves a lot of boilerplate\" is a problem, especially if you can demonstrate that doing it in two cases involves a lot of identical code.",
                "createdAt": "2020-03-01T23:35:00Z"
            }
        ],
        "commentCount": 38
    },
    {
        "number": 31485,
        "title": "Prevent exception being thrown on hasScrolledBody",
        "author": "K. P. Krasi\u0144ski-Sroka",
        "state": "MERGED",
        "closedAt": "2019-06-05T20:31:00Z",
        "createdAt": "2019-04-23T13:09:04Z",
        "comments": [
            {
                "author": "dnfield",
                "bodyText": "Thanks for this!\nI'm wondering if this is really the right fix.  There are a lot of places in the framework that assume minScrollExtent is not null, and would throw a similar exception if it were.\nI suspect the intent of marking minScrollExtent as required in _NestedScrollViewController's constructor was to mean it also shouldn't be null, but there's no assert.  What if we were to add an assert, and figure out who is calling it with null, and make sure they call it with something sensible (like perhaps 0.0)?",
                "createdAt": "2019-04-24T05:11:57Z"
            },
            {
                "author": "kpsroka",
                "bodyText": "@dnfield Both _minScrollExtent and _maxScrollExtent are being uninitialized in ScrollPosition. The documentation for these can be found in ScrollMetrics.\nGiven that the permitted values can be also -/+ infinity, it might be actually good to change the getters of these fields to return -/+ infinity if they are not being set?* I'll check what effect this will have, but after looking at the code, I believe this will retain the current behaviour of null where nulls are accepted, and otherwise won't change the behaviour. WDYT?\n* or perhaps initialize them with infinities -- I'm not sure what's the code style around these cases",
                "createdAt": "2019-04-24T07:49:41Z"
            },
            {
                "author": "kpsroka",
                "bodyText": "I've updated the PR with the changes I suggested above, PTAL.\nLooking through the code I've also noticed that FixedScrollMetrics should also probably have an assertion on the min-/maxScrollExtent params. However, this can be breaking for some clients (though the usage with nulls might not necessarily be useful).",
                "createdAt": "2019-04-24T09:11:24Z"
            },
            {
                "author": "dnfield",
                "bodyText": "They get set in the consturctor for _NestedScrollView no?",
                "createdAt": "2019-04-24T14:04:33Z"
            },
            {
                "author": "kpsroka",
                "bodyText": "They get set in the consturctor for _NestedScrollView no?\n\nI'm afraid that I don't know which  they you are referring to. EDIT: If you're thinking of _min/_maxScrollExtent, they are private to scroll_position.dart, and not initialized there.",
                "createdAt": "2019-04-24T14:10:00Z"
            },
            {
                "author": "dnfield",
                "bodyText": "Sorry, not being clear.  I'll take a look when not on mobile :)",
                "createdAt": "2019-04-24T14:54:40Z"
            },
            {
                "author": "dnfield",
                "bodyText": "I was mixing up the constructor for _NestedScrollMetrics with _NestedScrollView.\nI suspect the fix here is to default the min and max scroll extents to something, but I suspect 0.0 is a safer default than double.infinity (or double.negativeInfinity). It also may be the case that we don't need to default it, we just need to figure out why someone is failing to properly initialize it. Either way, it seems allowing it to ever be null could potentialy cause problems all over the place.\n@goderbauer might know better but he's out right now.  I'll poke at it a little more in the mean time.",
                "createdAt": "2019-04-24T16:00:33Z"
            },
            {
                "author": "kpsroka",
                "bodyText": "Two nits/thoughts:\n\nwrt FixedScrollMetrics constructor (and inheriting _NestedScrollMetrics): the *extent params are @required, but their value is not asserted upon (the analyzer doesn't require the @required args to be non-null, right?). That's why adding an assertion might be breaking (though I doubt that it serves a purpose to initialize them with null).\nIn common case of finite scroll content, the minScrollExtent will be most likely set to zero upon first layout. However, I don't think there's going to be any difference in the way the NestedScrollView works if it the field gets initialized with 0.",
                "createdAt": "2019-04-25T14:54:50Z"
            },
            {
                "author": "dnfield",
                "bodyText": "Had a quick chat with @Hixie  about this - he's suggesting we shouldn't default it, as that could cause some bad behavior in other places.\nBasically, we need to figure out who is initializing or trying to use NestedScrollController before it's actually ready for use.  Then we need to either make sure it's properly initialized at that point, or we need to make sure the lifecycle is making sense and not trying to use something it's not supposed to.",
                "createdAt": "2019-04-25T18:14:46Z"
            },
            {
                "author": "kpsroka",
                "bodyText": "I've added a test for the bug in nested_scroll_view_test.dart. You can find the minimal repro I could achieve at https://gist.github.com/kpsroka/02d1bfd1ce9faedb92f4aa56f3e23b4a",
                "createdAt": "2019-04-26T09:35:59Z"
            },
            {
                "author": "kpsroka",
                "bodyText": "OK, After investigating the repro I think I know what's happening:\n\nNestedScrollView makes use -- through _NestedScrollCoordinator -- of two instances of _NestedScrollController: inner, and outer. Both of them hold a list of ScrollPositions. These lists are being mutated through attach and detach methods.\nThe inner instance is passed in the _buildSlivers method to the body of NestedScrollView using the PrimaryScrollController inherited widget.\nIf the body of the NestedScrollView extends Scrollable, upon first build (on attachRootWidget) it will execute didChangeDependencies and _updatePosition(), which in turn calls attach() on  the supplied inner controller, with a newly created ScrollPosition. That position's min/maxScrollExtent are initially set to null.\nThe attached position's min/maxScrollExtent are going to be updated in the next layout() phase. However, it will not happen before the scheduleWarmUpFrame executes another build method.\nIf the widget tree contains _ModalScope (e.g. via MaterialPageRoute), it is being marked as dirty after the initial build (through NavigatorState.didUpdateWidget()).\nThe next build phase (before the first layout phase) triggers the crash when NestedScrollView reaches its build().\n\nNow, the questions is: what shouldn't happen? :)",
                "createdAt": "2019-04-26T12:45:41Z"
            },
            {
                "author": "kpsroka",
                "bodyText": "Note: I realized that the test that I wrote doesn't follow the same path that production code does -- it might be related to the placeholder being present in tests, or some binding overrides. Hence, I reverted it.",
                "createdAt": "2019-04-26T14:30:16Z"
            },
            {
                "author": "dnfield",
                "bodyText": "Thanks for the detailed explanation!\nThis part seems strange to me:\n\nThe attached position's min/maxScrollExtent are going to be updated in the next layout() phase. However, it will not happen before the scheduleWarmUpFrame executes another build method.\n\nAre you saying that the build method call here skips a layout?",
                "createdAt": "2019-04-26T16:17:00Z"
            },
            {
                "author": "kpsroka",
                "bodyText": "Thanks for the detailed explanation!\nThis part seems strange to me:\n\nThe attached position's min/maxScrollExtent are going to be updated in the next layout() phase. However, it will not happen before the scheduleWarmUpFrame executes another build method.\n\nAre you saying that the build method call here skips a layout?\n\nI assumed it doesn't does, since it looks like on layout, the scroll extents should get updated unconditionally. I'll verify that later today.",
                "createdAt": "2019-04-26T17:58:12Z"
            },
            {
                "author": "kpsroka",
                "bodyText": "Thanks for the detailed explanation!\nThis part seems strange to me:\n\nThe attached position's min/maxScrollExtent are going to be updated in the next layout() phase. However, it will not happen before the scheduleWarmUpFrame executes another build method.\n\nAre you saying that the build method call here skips a layout?\n\nThe initial build (caused by attachRootWidget) is not triggered via frame callbacks, but rather by this mount call, which causes a series of update -> inflate -> mount -> build calls. Afterwards the warm up frame proceeds with another build cycle before it gets to the layout phase.\nEDIT: This also explains why the widgetTest is unable to reproduce this: the test placeholder's existence causes any subsequent attachRootWidget calls to end up executing the else branch   instead, which schedules build in the regular frame cycle.",
                "createdAt": "2019-04-26T20:40:55Z"
            },
            {
                "author": "kpsroka",
                "bodyText": "@dnfield Any idea on how to proceed with that?",
                "createdAt": "2019-04-30T16:59:22Z"
            },
            {
                "author": "Hixie",
                "bodyText": "If there's any part of the framework or test framework that causes us to go through a build cycle before the corresponding layout cycle, that's the bug we should track down and fix. The only times that should happen is when you've explicitly told the test framework to only go as far as build, and that's quite rare.",
                "createdAt": "2019-04-30T18:08:56Z"
            },
            {
                "author": "dnfield",
                "bodyText": "It seems like the problem here is that scheduleWarmupFrame may be getting to a second build before the first layout completes.  Do you think that's the case @kpsroka?",
                "createdAt": "2019-04-30T18:26:48Z"
            },
            {
                "author": "kpsroka",
                "bodyText": "I believe that what happens is that the initial mount() of the root component causes build that's not followed by layout, but by another build from the warm up frame.",
                "createdAt": "2019-04-30T20:23:08Z"
            },
            {
                "author": "dnfield",
                "bodyText": "Can you try this with setting debugPrintBeginFrameBanner and debugPrintEndFrameBanner set to true?  That may help narrow down what's getting called when.",
                "createdAt": "2019-04-30T21:35:10Z"
            },
            {
                "author": "kpsroka",
                "bodyText": "I'll get back to you next week, my Mac decided to get broken, and I can't repro this on an Android. (This itself is somewhat strange, but I guess more debugging will figure this out)",
                "createdAt": "2019-05-03T08:29:18Z"
            },
            {
                "author": "kpsroka",
                "bodyText": "I've compiled logs from several runs. Apart from a physical device (Samsung Galaxy J7 running Oreo 8.1), All seem to have similar pattern on execution. See https://gist.github.com/kpsroka/b3bf0607ac81cd2a2434a055f57c2cd1",
                "createdAt": "2019-05-09T18:52:03Z"
            },
            {
                "author": "kpsroka",
                "bodyText": "Some more digging -- you can notice two extra files in the gist, using debugPrintBuildScope to obtain what gets built in either crash and no-crash scenarios. The difference between the two is that when the crash occurs, the WidgetsApp is on the dirty elements list after the initial attachToRoot() call.\nThe WidgetsApp then schedules build for _ModalScope. Below you can find the call stack that ends up in having WidgetsApp on the dirty list.\nRunner: flutter: scheduleBuildFor() called for WidgetsApp-[GlobalObjectKey _MaterialAppState#b0677](dirty, state: _WidgetsAppState#22c83)\nRunner: flutter: #0      debugPrintStack (package:flutter/src/foundation/assertions.dart:707:39)\nRunner: flutter: #1      BuildOwner.scheduleBuildFor.<anonymous closure> (package:flutter/src/widgets/framework.dart:2157:9)\nRunner: flutter: #2      BuildOwner.scheduleBuildFor (package:flutter/src/widgets/framework.dart:2171:6)\nRunner: flutter: #3      Element.markNeedsBuild (package:flutter/src/widgets/framework.dart:3617:11)\nRunner: flutter: #4      State.setState (package:flutter/src/widgets/framework.dart:1143:14)\nRunner: flutter: #5      _WidgetsAppState.didChangeTextScaleFactor (package:flutter/src/widgets/app.dart:1016:5)\nRunner: flutter: #6      _WidgetsFlutterBinding&BindingBase&GestureBinding&ServicesBinding&SchedulerBinding&PaintingBinding&SemanticsBinding&RendererBinding&WidgetsBinding.handleTextScaleFactorChanged (package:flutter/src/widgets/binding.dart:411:16)\nRunner: flutter: #10     _invoke (dart:ui/hooks.dart:220:10)\nRunner: flutter: #11     _updateTextScaleFactor (dart:ui/hooks.dart:104:3)\nRunner: flutter: #12     _updateUserSettingsData (dart:ui/hooks.dart:87:3)\nRunner: flutter: (elided 3 frames from package dart:async)\nRunner: flutter: ...dirty list is now: [FocusScope(AUTOFOCUS, node: FocusScopeNode#4d68e, dirty, state: _FocusScopeState#4e5ea), _FocusMarker(dirty), WidgetsApp-[GlobalObjectKey _MaterialAppState#b0677](dirty, state: _WidgetsAppState#22c83)]\n\nThat said, the above doesn't look like an illegal call. The fault lies in buildScope being called twice before first layout, the first time through attachToRenderTree, the second time through drawFrame during the warm up frame.",
                "createdAt": "2019-05-10T11:49:16Z"
            },
            {
                "author": "googlebot",
                "bodyText": "We found a Contributor License Agreement for you (the sender of this pull request), but were unable to find agreements for all the commit author(s) or Co-authors.  If you authored these, maybe you used a different email address in the git commits than was used to sign the CLA (login here to double check)?  If these were authored by someone else, then they will need to sign a CLA as well, and confirm that they're okay with these being contributed to Google.\nIn order to pass this check, please resolve this problem and have the pull request author add another comment and the bot will run again. If the bot doesn't comment, it means it doesn't think anything has changed.\n\u2139\ufe0f Googlers: Go here for more info.",
                "createdAt": "2019-05-10T11:50:53Z"
            },
            {
                "author": "googlebot",
                "bodyText": "CLAs look good, thanks!\n\u2139\ufe0f Googlers: Go here for more info.",
                "createdAt": "2019-05-10T12:02:54Z"
            },
            {
                "author": "kpsroka",
                "bodyText": "Note: I tried adding a performLayout call after the root widget is initialized (and goes through the first build), but that causes a lot of tests to fail. Maybe the solution is not to build the widget tree during attachToRenderTree? I can try that, but I believe it will cause even more failures.",
                "createdAt": "2019-05-10T19:31:05Z"
            },
            {
                "author": "kpsroka",
                "bodyText": "@dnfield @Hixie Any idea how to proceed with this?\nIn essence, the initial attachRootWidget causes one build to happen, although this is done in a buildScope callback, which nullifies marking widgets for build. However, before the warm up frame starts some async hooks get fired, causing widgets to be marked dirty, and the warm up frame begins with building these (before the layout). I guess the timers being run is the effect of wrapping drawFrame* calls in Timer.run() -- see below: \n  \n    \n      flutter/packages/flutter/lib/src/scheduler/binding.dart\n    \n    \n         Line 767\n      in\n      63aa5b3\n    \n  \n  \n    \n\n        \n          \n           Timer.run(() { \n        \n    \n  \n\n\nNow, I can force the RendererBinding to run its drawFrame() before the warm up frame starts. This fixes the issue, but it's not very clean - and some tests fail when I try to do this.",
                "createdAt": "2019-05-14T19:56:05Z"
            },
            {
                "author": "dnfield",
                "bodyText": "I'm not sure I'm fully understanding this, but is it possible that we just need scheduleWarmupFrame to fizzle if there's already a frame in progress?\nAlternatively, does it help to move that lockEvents up higher in the warmup frame body so that we don't get anything else interfering?",
                "createdAt": "2019-05-14T20:29:32Z"
            },
            {
                "author": "kpsroka",
                "bodyText": "Thanks! I went with moving the event lock higher, and modifying it slightly. I'll still need to verify this works ok on iOS - but that's something for (my) tomorrow.",
                "createdAt": "2019-05-14T21:16:24Z"
            },
            {
                "author": "kpsroka",
                "bodyText": "Unfortunately, the problem still persists (at least with the iOS simulator).",
                "createdAt": "2019-05-15T14:27:05Z"
            },
            {
                "author": "dnfield",
                "bodyText": "Ok.  Here's the sequence that seems to cause this:\n\nThe root widget is attached and fires an initial build.\nA warm up frame is scheduled.  It starts its work and flushes the microtask queue.\nThe engine finds out the platform brightness and text scale settings, and sends those down to the window (adding to the microtask queue).\nThe microtask flush in the middle of scheduling the warmup frame again marks the tree as dirty.\nAs the warmup frame continues to make progress, the scroll controller is in a bad state.  It thinks it's been sucessfully built and laid out previously, and so it should be safe to access the metrics - however, the layout hasn't happened yet even though we're marked dirty again.\n\nSo our two options are:\n\nMake scroll metrics tolerant of this case. The risk is that we end up hiding lifecycle issues this way.\nSomehow make the warmup frame finish before processing the setState call for the platformbrightness/textscale notification(s).",
                "createdAt": "2019-05-30T17:59:11Z"
            },
            {
                "author": "dnfield",
                "bodyText": "Discussed this elsewhere, but one possibility for this is to update the RendererBinding to override the scheduleWarmupFrame.  It could then wrap the super.scheduleWarmupFrame with something to let the renderer binding know that it should defer callbacks coming from the engine to a queue.  Once the super.scheduleWarmUpFrame() is done, it could then flush that queue and go back to sending them immediately.",
                "createdAt": "2019-05-30T20:33:54Z"
            },
            {
                "author": "Hixie",
                "bodyText": "The engine finds out the platform brightness and text scale settings, and sends those down to the window (adding to the microtask queue).\n\nThat seems like the bug. Why are these ending up on the microtask queue instead of the task queue?",
                "createdAt": "2019-06-03T17:30:30Z"
            },
            {
                "author": "dnfield",
                "bodyText": "Hm.  It may not actually be the microtask queue at all - the problem is they mark the widgets as needing a build again, but they're getting marked as needing a build while a build is already going on which leads to the confusion.",
                "createdAt": "2019-06-03T17:46:34Z"
            },
            {
                "author": "kpsroka",
                "bodyText": "The engine finds out the platform brightness and text scale settings, and sends those down to the window (adding to the microtask queue).\n\nThat seems like the bug. Why are these ending up on the microtask queue instead of the task queue?\n\nActually, they are not. I've been a bit misled by the comment in scheduleWarmUpFrame:\n    // We use timers here to ensure that microtasks flush in between.\n\nThe engine calls that end up dirtying the state before layout are actually regular Tasks, rather than microtasks. So I tried a different approach now, in which instead of using Timer.run to call handle*Frame within scheduleWarmUpFrame, I'm using scheduleMicrotask.",
                "createdAt": "2019-06-04T11:50:33Z"
            },
            {
                "author": "dnfield",
                "bodyText": "This seems reasonable to me but I'm afraid I may be lacking in my understanding of what's going on here.  I suspect @jonahwilliams @goderbauer, @yjbanov  or @Hixie would be better suited to review this.  Could one of you take a look?",
                "createdAt": "2019-06-04T17:18:52Z"
            },
            {
                "author": "dnfield",
                "bodyText": "Thanks for sticking with this @kpsroka !  It definitely was a tricky one.",
                "createdAt": "2019-06-05T20:31:53Z"
            },
            {
                "author": "Hixie",
                "bodyText": "The PR as it stands now seems correct, but I'm still confused as to why it didn't work before when calling Timer.run twice back-to-back synchronously. I would have expected the result to be identical (modulo microtask counts).\nIt would be good to have a test that specifically tests the original bug that led to this, though I admit I don't really know how one would write that test.",
                "createdAt": "2019-06-06T19:20:36Z"
            }
        ],
        "commentCount": 38
    },
    {
        "number": 89511,
        "title": "Reland engine display features",
        "author": "Andrei Diaconu",
        "state": "MERGED",
        "closedAt": "2021-11-05T01:37:55Z",
        "createdAt": "2021-09-05T18:28:23Z",
        "comments": [
            {
                "author": "andreidiaconu",
                "bodyText": "There are two remaining issues that need to be solved:\n\nandroidx.window uses a newer version of kotlin, which is incompatible with version 1.3.50, used in templates. I updated kotlin to 1.4.32 but this is not compatible with AGP 3.3.0 - There is a test that specifically makes sure apps using AGP 3.3.0 still compile, which is no longer the case. I think this is a breaking change and it should be discussed. Theoretically, I think we can make this new kotlin version work with AGP 3.3.0 by asking the compiler to ignore the differences in metadata versions (which is what it complains about) - but I haven't tried this yet, might not work ok and seems like a temp solution. The test that fails: \n  \n    \n      flutter/packages/flutter_tools/test/integration.shard/android_plugin_example_app_build_test.dart\n    \n    \n         Line 24\n      in\n      e7b7ebc\n    \n  \n  \n    \n\n        \n          \n           test('plugin example can be built using current Flutter Gradle plugin', () async { \n        \n    \n  \n\n\nandroidx.window requires Android API 31. The camera plugin, which is used in one of the tests, uses code that is deprecated in API 31, and warnings are treated as errors. I have opened a separate issue for the camera plugin, which, once fixed, should also fix this test #89578 . If we want to make this land faster, we can consider removing the -Werror flag. The test that fails is \n  \n    \n      flutter/packages/flutter_tools/test/integration.shard/deprecated_gradle_settings_test.dart\n    \n    \n         Line 17\n      in\n      e7b7ebc\n    \n  \n  \n    \n\n        \n          \n           test('android project using deprecated settings.gradle will still build', () async { \n        \n    \n  \n\n\n\nThese version bumps (kotlin, android API and AGP) need to be dealt with eventually. Is there anything in the tooling or framework that helps with old plugins or old apps that I'm missing? @blasten Could you please advise? I'm asking because of  #71964",
                "createdAt": "2021-09-07T12:59:58Z"
            },
            {
                "author": "blasten",
                "bodyText": "@andreidiaconu I filed #89609. Does your change require to bump the targetSdkVersion/compileSdkVersion?",
                "createdAt": "2021-09-07T21:38:08Z"
            },
            {
                "author": "andreidiaconu",
                "bodyText": "Yes, it does.\n\u2026\nOn Wed, 8 Sep 2021 at 00:38 Emmanuel Garcia ***@***.***> wrote:\n @andreidiaconu <https://github.com/andreidiaconu> I filed #89609\n <#89609>. Does your change\n require to bump the targetSdkVersion/compileSdkVersion?\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n <#89511 (comment)>,\n or unsubscribe\n <https://github.com/notifications/unsubscribe-auth/AAKWJPWJ7WIWNVNTGI3HVZDUA2A4ZANCNFSM5DPB76AA>\n .\n Triage notifications on the go with GitHub Mobile for iOS\n <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>\n or Android\n <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>.",
                "createdAt": "2021-09-07T21:39:28Z"
            },
            {
                "author": "blasten",
                "bodyText": "does it mean that your change will break older apps that don't update these?",
                "createdAt": "2021-09-07T21:40:54Z"
            },
            {
                "author": "andreidiaconu",
                "bodyText": "Yes, unfortunately, unless I am missing something.\n\nEdit:\n- For `targetSdkVersion`/`compileSdkVersion` no\n- For AGP version 3, yes\n- For AGP 4 and up, no\n\u2026\nOn Wed, 8 Sep 2021 at 00:41 Emmanuel Garcia ***@***.***> wrote:\n does it mean that your change will break older apps that don't update\n these?\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n <#89511 (comment)>,\n or unsubscribe\n <https://github.com/notifications/unsubscribe-auth/AAKWJPRLERU7QPNXCZFLMW3UA2BHDANCNFSM5DPB76AA>\n .\n Triage notifications on the go with GitHub Mobile for iOS\n <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>\n or Android\n <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>.",
                "createdAt": "2021-09-07T21:42:28Z"
            },
            {
                "author": "blasten",
                "bodyText": "This is problematic then. I'm not sure what the next step should be, other than split the changes so that the activation requires a manual step.\nYou mentioned that this is is hard to land as a plugin, but can a portion of this change land as a plugin? In particular, the code that brings the Android dependency, and requires a higher SDK?",
                "createdAt": "2021-09-07T21:47:36Z"
            },
            {
                "author": "andreidiaconu",
                "bodyText": "I will get back to you on this. It\u2019s possible that only the AGP version\nbump breaks older apps, while the SDK version does not. I need to run some\ntests first, especially since the conclusions we draw here affect the way I\ncan proceed with this.\n\nAs for the Android dependecy as a plugin, I\u2019m not sure how that would work,\nbut I will research a way to opt-in if we conclude that there is no way\naround it.\n\u2026\nOn Wed, 8 Sep 2021 at 00:47 Emmanuel Garcia ***@***.***> wrote:\n This is problematic then. I'm not sure what the next step should be, other\n than split the changes so that the activation requires a manual step.\n\n You mentioned that this is is hard to land as a plugin, but can a portion\n of this change land as a plugin? In particular, the code that brings the\n Android dependency, and requires a higher SDK?\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n <#89511 (comment)>,\n or unsubscribe\n <https://github.com/notifications/unsubscribe-auth/AAKWJPRKLBU5XQEMP2AYXYLUA2CAJANCNFSM5DPB76AA>\n .\n Triage notifications on the go with GitHub Mobile for iOS\n <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>\n or Android\n <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>.",
                "createdAt": "2021-09-07T22:00:42Z"
            },
            {
                "author": "andreidiaconu",
                "bodyText": "@blasten The problem is not with targetSdkVersion / compileSdkVersion. The compatibility issue shows up between old versions of AGP and newer versions of kotlin, which is added with this engine PR.\nFor an application to run into issues, it would need to use AGP version 3. The framework templates is are set to version 4.1.0, which works fine with the latest kotlin 1.5.30. If an app stops building after this PR, it would only need to run flutter create .\nOlder apps still using AGP 3 are already forced to update if they try using plugins with newer version of kotlin. Here is an example issue of this happening #83834 . Moving forward, less and less apps will even be able to use AGP 3 due to this lack of compatibility with newer kotlin. It only takes one plugin to use it for the developer to be forced to update AGP.\nFor more exact numbers, androidx.window uses kotlin version 1.5.21 and this version is not compatible with AGP 3.3.0 (used in this test).",
                "createdAt": "2021-09-08T14:26:19Z"
            },
            {
                "author": "blasten",
                "bodyText": "Thanks for the research. In this case, it sounds like reverting the targetSdkVersion/compileSdkVersion changes in this PR will fix the issue seen in #89609",
                "createdAt": "2021-09-08T19:25:42Z"
            },
            {
                "author": "andreidiaconu",
                "bodyText": "@blasten I spoke to soon on compileSdkVersion. androidx.window does have minCompileSdk set to 31, which then requires anyone using it to have compileSdkVersion set to at least 31. From what I can see, there isn't anything specific in the library to warrant this requirement. I will try to see if this restriction can be dropped on their side, since it also contradicts their own guidelines -- assuming this was not intentional https://github.com/androidx/androidx/blob/androidx-main/docs/api_guidelines.md#choosing-a-minsdkversion-module-minsdkversion\nI will keep you updated and sorry for my confusion",
                "createdAt": "2021-09-09T09:56:10Z"
            },
            {
                "author": "andreidiaconu",
                "bodyText": "@blasten I discussed with the androidx team and they will not lower the minCompileSdk. They now use this configuration on all their libraries and doing this has standardisation advantages for them and their users.\nBringing in androidx.window forces us to use compileSdkVersion 31. targetSdkVersion can remain whatever developers prefer. This means that:\n\nApps not yet using compileSdkVersion 31 will need to run flutter create . to update their android configuration\nApps using methods deprecated in API 31 need to be updated because of the -Werror flag. A solution for not breaking these apps would be removing the -Werror flag. A better solution would be for the apps / plugins to manually fix or suppress the warnings.",
                "createdAt": "2021-09-14T18:02:25Z"
            },
            {
                "author": "bernaferrari",
                "bodyText": "compileSdkVersion 31 is fine as it only says 'we want the last features from Android 12' and not 'compatibility mode'. The issue is that every year there is a new version, and Flutter itself, its libraries and apps have been historically bad at keeping track of this.",
                "createdAt": "2021-09-28T18:38:00Z"
            },
            {
                "author": "Piinks",
                "bodyText": "Hey @andreidiaconu thank you for all of your work and research on this. I am just catching up on it. :)\nGiven your last update, do you want to proceed with this change using compileSdkVersion 31? I am here to help move this along, so let me know if there is anything I can do to assist.",
                "createdAt": "2021-10-01T19:09:24Z"
            },
            {
                "author": "andreidiaconu",
                "bodyText": "Yes, I want to continue with compileSdkVersion 31.\n\u2026\nOn Fri, 1 Oct 2021 at 22:09 Kate Lovett ***@***.***> wrote:\n Hey @andreidiaconu <https://github.com/andreidiaconu> thank you for all\n of your work and research on this. I am just catching up on it. :)\n Given your last update, do you want to proceed with this change using compileSdkVersion\n 31? I am here to help move this along, so let me know if there is\n anything I can do to assist.\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n <#89511 (comment)>,\n or unsubscribe\n <https://github.com/notifications/unsubscribe-auth/AAKWJPRBTDL4QJUEOZRZRQTUEYBPDANCNFSM5DPB76AA>\n .\n Triage notifications on the go with GitHub Mobile for iOS\n <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>\n or Android\n <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>.",
                "createdAt": "2021-10-01T19:11:34Z"
            },
            {
                "author": "Piinks",
                "bodyText": "Ok thanks for clarifying! :)\n@blasten do you think this breaking change is acceptable if we go through the process and provide a migration guide?",
                "createdAt": "2021-10-01T19:15:05Z"
            },
            {
                "author": "blasten",
                "bodyText": "Thanks @Piinks. Andrei, I'm sorry this is taking longer, or that this issue wasn't brought up earlier.  (I was collecting information from the design doc reviewers.)\nI'd like to see a proposal where we define an interface with a default implementation that doesn't require any of these changes to an app. At a high level, I'm mostly concerned that new features all the sudden require new embedding dependencies, or migrations guidelines for everyone, even if an app doesn't use these features.\nAndroidX libraries themselves were carefully designed, so they can be included in an app as needed. I'd like to see how that model can work in Flutter as well.\nThere are exceptions to this model. e.g. Android's lifecycle was a necessary dependency that had our team debating for nearly a quarter (cc @xster).\nGiven that the communication channel between the framework and the native side is platform channels, what sort of limitation do you see by having an interface with two different implementations?  That is, one shipped as a plugin that requires the changes to the app you are suggesting, and one with a default (no-op) implementation.",
                "createdAt": "2021-10-01T19:36:18Z"
            },
            {
                "author": "andreidiaconu",
                "bodyText": "One limitation I see is that viewport metrics can get out of sync, which is\nwhy (to my recollection) we opted to use existing engine methods directly\nfor delivering that data from android to engine to dart.\n\nJust to make sure that we avoid confusion, I would like to say that display\nfeatures (these changes) are not using platform channels, but method calls\non the engine directly.\n\nRegarding high level concerns:\n\nHaving a less coupled system for adding features to the engine and\nframework sounds good, but it seems like a bigger change, compared to this\none feature. It would require refactoring the engine. If what you had in\nmind is not a system for existing and future features, I think I\nmisunderstood.\n\nFor this feature specifically, communication could be moved from calling\nengine methods to platform channels, but there are several implications if\nwe go down this path:\n- Agreement from initial reviewers.\n- A rewrite of the engine PR. Most of the code is specific to the method we\nchose to use.\n- Introduction of a new concept: Parts of Flutter (display features, in\nthis case) would not work unless you also include a package in pubspec \u2014\nbut you would not get any error. This has its own implications, like the\nneed for lint rules or other mechanisms for making sure apps that use this\nfeature don\u2019t get shipped without including the feature package.\n\nWhen you say you would like to see a proposal based on interfaces with\ndefault implementations, do you mean\n\n- for this feature specifically or\n- in general as a path for engine and framework contributions\n\nand\n\n- who do you see owning the proposal?\n- what happens to this feature while this system is being developed?\n\u2026\nOn Fri, 1 Oct 2021 at 22:36 Emmanuel Garcia ***@***.***> wrote:\n Thanks @Piinks <https://github.com/Piinks>. Andrei, I'm sorry this is\n taking longer, or that this issue wasn't brought up earlier. (I was\n collecting information from the design doc\n <https://docs.google.com/document/d/1GpGok1btvPlfK24cBQY9D1mlsxT_EQ5RTGJuewaRr3o/edit?resourcekey=0-4pQAmbSPppAGxDIbJubBFw#heading=h.pub7jnop54q0>\n reviewers.)\n\n I'd like to see a proposal where we define an interface with a default\n implementation that doesn't require any of these changes to an app. At a\n high level, I'm mostly concerned that new features all the sudden require\n new embedding dependencies, or migrations guidelines for everyone, even if\n an app doesn't use these features.\n\n AndroidX libraries themselves were carefully designed, so they can be\n included in an app as needed. I'd like to see how that model can work in\n Flutter as well.\n\n There are exceptions to this model. e.g. Android's lifecycle was a\n necessary dependency that had our team debating for nearly a quarter (cc\n @xster <https://github.com/xster>).\n\n Given that the communication channel between the framework and the native\n side is platform channels, what sort of limitation do you see by having an\n interface with two different implementations? That is, one shipped as a\n plugin that requires the changes to the app you are suggesting, and one\n with a default (no-op) implementation.\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n <#89511 (comment)>,\n or unsubscribe\n <https://github.com/notifications/unsubscribe-auth/AAKWJPQRZB6OHKQXIMVJTGLUEYET5ANCNFSM5DPB76AA>\n .\n Triage notifications on the go with GitHub Mobile for iOS\n <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>\n or Android\n <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>.",
                "createdAt": "2021-10-01T20:39:13Z"
            },
            {
                "author": "blasten",
                "bodyText": "One limitation I see is that viewport metrics can get out of sync, which is\nwhy (to my recollection) we opted to use existing engine methods directly\nfor delivering that data from android to engine to dart.\n\nLooking at flutter/engine#24756, it seems doable to add a method (e.g. buildFlutterView()) to FlutterActivity that allows to override the implementation of FlutterView.   You could subclass FlutterView and add the changes added to the engine that use the  androidx.window.* packages.\nLastly, a plugin could have a FlutterView subclass as well as WindowInfoRepositoryCallbackAdapterWrapper class.  Then, the only step for a developer becomes overriding the buildFlutterView() in FlutterActivity, and bumping compileSdkVersion.\nWould there be an issue with this approach?",
                "createdAt": "2021-10-02T01:07:37Z"
            },
            {
                "author": "andreidiaconu",
                "bodyText": "The engine and framework would still need to know about the concept of\ndisplay features (viewport metrics would contain display features). The\nframework would still use display features but they would not be populated\nby default. Developers might expect them to work, without any obvious\nsignal that they don\u2019t, unless they also include a plugin.\n\nAre we doing all of this to avoid bumping compileSdkVersion from 30 to 31?\n\u2026\nOn Sat, 2 Oct 2021 at 04:07 Emmanuel Garcia ***@***.***> wrote:\n One limitation I see is that viewport metrics can get out of sync, which is\n why (to my recollection) we opted to use existing engine methods directly\n for delivering that data from android to engine to dart.\n\n Looking at flutter/engine#24756\n <flutter/engine#24756>, it seems doable to add a\n method (e.g. buildFlutterView()) to FlutterActivity that allows to\n override the implementation of FlutterView. You could subclass FlutterView\n and add the changes added to the engine that use the androidx.window.*\n packages.\n\n Lastly, a plugin could have a FlutterView subclass as well as\n WindowInfoRepositoryCallbackAdapterWrapper class. Then, the only step for\n a developer becomes overriding the buildFlutterView() in FlutterActivity,\n and bumping compileSdkVersion.\n\n Would there be an issue with this approach?\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n <#89511 (comment)>,\n or unsubscribe\n <https://github.com/notifications/unsubscribe-auth/AAKWJPRITJVS76JBFTAW67LUEZLOLANCNFSM5DPB76AA>\n .\n Triage notifications on the go with GitHub Mobile for iOS\n <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>\n or Android\n <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>.",
                "createdAt": "2021-10-02T07:03:07Z"
            },
            {
                "author": "blasten",
                "bodyText": "Are we doing all of this to avoid bumping compileSdkVersion from 30 to 31?\n\n...and the embedding dependency.\nBumping compileSdkVersion has the potential to cause warnings. In this case, the only solution would be to disable warnings as errors if this is caused by a plugin.",
                "createdAt": "2021-10-04T16:44:15Z"
            },
            {
                "author": "andreidiaconu",
                "bodyText": "To my knowledge, the embedding dependency has already been agreed to at the beginning. We waited for the dependency to reach beta status, which was the only thing holding us back at the time.",
                "createdAt": "2021-10-04T17:09:52Z"
            },
            {
                "author": "blasten",
                "bodyText": "My main concern is the required step for all developers after a flutter upgrade. Do you have a doc about what should happen and what is the DevX?",
                "createdAt": "2021-10-04T17:23:32Z"
            },
            {
                "author": "andreidiaconu",
                "bodyText": "DevX stands for Developer Experience (as in Surface Duo Developer Experience) and it's the team I'm part of. I'm not sure why you're asking, but I hope that answers your question. The only doc we have so far is the one you linked to earlier in this thread.\nI understand the issues devs will face by changing the compileSdkVersion, but as I understand it, androidX already moved all their libraries to require a min compile sdk version of 31 (including any androidX library flutter already uses and will have to update at some point). Staying on api 30 is a temporary solution.\nIn fact, not using compile version 31, while using libraries compiled with it is dangerous, as parts of the code might get obfuscated / removed during the build process. To my understanding, that is why androidX specifically added the minCompileSdk to all their libraries.\nOn the other hand, my concern with the proposed solution is that devs might end up using display features without them actually working. Devs might expect dialogs and popups to avoid the hinge, but without opting in, that will not happen, and they will not be aware of it.",
                "createdAt": "2021-10-04T17:41:14Z"
            },
            {
                "author": "bernaferrari",
                "bodyText": "How did Flutter got into compileSdk 30? I think you bump it like every year randomly.\nFor example, 28 -> #26798, 29 -> #62799\nIn a few months, there will be 32 with the rumored Pixel foldable. Next year there will be 33. I think we should have a plan for these upgrades as they are very common and Google Play Store forces sdk-2 every year.",
                "createdAt": "2021-10-04T17:47:13Z"
            },
            {
                "author": "blasten",
                "bodyText": "sorry for the confusion. Maybe, we should set up some video chat to make sure we are in the same page.\nMy question around DevX is what is the developer experience proposal for Flutter users once they do a flutter upgrade and flutter build apk for example. Do we envision a warning generated by the Flutter tool with concrete steps?  What about warnings, do we disable warnings as errors for all apps?\n\nHow did Flutter got into compileSdk 30? I think you bump it like every year randomly.\n\n@bernaferrari - To my knowledge those cases didn't affect existing apps.\nIf my understanding is correct,  the issue we are discussing is that all apps will stop compiling once this change is merged.\nThe fix appears to just be one line change, but if warnings are found due to the use of plugins, then warnings as errors settings must be removed as well.",
                "createdAt": "2021-10-04T17:55:23Z"
            },
            {
                "author": "andreidiaconu",
                "bodyText": "My explanation about DevX was just silly in this context :) - The video call is a great idea and was thinking the same thing. Will reach over email.\nAs for the compile sdk, since most Flutter apps end up using at least one androidX library at some point, and since all androidX libraries now have minCompileSdk=31, this will become a problem for all devs sooner or later. This is a rather new (a few months ago) addition to androidX libraries, so a guided migration for flutter developers is not something we're doing just for this contribution but something that will affect devs anyway.",
                "createdAt": "2021-10-04T18:04:42Z"
            },
            {
                "author": "blasten",
                "bodyText": "To summarized some of the offline conversation:\nSome changes are required to make the process of bumping embedding's dependencies easier for the avg Flutter developer. Some of these are:\n\nThe Flutter tool will need to disable warnings as errors, as a version bump of an AndroidX dependency in the embedding has the potential to prevent apps from compiling\nThe Flutter tool needs to indicate that the compileSdkVersion needs to be updated in build.gradle via pattern matching\nGoing forward,  compileSdkVersion and others should default to a value specified in the framework, which is based on the embedding requirements for that specific version of Flutter.\n\n@andreidiaconu suggested to wait for these changes if they are landed soon, but will not be contributing to fixing these issues.\nThere was also the suggestion to try to see if a version of a plugin can be landed as it will decouple the engine/framework changes.",
                "createdAt": "2021-10-06T21:18:55Z"
            },
            {
                "author": "blasten",
                "bodyText": "I'm moving compileSdkVersion to flutter.gradle, so it's easier to manage version bumps in the future. \n  \n    \n      flutter/packages/flutter_tools/gradle/flutter.gradle\n    \n    \n         Line 38\n      in\n      3d4b25d\n    \n  \n  \n    \n\n        \n          \n           static int compileSdkVersion = 30",
                "createdAt": "2021-10-13T00:52:17Z"
            },
            {
                "author": "blasten",
                "bodyText": "Some updates:\nWe have upgraded to compileSdkVersion 31, and made it such that all apps in the future get the new defaults after they upgrade Flutter.  We are also adding warnings to the tool to help guide the resolution of some warnings from plugins using potentially deprecated APIs.\ncc @andreidiaconu I think it's probably about the time to try to reland your engine PR.",
                "createdAt": "2021-10-29T07:06:14Z"
            },
            {
                "author": "andreidiaconu",
                "bodyText": "That is great news. I will try to reland asap next week. Thank you for the\nupdate.\n\u2026\nOn Fri, 29 Oct 2021 at 08:06 Emmanuel Garcia ***@***.***> wrote:\n Some updates:\n\n We have upgraded to compileSdkVersion 31, and made it such that all apps\n in the future get the new defaults after they upgrade Flutter. We are also\n adding warnings to the tool to help guide the resolution of some warnings\n from plugins using potentially deprecated APIs.\n\n cc @andreidiaconu <https://github.com/andreidiaconu> I think it's\n probably about the time to try to reland your engine PR.\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n <#89511 (comment)>,\n or unsubscribe\n <https://github.com/notifications/unsubscribe-auth/AAKWJPWGNI7C7SVPCJ7H4PLUJJBXFANCNFSM5DPB76AA>\n .\n Triage notifications on the go with GitHub Mobile for iOS\n <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>\n or Android\n <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>.",
                "createdAt": "2021-10-29T07:17:50Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 3 new digest(s) on patchset 2.\nView them at https://flutter-gold.skia.org/cl/github/89511",
                "createdAt": "2021-11-01T15:01:25Z"
            },
            {
                "author": "andreidiaconu",
                "bodyText": "Engine reland PR flutter/engine#29447",
                "createdAt": "2021-11-01T17:40:22Z"
            },
            {
                "author": "andreidiaconu",
                "bodyText": "@blasten Could you please have a look at flutter/engine#29447 for trying to reland this?\nThis PR si most likely still needed, because of the lockfiles.",
                "createdAt": "2021-11-01T21:54:51Z"
            },
            {
                "author": "andreidiaconu",
                "bodyText": "Does luci-flutter turn green when all other checks are green? I'm a bit confused as to what I can do to make it pass.",
                "createdAt": "2021-11-05T00:45:27Z"
            },
            {
                "author": "blasten",
                "bodyText": "It turns green when all tests are passing on master. In this case, one test failed in the last invocation, so I retriggered it.",
                "createdAt": "2021-11-05T00:49:40Z"
            },
            {
                "author": "andreidiaconu",
                "bodyText": "From what I see, one of the red areas in https://ci.chromium.org/p/flutter/g/flutter/console relates to one of the tests also fixed in this PR (failure caused by firebase requiring minSdk 19 instead of 16).",
                "createdAt": "2021-11-05T00:52:08Z"
            },
            {
                "author": "blasten",
                "bodyText": "Got it.",
                "createdAt": "2021-11-05T01:10:55Z"
            }
        ],
        "commentCount": 37
    },
    {
        "number": 86417,
        "title": "Roll Plugins from fbb4b3a85e3a to cf80430e72e1 (1 revision)",
        "author": "engine-flutter-autoroll",
        "state": "CLOSED",
        "closedAt": "2021-07-16T01:16:12Z",
        "createdAt": "2021-07-14T09:27:17Z",
        "comments": [
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_long_running_tests_3_5 has failed. Please fix the issues identified (or deflake) before re-applying this label.\nThe status or check suite Mac build_tests_3_4 has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2021-07-14T10:31:03Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_long_running_tests_3_5 has failed. Please fix the issues identified (or deflake) before re-applying this label.\nThe status or check suite Mac build_tests_3_4 has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2021-07-14T11:36:03Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_long_running_tests_3_5 has failed. Please fix the issues identified (or deflake) before re-applying this label.\nThe status or check suite Mac build_tests_3_4 has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2021-07-14T12:41:03Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_long_running_tests_3_5 has failed. Please fix the issues identified (or deflake) before re-applying this label.\nThe status or check suite Mac build_tests_3_4 has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2021-07-14T13:46:03Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_long_running_tests_3_5 has failed. Please fix the issues identified (or deflake) before re-applying this label.\nThe status or check suite Mac build_tests_3_4 has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2021-07-14T14:51:04Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_long_running_tests_3_5 has failed. Please fix the issues identified (or deflake) before re-applying this label.\nThe status or check suite Mac build_tests_3_4 has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2021-07-14T15:56:04Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_long_running_tests_3_5 has failed. Please fix the issues identified (or deflake) before re-applying this label.\nThe status or check suite Mac build_tests_3_4 has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2021-07-14T17:01:02Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_long_running_tests_3_5 has failed. Please fix the issues identified (or deflake) before re-applying this label.\nThe status or check suite Mac build_tests_3_4 has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2021-07-14T18:06:08Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_long_running_tests_3_5 has failed. Please fix the issues identified (or deflake) before re-applying this label.\nThe status or check suite Mac build_tests_3_4 has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2021-07-14T19:11:04Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_long_running_tests_3_5 has failed. Please fix the issues identified (or deflake) before re-applying this label.\nThe status or check suite Mac build_tests_3_4 has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2021-07-14T20:16:02Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_long_running_tests_3_5 has failed. Please fix the issues identified (or deflake) before re-applying this label.\nThe status or check suite Mac build_tests_3_4 has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2021-07-14T21:21:08Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_long_running_tests_3_5 has failed. Please fix the issues identified (or deflake) before re-applying this label.\nThe status or check suite Mac build_tests_3_4 has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2021-07-14T22:51:10Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_long_running_tests_3_5 has failed. Please fix the issues identified (or deflake) before re-applying this label.\nThe status or check suite Mac build_tests_3_4 has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2021-07-14T23:56:04Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_long_running_tests_3_5 has failed. Please fix the issues identified (or deflake) before re-applying this label.\nThe status or check suite Mac build_tests_3_4 has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2021-07-15T01:01:05Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_long_running_tests_3_5 has failed. Please fix the issues identified (or deflake) before re-applying this label.\nThe status or check suite Mac build_tests_3_4 has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2021-07-15T02:06:04Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_long_running_tests_3_5 has failed. Please fix the issues identified (or deflake) before re-applying this label.\nThe status or check suite Mac build_tests_3_4 has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2021-07-15T03:11:04Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_long_running_tests_3_5 has failed. Please fix the issues identified (or deflake) before re-applying this label.\nThe status or check suite Mac build_tests_3_4 has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2021-07-15T04:16:05Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_long_running_tests_3_5 has failed. Please fix the issues identified (or deflake) before re-applying this label.\nThe status or check suite Mac build_tests_3_4 has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2021-07-15T05:21:04Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_long_running_tests_3_5 has failed. Please fix the issues identified (or deflake) before re-applying this label.\nThe status or check suite Mac build_tests_3_4 has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2021-07-15T06:26:04Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_long_running_tests_3_5 has failed. Please fix the issues identified (or deflake) before re-applying this label.\nThe status or check suite Mac build_tests_3_4 has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2021-07-15T07:31:05Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_long_running_tests_3_5 has failed. Please fix the issues identified (or deflake) before re-applying this label.\nThe status or check suite Mac build_tests_3_4 has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2021-07-15T08:36:04Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_long_running_tests_3_5 has failed. Please fix the issues identified (or deflake) before re-applying this label.\nThe status or check suite Mac build_tests_3_4 has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2021-07-15T09:41:03Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_long_running_tests_3_5 has failed. Please fix the issues identified (or deflake) before re-applying this label.\nThe status or check suite Mac build_tests_3_4 has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2021-07-15T10:46:04Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_long_running_tests_3_5 has failed. Please fix the issues identified (or deflake) before re-applying this label.\nThe status or check suite Mac build_tests_3_4 has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2021-07-15T11:51:02Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_long_running_tests_3_5 has failed. Please fix the issues identified (or deflake) before re-applying this label.\nThe status or check suite Mac build_tests_3_4 has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2021-07-15T12:56:03Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_long_running_tests_3_5 has failed. Please fix the issues identified (or deflake) before re-applying this label.\nThe status or check suite Mac build_tests_3_4 has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2021-07-15T14:01:04Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_long_running_tests_3_5 has failed. Please fix the issues identified (or deflake) before re-applying this label.\nThe status or check suite Mac build_tests_3_4 has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2021-07-15T15:06:04Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_long_running_tests_3_5 has failed. Please fix the issues identified (or deflake) before re-applying this label.\nThe status or check suite Mac build_tests_3_4 has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2021-07-15T16:11:02Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_long_running_tests_3_5 has failed. Please fix the issues identified (or deflake) before re-applying this label.\nThe status or check suite Mac build_tests_3_4 has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2021-07-15T17:16:02Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_long_running_tests_3_5 has failed. Please fix the issues identified (or deflake) before re-applying this label.\nThe status or check suite Mac build_tests_3_4 has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2021-07-15T18:21:04Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_long_running_tests_3_5 has failed. Please fix the issues identified (or deflake) before re-applying this label.\nThe status or check suite Mac build_tests_3_4 has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2021-07-15T19:26:05Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_long_running_tests_3_5 has failed. Please fix the issues identified (or deflake) before re-applying this label.\nThe status or check suite Mac build_tests_3_4 has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2021-07-15T20:31:08Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_long_running_tests_3_5 has failed. Please fix the issues identified (or deflake) before re-applying this label.\nThe status or check suite Mac build_tests_3_4 has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2021-07-15T21:36:09Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_long_running_tests_3_5 has failed. Please fix the issues identified (or deflake) before re-applying this label.\nThe status or check suite Mac build_tests_3_4 has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2021-07-15T22:41:04Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_long_running_tests_3_5 has failed. Please fix the issues identified (or deflake) before re-applying this label.\nThe status or check suite Mac build_tests_3_4 has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2021-07-15T23:46:08Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_long_running_tests_3_5 has failed. Please fix the issues identified (or deflake) before re-applying this label.\nThe status or check suite Mac build_tests_3_4 has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2021-07-16T00:51:04Z"
            },
            {
                "author": "engine-flutter-autoroll",
                "bodyText": "Commit queue failed; closing this roll.",
                "createdAt": "2021-07-16T01:16:11Z"
            }
        ],
        "commentCount": 37
    },
    {
        "number": 75472,
        "title": "Support Scribble Handwriting",
        "author": "Jami Couch",
        "state": "MERGED",
        "closedAt": "2022-01-11T19:00:13Z",
        "createdAt": "2021-02-05T02:46:57Z",
        "comments": [
            {
                "author": "fbcouch",
                "bodyText": "Thank you for the PR and great work! Left some initial feedback and questions.\nAn additional question regarding the UIIndirectScribbleInteractionDelegate protocol:\nwhen does UIKit call func indirectScribbleInteraction(UIInteraction, frameForElement: Self.ElementIdentifier) -> CGRect? Is it always immediately after one of the async calls (func indirectScribbleInteraction(UIInteraction, requestElementsIn: CGRect, completion: ([Self.ElementIdentifier]) -> Void) or func indirectScribbleInteraction(UIInteraction, focusElementIfNeeded: Self.ElementIdentifier, referencePoint: CGPoint, completion: ((UIResponder & UITextInput)?) -> Void))? I'd like to understand how much information we would have to send to the engine every frame.\n\nI believe UIKit calls func indirectScribbleInteraction(UIInteraction, requestElementsIn: CGRect, completion: ([Self.ElementIdentifier]) -> Void) and waits for the completion handler. Then it calls func indirectScribbleInteraction(UIInteraction, frameForElement: Self.ElementIdentifier) -> CGRect. Since I have func indirectScribbleInteraction(UIInteraction, shouldDelayFocusForElement: Self.ElementIdentifier) -> Bool always returning true, it waits for a pause in the user input before calling func indirectScribbleInteraction(_ interaction: UIInteraction, focusElementIfNeeded elementIdentifier: Self.ElementIdentifier, referencePoint focusReferencePoint: CGPoint, completion: @escaping ((UIResponder & UITextInput)?) -> Void)\nI don't think we're sending info to the engine on every frame during the indirect interaction now that I moved that to the framework side. Once the input is focused, we do calculate the selection boxes every frame, but we also cache those on the framework side so that they only actually get sent to the engine when changed.",
                "createdAt": "2021-02-11T20:19:34Z"
            },
            {
                "author": "LongCatIsLooong",
                "bodyText": "Sorry for the delay I'll take a look tonight.",
                "createdAt": "2021-02-23T00:16:39Z"
            },
            {
                "author": "fbcouch",
                "bodyText": "No problem! I actually have an idea for how to do the hit testing thing, just haven't had a chance to cherry pick that into the PR branch. That's here: twinsunllc@0dfa712#diff-f5f93c879cef9a102adbf148583de9f3d9a05f9678fdcad7bde106f62200bb34R2947",
                "createdAt": "2021-02-23T04:30:30Z"
            },
            {
                "author": "fbcouch",
                "bodyText": "@LongCatIsLooong I think I have addressed your feedback except for a couple of items:\n\n#75472 (comment) - not sure what to do here\n#75472 (comment) - is there a way to test this? I believe Scribble only supports English and Chinese, so I'm not sure if we would run into those things\n\nI also added an implementation for insertTextPlaceholder and removeTextPlaceholder coming from the engine side. PencilKit uses those to accomplish the Insert scribble method where you can long press with the pencil to get some extra space to write in.\nLet me know your thoughts there. I have some merge conflicts now \u2013 I'm hoping this is close, but I'll wait to get your thumbs up before rebasing this onto the current master (or perhaps the last green commit on master?) and marking it as ready for review.",
                "createdAt": "2021-03-10T22:02:01Z"
            },
            {
                "author": "fbcouch",
                "bodyText": "@LongCatIsLooong @justinmc @goderbauer I believe I've addressed all of the comments here, let me know if you see anything else! Thanks!",
                "createdAt": "2021-06-04T18:52:43Z"
            },
            {
                "author": "fbcouch",
                "bodyText": "@LongCatIsLooong @justinmc @goderbauer Just checking in here if there are any more changes needed. It looks like there are some merge conflicts now, so if everything looks good, I can clean those up and hopefully we can get this merged \ud83d\ude04",
                "createdAt": "2021-06-28T15:01:19Z"
            },
            {
                "author": "fbcouch",
                "bodyText": "@justinmc Thanks for your comments, I'll take a look through those individually \u2013 I have some memory management stuff to clean up on the engine side as well.\nYes, unfortunately there's no simulator support, so you will need a physical iPad with iPadOS 14 and a Pencil.",
                "createdAt": "2021-07-01T02:14:18Z"
            },
            {
                "author": "fbcouch",
                "bodyText": "@justinmc I think I made all the changes you requested / responded to questions. Let me know if I missed anything",
                "createdAt": "2021-07-01T20:50:43Z"
            },
            {
                "author": "blasten",
                "bodyText": "@fbcouch Awesome work! I was wondering if there's a design doc that provides an overview of this feature?  framework <-> engine interactions, etc...",
                "createdAt": "2021-07-01T22:59:08Z"
            },
            {
                "author": "fbcouch",
                "bodyText": "@blasten There isn't that I know of, but I can try to put one together if that would be helpful",
                "createdAt": "2021-07-02T03:07:00Z"
            },
            {
                "author": "blasten",
                "bodyText": "It would definitely help for future considerations. We have a template on https://flutter.dev/go/template",
                "createdAt": "2021-07-02T04:22:10Z"
            },
            {
                "author": "fbcouch",
                "bodyText": "@blasten\n\nIt would definitely help for future considerations. We have a template on https://flutter.dev/go/template\n\nAll right, I have a first draft of that here: https://docs.google.com/document/d/1mjQbsSRQnHuAgMNdouaSgTS-Xv-w57fdKfOUUafWpRo",
                "createdAt": "2021-07-12T14:56:31Z"
            },
            {
                "author": "blasten",
                "bodyText": "Awesome! Thanks for sharing",
                "createdAt": "2021-07-12T18:51:32Z"
            },
            {
                "author": "fbcouch",
                "bodyText": "@justinmc I merged in master, looks like customer_testing-linux is failing with a different problem now, looks to be something to do with version resolving...do you have any idea why that would break here but not on master (I assume it is working on master)?",
                "createdAt": "2021-08-19T21:35:21Z"
            },
            {
                "author": "justinmc",
                "bodyText": "@fbcouch That failure seems to have nothing to do with the PR...  I tried rerunning it.  If it doesn't go green, could you try merging in master again?  Maybe you just got a bad commit or something.",
                "createdAt": "2021-08-23T22:30:08Z"
            },
            {
                "author": "fbcouch",
                "bodyText": "@justinmc I am at a loss for what that customer_testing-linux failure is about. I tried merging master a couple times, and still no luck",
                "createdAt": "2021-08-30T21:43:59Z"
            },
            {
                "author": "justinmc",
                "bodyText": "@fbcouch FYI there is a conflict now.\nI've posted on hackers-infra on Discord to try to get some help with this failure.  I've seen similar failures, I don't think it's due to anything in this PR.  I have fixed similar failures by squashing all commits into one, but I don't want to make you do that unless we have to.",
                "createdAt": "2021-09-15T00:26:46Z"
            },
            {
                "author": "justinmc",
                "bodyText": "From Discord, it seems like the best solution here is to rebase with master.  That should get customer_testing-linux to pass.  Merge commits won't fix it.",
                "createdAt": "2021-09-15T16:40:33Z"
            },
            {
                "author": "fbcouch",
                "bodyText": "@justinmc Thanks, that fixed the customer_testing-linux step! Unfortunately now some web tests are failing \ud83d\ude29 ...looks like some timeouts on dragging stuff, so not sure what that's about.",
                "createdAt": "2021-09-16T03:06:44Z"
            },
            {
                "author": "justinmc",
                "bodyText": "Everything is green now!  You've got some conflicts to fix though.",
                "createdAt": "2021-09-22T21:44:28Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 3 new digest(s) on patchset 43.\nView them at https://flutter-gold.skia.org/cl/github/75472",
                "createdAt": "2021-10-18T19:51:15Z"
            },
            {
                "author": "justinmc",
                "bodyText": "@fbcouch Can you try merging master into here?  I'm not sure why skia-gold is saying that there are changes to the goldens.  When I click the link it's empty, so maybe just a bug.",
                "createdAt": "2021-10-25T17:09:18Z"
            },
            {
                "author": "justinmc",
                "bodyText": "The engine PR is merged \ud83c\udf89 .  Let's wait for that to be rolled into the framework and then this can be merged.",
                "createdAt": "2021-11-08T18:51:38Z"
            },
            {
                "author": "fbcouch",
                "bodyText": "@justinmc Great! Thanks for all your time giving feedback on this! (And @LongCatIsLooong and @goderbauer as well)",
                "createdAt": "2021-11-08T20:37:31Z"
            },
            {
                "author": "gaaclarke",
                "bodyText": "Friendly ping @justinmc, this was approved 20 days ago but hasn't been merged.",
                "createdAt": "2021-11-29T20:00:37Z"
            },
            {
                "author": "LongCatIsLooong",
                "bodyText": "@gaaclarke  Sorry for the delay I'm testing this out to see how much performance impact this has, especially when the text field is large.",
                "createdAt": "2021-11-29T20:05:50Z"
            },
            {
                "author": "fbcouch",
                "bodyText": "@LongCatIsLooong Thanks for taking a look. Sorry it took a bit to come back to this, but I think I've addressed all of your comments.\nRegarding the breaking change process, I went ahead and added a default (empty) implementation for the new members, so those should be opt-in now for clients that want to implement Scribble (given that's an iPadOS-specific feature, I'm guessing there are plenty of people not interested in that). Is that a reasonable solution?",
                "createdAt": "2021-12-14T16:38:25Z"
            },
            {
                "author": "gaaclarke",
                "bodyText": "friendly ping @LongCatIsLooong",
                "createdAt": "2022-01-04T22:16:23Z"
            },
            {
                "author": "LongCatIsLooong",
                "bodyText": "Just did some quick testing on an iPad Air 2. The _updateSelectionRects call seems to be slightly slower than paragraph layout but is still somewhat reasonable when there's very few characters in the text field:\n\n\n\ninitial text\n_updateSelectionRects roughly takes (ms)\n\n\n\n\n10 characters (\"helloworld\")\n0.6\n\n\n100 characters  (10 \"helloworld\"s)\n5\n\n\n1000 characters (100 \"helloworld\"s)\n60\n\n\n\nIn some edge cases this can cause janks I feel, for instance when there's a text field with autofocus on, and route transition animation to the route that contains the text field can be janky, especially when the text field has a lot of text.",
                "createdAt": "2022-01-06T00:27:40Z"
            },
            {
                "author": "LongCatIsLooong",
                "bodyText": "Is there a way for the developer to opt out of the feature? For instance say the app's targeted users' language isn't one of the supported languages (German, French, Spanish, Italian, and Portuguese atm), or the developer has performance concerns?",
                "createdAt": "2022-01-06T00:36:20Z"
            },
            {
                "author": "fbcouch",
                "bodyText": "@LongCatIsLooong There isn't currently. Do you have a suggestion on the best way to go about that? Perhaps a flag on EditableText to enable or disable scribble?",
                "createdAt": "2022-01-06T20:56:56Z"
            },
            {
                "author": "LongCatIsLooong",
                "bodyText": "Yeah I think that makes sense.",
                "createdAt": "2022-01-06T21:01:07Z"
            },
            {
                "author": "fbcouch",
                "bodyText": "@LongCatIsLooong I added that scribbleEnabled flag to EditableText, TextField, and CupertinoTextField. The checks are all failing on some jwt error right now, but hopefully those will pass once whatever the underlying issue is fixed.",
                "createdAt": "2022-01-07T02:43:39Z"
            },
            {
                "author": "fbcouch",
                "bodyText": "@LongCatIsLooong Thanks! I added a note to that effect, and rebasing onto master fixed the checks!",
                "createdAt": "2022-01-11T16:12:51Z"
            },
            {
                "author": "LongCatIsLooong",
                "bodyText": "Let's try merging this!",
                "createdAt": "2022-01-11T18:58:15Z"
            },
            {
                "author": "zhoushuangjian001",
                "bodyText": "Flutter 3.7 version, ipad device, any page can be triggered, apple pencil's handwriting function",
                "createdAt": "2023-01-31T02:51:41Z"
            }
        ],
        "commentCount": 36
    },
    {
        "number": 51656,
        "title": "Set AA flag for painting images",
        "author": "Yuqian Li",
        "state": "MERGED",
        "closedAt": "2020-04-09T02:02:05Z",
        "createdAt": "2020-02-28T19:35:08Z",
        "comments": [
            {
                "author": "fluttergithubbot",
                "bodyText": "It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption to this rule, contact Hixie.\nReviewers: Read the Tree Hygiene page and make sure this patch meets those guidelines before LGTMing.",
                "createdAt": "2020-02-28T19:35:10Z"
            },
            {
                "author": "liyuqian",
                "bodyText": "@Piinks : I'm expecting to see some golden image differences for this change. If somehow there's no golden test that covers a rotated image, can you please create a PR that adds such a golden test? #30710 (comment) has a sample code.",
                "createdAt": "2020-02-28T19:37:13Z"
            },
            {
                "author": "Piinks",
                "bodyText": "First glance: I don't think we have any golden file tests that render actual images. Is that pertinent to the test you are looking for?",
                "createdAt": "2020-02-28T20:18:03Z"
            },
            {
                "author": "goderbauer",
                "bodyText": "Are there any negative implications from always setting this to true? Should it be configurable?",
                "createdAt": "2020-02-28T20:20:33Z"
            },
            {
                "author": "liyuqian",
                "bodyText": "@Piinks : an dummy image (e.g., all blue pixels) would be sufficient to test the AA behavior.\n@goderbauer : I'd expect the performance impact to be similar to drawing a rect with or without AA. Most of our widgets (e.g., Container) would draw something (paths, rects, rrects...) in AA by default without any configurable switches. So I don't think adding an AA switch here is critical. Of course, making it configurable would be better if we ignore the API maintenance cost (which I don't think there's much). CC @Hixie to see if we'd like to expose the AA switch on an Image widget.",
                "createdAt": "2020-02-28T20:51:15Z"
            },
            {
                "author": "Piinks",
                "bodyText": "@Piinks : an dummy image (e.g., all blue pixels) would be sufficient to test the AA behavior.\n\nOk, are you wanting to have a test land on master first so you can verify there is a change? Otherwise, you can add the test as part of this change.",
                "createdAt": "2020-02-28T21:15:08Z"
            },
            {
                "author": "Piinks",
                "bodyText": "you can add the test as part of this change.\n\nActually that may be best to include in this change, rather than checking in a test that may or may not be affected by this.",
                "createdAt": "2020-02-28T21:16:46Z"
            },
            {
                "author": "liyuqian",
                "bodyText": "@Piinks : yes, it would be nice if you can land a PR before this PR gets merged so we'll see the difference!",
                "createdAt": "2020-02-28T21:16:51Z"
            },
            {
                "author": "Piinks",
                "bodyText": "@Piinks : yes, it would be nice if you can land a PR before this PR gets merged so we'll see the difference!\n\nAnd if it doesn't make a difference? I would recommend adding the test as part of this change. You can test locally that the bug is reproduced and see the visual diff with your patch applied to confirm. That seems inline with write test fix bug ?",
                "createdAt": "2020-02-28T21:19:50Z"
            },
            {
                "author": "liyuqian",
                "bodyText": "@Piinks : sure, I'll do that. That probably would take a few days as I also need to clear some other tasks in the queue first. Meanwhile, I think a separate PR may also make sense as the test should reveal an aliased rectangle (or it shouldn't be merged), and this PR should fix that aliasing in presubmits (or this PR shouldn't be merged).",
                "createdAt": "2020-02-28T21:27:53Z"
            },
            {
                "author": "dnfield",
                "bodyText": "It would probably be worth checking if this impacts some golden test in Google.\nIf so, this is a breaking change, and I believe we'd have to expose a flag for it so it can be rolled into Google without manual intervention.",
                "createdAt": "2020-02-29T05:03:13Z"
            },
            {
                "author": "liyuqian",
                "bodyText": "Thank you @dnfield for the remind! I'm curious what the current procedure is for those AA changes. For example, if a Skia roll changes AA and require golden image updates from Google, does that constitute a breaking change, and how do we roll it automatically? My old experience (which might be obsolete now) is to just approve those golden changes along the Google roll, and not file any breaking change announcements...",
                "createdAt": "2020-03-01T00:13:32Z"
            },
            {
                "author": "dnfield",
                "bodyText": "@Hixie would know but I believe we treat skia breakages differently.\nI think this change is definitely worth making to be clear",
                "createdAt": "2020-03-01T00:31:06Z"
            },
            {
                "author": "Hixie",
                "bodyText": "For some reason it looks like the public copy of the breaking change policy (https://github.com/flutter/flutter/wiki/Tree-hygiene#handling-breaking-changes) doesn't actually mention this, but the intent is that upstream dependencies (and PRs that roll those dependencies) aren't beholden to our breaking change policy currently.",
                "createdAt": "2020-03-01T23:50:21Z"
            },
            {
                "author": "linxuebin1990",
                "bodyText": "@liyuqian  I have an idea. This #30710  problem only occurs when we rotate (or skew) the image\uff0c not translate or scale. We can check the matrix of the canvas first, and turn on anti-aliasing only when there is a rotation (or skew) operation. The same can be applied to rectangle decoration, also can fix #14288.\nI find code in SkMatrix.h , as follows\nenum TypeMask {\n        kIdentity_Mask    = 0,    //!< identity SkMatrix; all bits clear\n        kTranslate_Mask   = 0x01, //!< translation SkMatrix\n        kScale_Mask       = 0x02, //!< scale SkMatrix\n        kAffine_Mask      = 0x04, //!< skew or rotate SkMatrix\n        kPerspective_Mask = 0x08, //!< perspective SkMatrix\n    };\n// ...\n bool isTranslate() const { return !(this->getType() & ~(kTranslate_Mask)); }\n\nWe can add a function as follows:\nbool isSkewOrRotate() const {return this->getType() & kAffine_Mask;}",
                "createdAt": "2020-03-03T12:00:44Z"
            },
            {
                "author": "liyuqian",
                "bodyText": "@linxuebin1990 : thank you for the suggestion! Unfortunately, even if we only enable AA with rotation, it's might still be a breaking change according to our current policy.\nNevertheless, I think the SkMatrix::isSkewOrRotate might be helpful regardless of how we handle the PR here. Please feel free to propose that to https://groups.google.com/g/skia-discuss.",
                "createdAt": "2020-03-03T17:50:57Z"
            },
            {
                "author": "goderbauer",
                "bodyText": "@liyuqian Did you have a chance to add a golden test for this?",
                "createdAt": "2020-03-11T21:43:55Z"
            },
            {
                "author": "liyuqian",
                "bodyText": "@goderbauer @Piinks : I'm having some troubles with Image golden test. Please see the newest commit. I can see a nonempty golden image if ui.Image is used, but not when Image.memory is used, although they use the same bytes.",
                "createdAt": "2020-03-12T19:08:41Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected one or more untriaged digests on patchset 2.\nPlease triage them at https://flutter-gold.skia.org/search?issue=51656.",
                "createdAt": "2020-03-12T19:15:21Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "Golden file changes have been found for this pull request. Click here to view and triage (e.g. because this is an intentional change).\nChanges to golden files are considered breaking changes, so consult Handling Breaking Changes to proceed. While there are exceptions to this rule, if this patch modifies an existing golden file, it is probably not an exception. Only new golden file tests, or downstream changes like those from skia updates are considered non-breaking.\nFor more guidance, visit Writing a golden file test for package:flutter.\nReviewers: Read the Tree Hygiene page and make sure this patch meets those guidelines before LGTMing.\nChanges reported for pull request #51656 at sha c509f684408e55f0b5dafa453562dc7ddb6673bf",
                "createdAt": "2020-03-12T19:51:15Z"
            },
            {
                "author": "Piinks",
                "bodyText": "@goderbauer @Piinks : I'm having some troubles with Image golden test. Please see the newest commit. I can see a nonempty golden image if ui.Image is used, but not when Image.memory is used, although they use the same bytes.\n\nIIRC I've seen people design golden file tests with images by precaching them, let me find an example.",
                "createdAt": "2020-03-12T23:00:42Z"
            },
            {
                "author": "Piinks",
                "bodyText": "Here is an example: https://github.com/flutter/flutter/pull/41137/files",
                "createdAt": "2020-03-12T23:03:07Z"
            },
            {
                "author": "liyuqian",
                "bodyText": "@Piinks : thanks! precacheImage solved the problem. Please review the updated test and isAntiAlias flag.",
                "createdAt": "2020-03-20T22:25:28Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected one or more untriaged digests on patchset 2.\nPlease triage them at https://flutter-gold.skia.org/search?issue=51656.",
                "createdAt": "2020-03-20T22:30:53Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "Golden file changes remain available for triage from new commit, Click here to view.\nChanges reported for pull request #51656 at sha 1948bf6",
                "createdAt": "2020-03-20T23:39:19Z"
            },
            {
                "author": "liyuqian",
                "bodyText": "@yjbanov : my rotated image golden test consistently times out on web. Do you have any idea what might go wrong?",
                "createdAt": "2020-03-24T22:40:38Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected one or more untriaged digests on patchset 3.\nPlease triage them at https://flutter-gold.skia.org/search?issue=51656.",
                "createdAt": "2020-03-25T22:17:18Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected one or more untriaged digests on patchset 3.\nPlease triage them at https://flutter-gold.skia.org/search?issue=51656.",
                "createdAt": "2020-03-25T22:19:18Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "Golden file changes remain available for triage from new commit, Click here to view.\nChanges reported for pull request #51656 at sha a35584d",
                "createdAt": "2020-03-25T22:47:16Z"
            },
            {
                "author": "liyuqian",
                "bodyText": "@hterkelsen : this test always times out on Flutter web. My guess is that Flutter web probably skipped ui.decodeImageFromPixels call so the completer inside is never completed. What's your thought and how should I fix it?",
                "createdAt": "2020-03-25T23:43:41Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected one or more untriaged digests on patchset 4.\nPlease triage them at https://flutter-gold.skia.org/search?issue=51656.",
                "createdAt": "2020-04-07T05:51:25Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "Golden file changes are available for triage from new commit, Click here to view.\nChanges reported for pull request #51656 at sha ea2fbe5",
                "createdAt": "2020-04-07T06:28:17Z"
            },
            {
                "author": "liyuqian",
                "bodyText": "@hterkelsen : I've directly written the PNG bytes into a constant int list as you suggested. However, the web test would still timeout if await precacheImage is called. Is that expected?",
                "createdAt": "2020-04-07T18:42:55Z"
            },
            {
                "author": "liyuqian",
                "bodyText": "Discussed with @hterkelsen offline. We agreed that we shall proceed with merging this PR, and maybe come back later once he figured out why precacheImage failed on web.",
                "createdAt": "2020-04-08T17:56:14Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected one or more untriaged digests on patchset 6.\nPlease triage them at https://flutter-gold.skia.org/search?issue=51656.",
                "createdAt": "2020-04-08T20:15:25Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "Golden file changes are available for triage from new commit, Click here to view.\nChanges reported for pull request #51656 at sha bb108d0",
                "createdAt": "2020-04-08T20:17:17Z"
            },
            {
                "author": "liyuqian",
                "bodyText": "It seems that the golden test on web is flaky as sometimes it generated empty images. Hence I'm going to disable the test on web instead of just skipping precacheImage.",
                "createdAt": "2020-04-08T21:18:56Z"
            }
        ],
        "commentCount": 37
    },
    {
        "number": 113637,
        "title": "Speed up first asset load by encoding asset manifest in binary rather than JSON",
        "author": "Andrew Kolos",
        "state": "MERGED",
        "closedAt": "2022-12-05T18:39:10Z",
        "createdAt": "2022-10-18T19:48:33Z",
        "comments": [
            {
                "author": "andrewkolos",
                "bodyText": "Right now, I've somehow made first manifest load slower rather than faster (according to the benchmark), so I'm trying to figure that out.",
                "createdAt": "2022-10-24T18:02:10Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "(I'll take a look locally and see what it looks like too)",
                "createdAt": "2022-10-24T18:05:44Z"
            },
            {
                "author": "andrewkolos",
                "bodyText": "Oh yeah, my apologies for leaving that out. I'm running the new benchmark, setting the number of iterations to 1. On master, the benchmark completes in about ~125ms, and on this branch it runs in ~140ms. This is on a Samsung Galaxy S9. IIRC from Friday, the new method is faster, but only with a higher number of iterations.",
                "createdAt": "2022-10-24T18:22:16Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Its possible that with 1 iteration you're mostly measuring the time to load the asset. Since both are about the same size, perhaps you should move that out of the benchmark?",
                "createdAt": "2022-10-24T18:25:45Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Are you loading the bytes outside of the benchmark in the JSON case: https://github.com/flutter/flutter/blob/master/dev/benchmarks/microbenchmarks/lib/foundation/decode_and_parse_asset_manifest.dart#L23",
                "createdAt": "2022-10-24T18:28:49Z"
            },
            {
                "author": "andrewkolos",
                "bodyText": "@jonahwilliams. LUCI is unhappy with me including the test asset manifest (money_asset_manifest.bin) because it's not UTF8. https://logs.chromium.org/logs/flutter/buildbucket/cr-buildbucket/8799564695396497569/+/u/Analyze/analyze/test_stdout. I see two ways forward, but I'm not thrilled by either of them:\n\nMove the file to some other repo as the error message suggests.\nInclude the asset manifest file in some other format (e.g. go back to using JSON) and then, when setting up the test, read it and re-encode it in the standard message format.\n\nDo you have any thoughts or other options I am not aware of?",
                "createdAt": "2022-10-24T20:19:26Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "You should add an exception to the analysis test - we have some other examples of doing it. The intention of that check is to prevent folks from checking in large binary assets accidentally\nsee dev/bots/test.dart",
                "createdAt": "2022-10-24T20:21:48Z"
            },
            {
                "author": "andrewkolos",
                "bodyText": "Talked with @jonahwilliams yesterday and wanted to summarize my takeaways for my own record. Also, while I'm happy with the current approach in the change, I can't help but (re)ask some questions.\nThis change will deprecate the AssetBundle.loadStructuredData API, replacing it with a more general form that operates directly on ByteData, loadStructuredDataBinary. If we are OK with deprecating loadStructuredData, I can't help but think about how loadStructuredData might be currently used and whether or not it should have ever been exposed to begin with. As I understand it, the primary intent of loadString and loadStructuredData is to provide built-in caching of string and structured data (e.g. JSON) assets respectively (loadString also conveniently provides UTF-8 decoding). The idea to me, then, is if there are disparate codebases that access the same (text/structured data) asset, then the app will benefit from caching. I still am not sure about the idea (how often are disparate codebases requesting text/JSON assets?), but changing it now could risk unexpected performance degradation for not much gain, so I don't think it's worth worrying about now.\nCaching aside, outside of the tool itself, is there a known use case of loadStructuredData aside from reading the asset manifest (e.g. google fonts for figuring it out if it can avoid loading fonts over the network because they are already available)?\n\nIf there is no such use case, would the google fonts use case be better as something we explicitly support with additional APIs (e.g. an API that determines whether or not a font with a particular name is available)? I ask this because the idea of external code loading and inspecting AssetManifest.json directly feels like reverse-engineering. If we plan to deprecate loadStructuredData and thus break that means of accessing AssetManifest.json, then, I feel like, while we are at it, we may as well improve the API here so folks don't have to reach into flutter internals like AssetManifest.json (or AssetManifest.bin).\nIf there is such a use case, then do we really want to deprecate loadStructuredData? If folks, for example, want to include JSON (or similar) files as assets, then why inconvenience them by having them switch to loadStructuredDataBinary and then prepend UTF8 decoding into their parser function? Why not just keep both APIs around?",
                "createdAt": "2022-10-27T03:22:43Z"
            },
            {
                "author": "andrewkolos",
                "bodyText": "Heya @Hixie. Per this code comment mentioning you in analyze.dart, I wanted to ask you about adding a new file to _legacyBinaries. For the purpose of benchmarking, this PR adds an asset manifest file (which is now binary rather than JSON with this change). This file is a little under 120KB. Do you have any reservations about me adding this file?",
                "createdAt": "2022-10-28T15:25:21Z"
            },
            {
                "author": "Hixie",
                "bodyText": "We shouldn't add a 120KB binary file. Binary files end up being very expensive for every user of Flutter forever, because of how we distribute our code. We have other repositories for that kind of thing. In this case though it seems like it would be even better to generate the manifest on the fly for the test? These manifest files should never be checked in to any repos in normal production environments right?\n(Side note, we should presumably add this file to our default .gitignore?)",
                "createdAt": "2022-10-31T03:10:31Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "I was sort of hoping we could get away with it since most of the data is actually utf8 encoded strings and in theory should have the same diff behavior as a large file filled with strings. If not, thats OK - we can change the app under test to generate the synthetic manfiest by encoding it as JSON and then converting it to SMC on the fly.\nWe don't need to add this file to the .gitignore because its normally generated as a side effect of the build and not user visable.",
                "createdAt": "2022-10-31T17:01:05Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "actually @andrewkolos you should probably be sure to not delete the original JSON file, otherwise we won't be able to modify the binary SMC file without writing a separate helper program to parse it again",
                "createdAt": "2022-10-31T17:01:49Z"
            },
            {
                "author": "Hixie",
                "bodyText": "I was sort of hoping we could get away with it since most of the data is actually utf8 encoded strings and in theory should have the same diff behavior as a large file filled with strings.\n\nIt's not at all clear to me how well that would work, binary git deltification is a bit of a mystery to me. But in general, any large file is always a problem regardless, just because it's large.\n\nIf not, thats OK - we can change the app under test to generate the synthetic manfiest by encoding it as JSON and then converting it to SMC on the fly.\n\nHow was the synthetic data created in the first place?\n\nWe don't need to add this file to the .gitignore because it's normally generated as a side effect of the build and not user visible.\n\nIf it's already .gitignored by virtue of being put somewhere that's already in .gitignore then that's great.",
                "createdAt": "2022-11-01T21:55:29Z"
            },
            {
                "author": "Hixie",
                "bodyText": "Can we document this binary format?",
                "createdAt": "2022-11-01T21:57:11Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Yes, we should document the format (at least starting here in the asset code), including which keys we support today, and which ones we intend to add in the future",
                "createdAt": "2022-11-01T22:05:20Z"
            },
            {
                "author": "andrewkolos",
                "bodyText": "How was the synthetic data created in the first place?\n\nI took the existing asset manifest of an internal app (money) and wrote an ad-hoc program to obfuscate it (though I don't believe the data to be sensitive in any way) and convert it to the binary format we will use going forward.",
                "createdAt": "2022-11-01T22:15:16Z"
            },
            {
                "author": "andrewkolos",
                "bodyText": "I'm updating more tests now. I should do a pass myself, but if you are eager to review then go for it!\nQuestion: For the tests involving asset manifests, should we temporarily keep the tests involving AssetManifest.json and just make duplicates for the binary version? I feel like that's the right thing to do (given that the json is being deprecated--not removed), but wanted to run it by you before I make the effort.\nAlso FYI I updated the manifest format so that each asset is no longer a variant of itself--to reduce parsing time.\nThat is {\"images/foo.jpg\":[\"images/foo.jpg\"] is now {\"images/foo.jpg\":[]}.\nThe default dpr image resolution logic should remain unchanged (i.e. if targeting a dpr if 1.0, we should still pick the main/default version of the asset). This should be fine unless we want room to one day make the keys only logical/symbolic ones (i.e. they no longer represent actual file locations).",
                "createdAt": "2022-11-03T18:07:40Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Question: For the tests involving asset manifests, should we temporarily keep the tests involving AssetManifest.json and just make duplicates for the binary version? I feel like that's the right thing to do (given that the json is being deprecated--not removed), but wanted to run it by you before I make the effort.\n\nWhat would be the value of the benchmark then? If the old JSON benchmark regressed would you drop what you are doing to fix it? Or would we say \"well, we're moving away from this anyway, and we know its slow \ud83e\udd37\u200d\u2642\ufe0f \". (Probably the latter).\nEverything else SGTM.",
                "createdAt": "2022-11-03T18:23:14Z"
            },
            {
                "author": "andrewkolos",
                "bodyText": "Question: For the tests involving asset manifests, should we temporarily keep the tests involving AssetManifest.json and just make duplicates for the binary version? I feel like that's the right thing to do (given that the json is being deprecated--not removed), but wanted to run it by you before I make the effort.\n\nWhat would be the value of the benchmark then? If the old JSON benchmark regressed would you drop what you are doing to fix it? Or would we say \"well, we're moving away from this anyway, and we know its slow \ud83e\udd37\u200d\u2642\ufe0f \". (Probably the latter).\nEverything else SGTM.\n\nI wasn't referring to the benchmark. I'm referring to tests like those found in asset_bundle_package_test.dart and asset_bundle_variant_test.dart that make sure the manifests we are generating contain the correct data.",
                "createdAt": "2022-11-03T18:25:10Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Ah yes, in that case definitely keep them around. We'll delete them eventually",
                "createdAt": "2022-11-03T18:25:59Z"
            },
            {
                "author": "andrewkolos",
                "bodyText": "@jonahwilliams I'm looking at this test I broke: \n  \n    \n      flutter/packages/flutter/test/widgets/image_resolution_test.dart\n    \n    \n        Lines 262 to 271\n      in\n      56c4e3c\n    \n  \n  \n    \n\n        \n          \n             testWidgets('Image for device pixel ratio 1.0, with no main asset', (WidgetTester tester) async { \n        \n\n        \n          \n               const String manifest = ''' \n        \n\n        \n          \n               { \n        \n\n        \n          \n                 \"assets/image.png\" : [ \n        \n\n        \n          \n                   \"assets/1.5x/image.png\", \n        \n\n        \n          \n                   \"assets/2.0x/image.png\", \n        \n\n        \n          \n                   \"assets/3.0x/image.png\", \n        \n\n        \n          \n                   \"assets/4.0x/image.png\" \n        \n\n        \n          \n                 ] \n        \n\n        \n          \n               } \n        \n    \n  \n\n\nThis test was added with #11564. The idea behind it makes enough sense, but when I try to load an image that only has variants, the result is an error (on stable).\n\nrepro (macos)\nI try to load blue_square.jpg after deleting it. 2x/blue_square.jpg is still available, but it isn't used.\nRepro link\n\n\nTo your knowledge, is it possible for an image to only have variants? I'm just curious.\nedit: I think the only way this could happen is for someone to mess with AssetManifest.json as a post-build step, because otherwise the map entry in the test would never even exist.",
                "createdAt": "2022-11-04T01:44:30Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "I've not tried. its possible that this was implemented and then broke and some point in the future.",
                "createdAt": "2022-11-04T03:28:18Z"
            },
            {
                "author": "andrewkolos",
                "bodyText": "Ready for review again. I held off on running flutter upgrade-packages since that would muddy up the diff. Let me know if some of the diffs of the test files prove to be a bit much. I prioritized being able to quickly remove tests that are no longer needed once AssetManifest.json is gone for good.",
                "createdAt": "2022-11-04T06:12:52Z"
            },
            {
                "author": "andrewkolos",
                "bodyText": "@jonahwilliams Could I borrow your experience with the Completer API? My latest change adds logic for falling back AssetManifest.json in the case AssetManifest.bin is missing (code). However, it seems to only work the first time an image is loaded (e.g. load a route with an image on it, pop the route, nav into it again and the image won't show up).",
                "createdAt": "2022-11-08T07:33:22Z"
            },
            {
                "author": "andrewkolos",
                "bodyText": "Could I borrow your experience with the Completer API? My latest change adds logic for falling back AssetManifest.json in the case AssetManifest.bin is missing (code). However, it seems to only work the first time an image is loaded (e.g. load a route with an image on it, pop the route, nav into it again and the image won't show up).\n\nThe issue appears to stem from use of onError. If I comment out the onError chain for falling back to the json asset manifest, it appears to work again.\nedit: Replacing the onError with an identity then that has an onError argument appears to work, even if it doesn't look pretty.",
                "createdAt": "2022-11-08T18:47:04Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "@andrewkolos I think the google testing shard is stuck. You'll need to investigate and/or ask for help on what is going on",
                "createdAt": "2022-11-11T23:29:19Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "google testing is stuck, i've asked @andrewkolos to click submit",
                "createdAt": "2022-11-14T22:51:48Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "actually turns out its not stuck, we just messed up applying the fix!",
                "createdAt": "2022-11-14T22:59:24Z"
            },
            {
                "author": "andrewkolos",
                "bodyText": "@jonahwilliams See previous commit.\n\n  \n    \n      flutter/packages/flutter/lib/src/painting/image_resolution.dart\n    \n    \n        Lines 294 to 302\n      in\n      eed94ec\n    \n  \n  \n    \n\n        \n          \n           // .onError((Object? error, StackTrace stackTrace) => \n        \n\n        \n          \n           //     chosenBundle.loadStructuredData(_kLegacyAssetManifestFilename, \n        \n\n        \n          \n           //         (String data) => SynchronousFuture<_AssetManifest>(_LegacyAssetManifest.fromJsonString(data))) \n        \n\n        \n          \n           // ) \n        \n\n        \n          \n           .then((_AssetManifest assetManifest) => assetManifest, \n        \n\n        \n          \n             onError: (Object? error, StackTrace stackTrace) => \n        \n\n        \n          \n               chosenBundle.loadStructuredData(_kLegacyAssetManifestFilename, \n        \n\n        \n          \n                 (String data) => SynchronousFuture<_AssetManifest>(_LegacyAssetManifest.fromJsonString(data))) \n        \n\n        \n          \n           ) \n        \n    \n  \n\n\nThe commented out onError doesn't work as I expect (see test failures in image_resolution_test.dart), yet the \"identity then\" with an onError argument that I'm currently employing does \ud83d\ude15",
                "createdAt": "2022-11-15T19:27:06Z"
            },
            {
                "author": "christopherfujino",
                "bodyText": "Looks like after merging, this branch is still upgrading package:archive past the pin I added. I would suggest reverting all the pubspec.yaml changes from this branch relative to upstream (i.e. my change), and then re-adding the new dependency and then re-running: flutter update-package --force-upgrade.",
                "createdAt": "2022-11-18T20:37:22Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "We've branched and this should be safe to land.",
                "createdAt": "2022-12-05T17:40:32Z"
            },
            {
                "author": "andrewkolos",
                "bodyText": "I was hoping FRoB would be fixed soon so that Google testing could finish, but testing did pass three commits ago, so I will go ahead and land this.",
                "createdAt": "2022-12-05T17:48:14Z"
            },
            {
                "author": "andrewkolos",
                "bodyText": "Manually merged since FRoB is still down.",
                "createdAt": "2022-12-05T18:39:26Z"
            },
            {
                "author": "zanderso",
                "bodyText": "SkiaPerf is reporting a nice improvement here: https://flutter-flutter-perf.skia.org/e/?begin=1670172924&end=1670276486&keys=X2c1c806b3584886f3337add1a572b1ea&num_commits=50&request_type=1&xbaroffset=32385",
                "createdAt": "2022-12-05T21:54:44Z"
            },
            {
                "author": "christopherfujino",
                "bodyText": "SkiaPerf is reporting a nice improvement here: https://flutter-flutter-perf.skia.org/e/?begin=1670172924&end=1670276486&keys=X2c1c806b3584886f3337add1a572b1ea&num_commits=50&request_type=1&xbaroffset=32385\n\nWoohoo!",
                "createdAt": "2022-12-06T18:16:11Z"
            }
        ],
        "commentCount": 35
    },
    {
        "number": 43760,
        "title": "Fix the issue of Android add2app build fails on Android when assets are read-only",
        "author": "shihchanghsiungsonos",
        "state": "CLOSED",
        "closedAt": "2020-02-03T22:52:30Z",
        "createdAt": "2019-10-29T22:17:19Z",
        "comments": [
            {
                "author": "blasten",
                "bodyText": "@shihchanghsiungsonos This LGTM. Would you be able to modify https://github.com/flutter/flutter/blob/master/dev/devicelab/bin/tasks/module_test.dart to make some assets read only?",
                "createdAt": "2019-10-31T17:27:14Z"
            },
            {
                "author": "shihchanghsiungsonos",
                "bodyText": "@shihchanghsiungsonos This LGTM. Would you be able to modify https://github.com/flutter/flutter/blob/master/dev/devicelab/bin/tasks/module_test.dart to make some assets read only?\n\n\n@shihchanghsiungsonos This LGTM. Would you be able to modify https://github.com/flutter/flutter/blob/master/dev/devicelab/bin/tasks/module_test.dart to make some assets read only?\n\nDo you mean to make, for example, \"isolate_snapshot_data\" as read only in module_test.dart and run the test \"../../bin/cache/dart-sdk/bin/dart bin/run.dart -t module_test\"?",
                "createdAt": "2019-10-31T22:23:10Z"
            },
            {
                "author": "blasten",
                "bodyText": "Yes -- After this line, change the file permission to read only, then build again and verify that it currently fails and then with your fix, it passes.",
                "createdAt": "2019-11-01T01:05:08Z"
            },
            {
                "author": "xster",
                "bodyText": "@shihchanghsiungsonos let us know if you need any additional help with the tests for this PR",
                "createdAt": "2019-11-15T03:11:42Z"
            },
            {
                "author": "shihchanghsiungsonos",
                "bodyText": "@shihchanghsiungsonos let us know if you need any additional help with the tests for this PR\n\nThanks for the follow up @xster !\nSorry for the delay. I haven't ran this before.\nWhen I tried this comment:\n../../bin/cache/dart-sdk/bin/dart bin/run.dart -t module_test\nI am getting these errors:\nError: Could not resolve the package 'args' in 'package:args/args.dart'.\nError: Could not resolve the package 'path' in 'package:path/path.dart'.\nError: Could not resolve the package 'flutter_devicelab' in 'package:flutter_devicelab/framework/manifest.dart'.\nError: Could not resolve the package 'flutter_devicelab' in 'package:flutter_devicelab/framework/runner.dart'.\nError: Could not resolve the package 'flutter_devicelab' in 'package:flutter_devicelab/framework/utils.dart'.\nbin/run.dart:9:8: Error: Not found: 'package:args/args.dart'\nimport 'package:args/args.dart';\n       ^\nbin/run.dart:10:8: Error: Not found: 'package:path/path.dart'\nimport 'package:path/path.dart' as path;\n       ^\nbin/run.dart:12:8: Error: Not found: 'package:flutter_devicelab/framework/manifest.dart'\nimport 'package:flutter_devicelab/framework/manifest.dart';\n       ^\nbin/run.dart:13:8: Error: Not found: 'package:flutter_devicelab/framework/runner.dart'\nimport 'package:flutter_devicelab/framework/runner.dart';\n       ^\nbin/run.dart:14:8: Error: Not found: 'package:flutter_devicelab/framework/utils.dart'\nimport 'package:flutter_devicelab/framework/utils.dart';\n       ^\n\nIs there anything I need to make sure before running this test? Thanks for the help!",
                "createdAt": "2019-11-15T19:57:06Z"
            },
            {
                "author": "xster",
                "bodyText": "I don't think I've seen these issues so I'm not 100% sure but flutter update-packages could likely solve it if you run it at the Flutter repo's root.",
                "createdAt": "2019-11-15T21:06:03Z"
            },
            {
                "author": "shihchanghsiungsonos",
                "bodyText": "I don't think I've seen these issues so I'm not 100% sure but flutter update-packages could likely solve it if you run it at the Flutter repo's root.\n\nThank you! It fixes the errors. Will update once I verify the fix.",
                "createdAt": "2019-11-15T23:29:22Z"
            },
            {
                "author": "xster",
                "bodyText": "cool, good to hear. Thanks for your contribution.",
                "createdAt": "2019-11-16T00:24:33Z"
            },
            {
                "author": "shihchanghsiungsonos",
                "bodyText": "cool, good to hear. Thanks for your contribution.\n\nI don't have much luck.\nAfter these:\n        await exec(gradlewExecutable,\n          <String>['app:assembleDebug'],\n          environment: <String, String>{\n            'JAVA_HOME': javaHome,\n            'FLUTTER_ANALYTICS_LOG_FILE': analyticsOutputFile.path,\n          },\n        );\n\nI add line to exec 'chmod +r' to make flutter_assets/isolate_snapshot_data read only. But, always get file not found. what's the correct file path for flutter_assets/isolate_snapshot_data?\nThanks for the help!",
                "createdAt": "2019-11-16T07:51:27Z"
            },
            {
                "author": "shihchanghsiungsonos",
                "bodyText": "cool, good to hear. Thanks for your contribution.\n\nI don't have much luck.\nAfter these:\n        await exec(gradlewExecutable,\n          <String>['app:assembleDebug'],\n          environment: <String, String>{\n            'JAVA_HOME': javaHome,\n            'FLUTTER_ANALYTICS_LOG_FILE': analyticsOutputFile.path,\n          },\n        );\n\nI add line to exec 'chmod +r' to make flutter_assets/isolate_snapshot_data read only. But, always get file not found. what's the correct file path for flutter_assets/isolate_snapshot_data?\nThanks for the help!\n\nI found the path. But, change the file permission after await exec(gradlewExecutable is probably too late, since the apk has been created.\nI think @blasten 's suggestion to change the asset to read only within await exec(gradlewExecutable. what's the right line I should add to change asset's file permission before the apk is created. Thanks!",
                "createdAt": "2019-11-18T05:20:34Z"
            },
            {
                "author": "blasten",
                "bodyText": "@shihchanghsiungsonos what about adding a user read only .txt file to flutter_assets and then verify that the file copied into packageAssets.outputDir is user-readable and writable?  The output dir should be build/app/intermediates/merged_assets/<build-variant>/out/flutter_assets/.",
                "createdAt": "2019-12-05T18:22:01Z"
            },
            {
                "author": "shihchanghsiungsonos",
                "bodyText": "@shihchanghsiungsonos what about adding a user read only .txt file to flutter_assets and then verify that the file copied into packageAssets.outputDir is user-readable and writable? The output dir should be build/app/intermediates/merged_assets/<build-variant>/out/flutter_assets/.\n\nWill give it a try. Thanks!",
                "createdAt": "2019-12-06T16:20:42Z"
            },
            {
                "author": "zanderso",
                "bodyText": "@shihchanghsiungsonos Are you interested in continuing with this PR?",
                "createdAt": "2020-01-09T18:06:14Z"
            },
            {
                "author": "shihchanghsiungsonos",
                "bodyText": "@shihchanghsiungsonos Are you interested in continuing with this PR?\n\nYes. But, having problem to verify the way @blasten is asking.",
                "createdAt": "2020-01-09T22:43:32Z"
            },
            {
                "author": "shihchanghsiungsonos",
                "bodyText": "With the latest, I am seeing these errors when running the module_test:\n[module_test] [STDOUT] stderr: /private/var/folders/dz/89m7jll94sl27tqp1612sht1qx16hy/T/flutter_module_test.jKSft7/hello_host_app/app/src/main/java/io/flutter/add2app/MainActivity.java:9: error: package io.flutter.facade does not exist [module_test] [STDOUT] stderr: import io.flutter.facade.Flutter; [module_test] [STDOUT] stderr:                         ^ [module_test] [STDOUT] stderr: /private/var/folders/dz/89m7jll94sl27tqp1612sht1qx16hy/T/flutter_module_test.jKSft7/hello_host_app/app/src/main/java/io/flutter/add2app/MainActivity.java:16: error: cannot find symbol [module_test] [STDOUT] stderr:     setContentView(Flutter.createView(this, getLifecycle(), \"route1\")); [module_test] [STDOUT] stderr:                    ^",
                "createdAt": "2020-01-22T00:28:42Z"
            },
            {
                "author": "blasten",
                "bodyText": "@shihchanghsiungsonos how did you run the test?\nTo run the test, run cd <flutter-sdk>/dev/devicelab.  Then ../../bin/cache/dart-sdk/bin/dart bin/run.dart -t module_test",
                "createdAt": "2020-01-24T20:29:54Z"
            },
            {
                "author": "shihchanghsiungsonos",
                "bodyText": "@shihchanghsiungsonos This LGTM. Would you be able to modify https://github.com/flutter/flutter/blob/master/dev/devicelab/bin/tasks/module_test.dart to make some assets read only?\n\nYes, that's what i did. thanks!",
                "createdAt": "2020-01-24T22:13:41Z"
            },
            {
                "author": "blasten",
                "bodyText": "What version of the Flutter SDK are you using? Are you on master?",
                "createdAt": "2020-01-24T22:16:26Z"
            },
            {
                "author": "shihchanghsiungsonos",
                "bodyText": "What version of the Flutter SDK are you using? Are you on master?\n\nDev branch v1.14.3\n[\u2713] Flutter (Channel dev, v1.14.3, on Mac OS X 10.14.6 18G2022, locale en-US)\n\u2022 Flutter version 1.14.3 at /Users/shihchang.hsiung/development/git/flutter-dev-new\n\u2022 Framework revision b5a23fd (3 days ago), 2020-01-22 02:11:09 +0800\n\u2022 Engine revision c15efb9\n\u2022 Dart version 2.8.0 (build 2.8.0-dev.3.0 f910a7575f)\n[\u2713] Android toolchain - develop for Android devices (Android SDK version 29.0.2)\n\u2022 Android SDK at /Users/shihchang.hsiung/Library/Android/sdk/\n\u2022 Android NDK location not configured (optional; useful for native profiling support)\n\u2022 Platform android-29, build-tools 29.0.2\n\u2022 ANDROID_HOME = /Users/shihchang.hsiung/Library/Android/sdk/\n\u2022 ANDROID_SDK_ROOT = /Users/shihchang.hsiung/Library/Android/sdk/\n\u2022 Java binary at: /Applications/Android Studio.app/Contents/jre/jdk/Contents/Home/bin/java\n\u2022 Java version OpenJDK Runtime Environment (build 1.8.0_202-release-1483-b49-5587405)\n\u2022 All Android licenses accepted.\n[\u2713] Xcode - develop for iOS and macOS (Xcode 11.3.1)\n\u2022 Xcode at /Applications/Xcode.app/Contents/Developer\n\u2022 Xcode 11.3.1, Build version 11C504\n\u2022 CocoaPods version 1.7.4\n[\u2713] Android Studio (version 3.5)\n\u2022 Android Studio at /Applications/Android Studio.app/Contents\n\u2022 Flutter plugin version 41.1.2\n\u2022 Dart plugin version 191.8593\n\u2022 Java version OpenJDK Runtime Environment (build 1.8.0_202-release-1483-b49-5587405)\n[\u2713] VS Code (version 1.41.1)\n\u2022 VS Code at /Applications/Visual Studio Code.app/Contents\n\u2022 Flutter extension version 3.7.1\n[\u2713] Connected device (1 available)\n\u2022 Shih-Chang\u2019s iPhone \u2022 83c3a17190068bb7d7ff580eb58f916ab8e7db37 \u2022 ios \u2022 iOS 13.3",
                "createdAt": "2020-01-24T22:17:15Z"
            },
            {
                "author": "blasten",
                "bodyText": "what about if you run export ENABLE_ANDROID_EMBEDDING_V2='true' and then ../../bin/cache/dart-sdk/bin/dart bin/run.dart -t module_test.",
                "createdAt": "2020-01-24T22:21:23Z"
            },
            {
                "author": "shihchanghsiungsonos",
                "bodyText": "what about if you run export ENABLE_ANDROID_EMBEDDING_V2='true' and then ../../bin/cache/dart-sdk/bin/dart bin/run.dart -t module_test.\n\nYea, that fixes the issue. Thanks!",
                "createdAt": "2020-01-24T22:52:49Z"
            },
            {
                "author": "shihchanghsiungsonos",
                "bodyText": "Okay, I have verified before the fix, the asset is user-readable only. After the fix, the asset is user-readable and writable. Thanks!",
                "createdAt": "2020-01-27T21:33:32Z"
            },
            {
                "author": "blasten",
                "bodyText": "@shihchanghsiungsonos Are you still working on this PR or a new one?",
                "createdAt": "2020-01-30T22:32:28Z"
            },
            {
                "author": "shihchanghsiungsonos",
                "bodyText": "@shihchanghsiungsonos Are you still working on this PR or a new one?\n\n\n@shihchanghsiungsonos Are you still working on this PR or a new one?\n\nStill on this one. I just verified the fix as you requested. Is there anything else i need to do? Thanks!",
                "createdAt": "2020-01-30T23:57:55Z"
            },
            {
                "author": "blasten",
                "bodyText": "@shihchanghsiungsonos I thought you were going to add the test to this PR. Is that still case?",
                "createdAt": "2020-01-31T00:28:05Z"
            },
            {
                "author": "shihchanghsiungsonos",
                "bodyText": "@blasten, sorry i didn't know that the test case needs to be updated. I will work on that.",
                "createdAt": "2020-01-31T18:37:05Z"
            },
            {
                "author": "googlebot",
                "bodyText": "All (the pull request submitter and all commit authors) CLAs are signed, but one or more commits were authored or co-authored by someone other than the pull request submitter.\nWe need to confirm that all authors are ok with their commits being contributed to this project.  Please have them confirm that by leaving a comment that contains only @googlebot I consent. in this pull request.\nNote to project maintainer: There may be cases where the author cannot leave a comment, or the comment is not properly detected as consent.  In those cases, you can manually confirm consent of the commit author(s), and set the cla label to yes (if enabled on your project).\n\u2139\ufe0f Googlers: Go here for more info.",
                "createdAt": "2020-02-03T19:55:24Z"
            },
            {
                "author": "christopherfujino",
                "bodyText": "@shihchanghsiungsonos somehow this PR gained a huge diff (looks to be the result of a non-standard git merge).",
                "createdAt": "2020-02-03T20:01:03Z"
            },
            {
                "author": "shihchanghsiungsonos",
                "bodyText": "Just commit the change to update module_test test case, not sure why there are so many files changed?",
                "createdAt": "2020-02-03T20:01:55Z"
            },
            {
                "author": "shihchanghsiungsonos",
                "bodyText": "@shihchanghsiungsonos somehow this PR gained a huge diff (looks to be the result of a non-standard git merge).\n\nJust did:\ngit fetch updtream\ngit pull\ngit commit -a -m\ngit push origin dev-local",
                "createdAt": "2020-02-03T20:08:17Z"
            },
            {
                "author": "shihchanghsiungsonos",
                "bodyText": "@christopherfujino should I start another new PR and close this one?",
                "createdAt": "2020-02-03T21:27:13Z"
            },
            {
                "author": "christopherfujino",
                "bodyText": "@shihchanghsiungsonos that might be easiest. When you start a new branch, make sure you create your branch by starting from master. If you branch off of stable, it won't cleanly merge to master.",
                "createdAt": "2020-02-03T21:29:55Z"
            },
            {
                "author": "shihchanghsiungsonos",
                "bodyText": "@shihchanghsiungsonos that might be easiest. When you start a new branch, make sure you create your branch by starting from master. If you branch off of stable, it won't cleanly merge to master.\n\nCool. Thanks!",
                "createdAt": "2020-02-03T21:47:41Z"
            },
            {
                "author": "jmagman",
                "bodyText": "@shihchanghsiungsonos that might be easiest. When you start a new branch, make sure you create your branch by starting from master. If you branch off of stable, it won't cleanly merge to master.\n\nCool. Thanks!\n\nClosing in favor of your new PR, thank you!",
                "createdAt": "2020-02-03T22:52:30Z"
            },
            {
                "author": "shihchanghsiungsonos",
                "bodyText": "I have created a new PR: #50047\nClose this one.",
                "createdAt": "2020-02-03T22:52:34Z"
            }
        ],
        "commentCount": 35
    },
    {
        "number": 114997,
        "title": "Roll Flutter Engine from e7d7edab98ad to 1a8888b5170b (33 revisions)",
        "author": "engine-flutter-autoroll",
        "state": "CLOSED",
        "closedAt": "2022-11-09T17:10:07Z",
        "createdAt": "2022-11-09T16:19:16Z",
        "comments": [
            {
                "author": "DanTup",
                "bodyText": "@zanderso here's the golden images for before/after this change: tiler_goldens.zip\nThree of them just look like very minor differences in the dotted lines:\n\nAlthough one of them is more significant, it has a weird artiface above the character on the right:\n\nThe image comes from a tileset so this could be some bleeding from pixels above it:\n\nI don't know if it's a Flutter issue or an issue in the tiler code (note: I'm not actively maintaining tiler, though maybe there's value in these tests for noticing differences like this?).",
                "createdAt": "2022-11-09T16:46:27Z"
            },
            {
                "author": "zanderso",
                "bodyText": "@iskakaushik could this be related to flutter/engine#37451 ?",
                "createdAt": "2022-11-09T16:52:19Z"
            },
            {
                "author": "engine-flutter-autoroll",
                "bodyText": "Commit queue failed; closing this roll.",
                "createdAt": "2022-11-09T17:10:06Z"
            },
            {
                "author": "jason-simmons",
                "bodyText": "Bisected the tiler test diffs to a Skia roll (flutter/engine@6daa75a)",
                "createdAt": "2022-11-09T17:31:13Z"
            },
            {
                "author": "jason-simmons",
                "bodyText": "Specifically, the diffs started with https://skia.googlesource.com/skia/+/6a056a26b3c5a43bd879e20db62554054d5456d1",
                "createdAt": "2022-11-09T18:08:44Z"
            },
            {
                "author": "bsalomon",
                "bodyText": "Hi, the change affects the sampling of an image with nearest neighbor filtering (FilterQuality none in Flutter). When the sample point in the image falls exactly at an integer, that is right between two image pixels, we can now round differently than previously. However, the change only affects the software rasterizer used in flutter_tester. The behavior on actual GPUs when sampling exactly between two pixels of an image is unspecified and can vary GPU to GPU and therefore can't be relied on. So I'd recommend switching to FilterQuality low rather than none.",
                "createdAt": "2022-11-09T19:59:03Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "I was looking at whether or not this could be an easy fix, but I'm having a heck of a time getting this running locally. if I try and run via flutter run -d macos -t test/render_test.dart  after adding a macos folder, all I get is:\nflutter: \u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\nflutter: \u2550\u2550\u2561 EXCEPTION CAUGHT BY WIDGETS LIBRARY \u255e\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\nflutter: The following assertion was thrown building TileMap(dirty):\nflutter: 'package:tiler/src/painter.dart': Failed assertion: line 50 pos 16: '_loadedMap != null': is not\nflutter: true.\nflutter: \nflutter: The relevant error-causing widget was:\nflutter:   TileMap TileMap:file:///Users/jonahwilliams/Documents/tests/tests/test/utils.dart:38:28\n\n@DanTup do you have a specific workflow that needs to be followed to get these goldens to show up locally?",
                "createdAt": "2022-11-09T20:41:33Z"
            },
            {
                "author": "DanTup",
                "bodyText": "So I'd recommend switching to FilterQuality low rather than none.\n\n@bsalomon I made this change and it didn't seem to alter the goldens on my Mac. Trying on Windows, the results seem much fuzzier (although the docs suggest Low is better quality than None):\n\nIs this expected?\n@jonahwilliams all I'm doing is running flutter test and flutter test --update-goldens",
                "createdAt": "2022-11-09T20:49:41Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Yeah, I was trying to run on an actual device in order to see what a device with a GPU outputs. To make this work, I had to change all of the loader calls to use rootBundle.load, to avoid the flutter_test specifici overriden asset manager. i will file a bug for this later on.\nI'm unblocked for now",
                "createdAt": "2022-11-09T20:59:48Z"
            },
            {
                "author": "DanTup",
                "bodyText": "I've pushed the changes. It does seem like there's no difference now between master and this PR, so (as long as I tested it correctly), I think it should be unblocked now (fixes are DanTup/tiler@380769c and DanTup/tiler-test-maps@6010729).\nI'm not around too much longer today (it's getting late here) but if any failures relating to this seem like just issues with Tiler's tests and not Flutter, feel free to remove it from the Flutter customer testing (we can add it back if useful later). Otherwise, Jonah and Jason both have access to the repos and are welcome to commit changes/goldens as required to fix.\n(I'll try to check back shortly before I vanish for the night though)",
                "createdAt": "2022-11-09T21:00:54Z"
            },
            {
                "author": "bsalomon",
                "bodyText": "I'm surprised on mac you get the issue on mac and then it doesn't get blurry when you make the change. I'd expect if the sample point was near an integer you'd now get a ~50/50 blend of the two adjacent pixels. I can take a look if someone points me to the instructions for running.",
                "createdAt": "2022-11-09T21:08:08Z"
            },
            {
                "author": "DanTup",
                "bodyText": "AFAIK all of the numbers should've been integers, so I wasn't expecting any scaling at all (I'm also not sure why things changed on Windows and not Mac.. both are just running flutter test which I presume is using the same rendering code?).\nYou should be able to just clone https://github.com/DanTup/tiler (inc submodules) and run flutter test with whatever version of Flutter.\nI just realised I didn't subit the new commit hash to flutter/tests, but as I type this I see @jonahwilliams has beaten me at flutter/tests#173 :)",
                "createdAt": "2022-11-09T21:12:01Z"
            },
            {
                "author": "bsalomon",
                "bodyText": "Thanks for the pointer. I'll take a look to confirm we haven't introduced a bug in Skia.",
                "createdAt": "2022-11-09T21:15:26Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "By default I believe flutter_tester has a 3.0 device pixel ratio, so (if I did my math) right any integer device pixel should become an integer physical pixel. but if there are any parent transforms, offset layers, scrolling, then that can change whether or not that correspondance actually works for an app developer",
                "createdAt": "2022-11-09T21:16:23Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Ahh, actually that test in particular has a 0.25 scale applied to it. I think that will break the pixel alignment:\nhttps://github.com/DanTup/tiler/blob/master/test/render_test.dart#L18\nunless that is acounted for elsewhere?",
                "createdAt": "2022-11-09T21:18:34Z"
            },
            {
                "author": "bsalomon",
                "bodyText": "The sampling works backwards from device space points at half values. That is the device space coords used to shade the top left device pixel are (0.5, 0.5).",
                "createdAt": "2022-11-09T21:19:36Z"
            },
            {
                "author": "DanTup",
                "bodyText": "While looking at the code, I realised that I only ever committed Windows goldens (because I was using Windows at the time and couldn't easily create the goldens for other platforms). So when I said it didn't happen on Mac, I guess what I really meant was \"the tests skip the golden checks on Mac\" \ud83d\ude48\n\nAhh, actually that test in particular has a 0.25 scale applied to it.\n\nAh, good spot \ud83d\ude04 It's been a while since I did this.",
                "createdAt": "2022-11-09T21:20:54Z"
            },
            {
                "author": "flar",
                "bodyText": "AFAIK all of the numbers should've been integers, so I wasn't expecting any scaling at all (I'm also not sure why things changed on Windows and not Mac.. both are just running flutter test which I presume is using the same rendering code?).\n\nOne difference between Windows and other platforms is that they fully embrace non-integer DPIs. Mac will pretty much always be 2.0 or 1.0. Many phones are integer DPI, but Windows is fond of 2.25 and 1.75 and other non-integer ratios because they've had to embrace a wide range of monitors designed by a wide range of manufacturers and wanted to achieve very consistent sizing across the board.",
                "createdAt": "2022-11-10T01:07:43Z"
            },
            {
                "author": "bsalomon",
                "bodyText": "I'm trying to double check that this change didn't do anything unanticipated. I'm on a Mac. I built the engine for desktop. And then I run:\nflutter --local-engine=\"host_debug_unopt\" test\nI get:\n00:04 +15: All tests passed!",
                "createdAt": "2022-11-10T16:05:40Z"
            },
            {
                "author": "DanTup",
                "bodyText": "@bsalomon turns out I wasn't committing the goldens on mac. I'll create a branch now with the older goldens produced on a Mac so you can easily run this and verify the difference.",
                "createdAt": "2022-11-10T18:07:14Z"
            },
            {
                "author": "DanTup",
                "bodyText": "@bsalomon if you checkout the mac-testing branch it now has goldens enabled for macOS and committed from Flutter master (you may need to git submodule init?) and if you run flutter test you should get a number of failures as noted in #114997 (comment).\nNote: I changed the FilterQuality back to none for this testing as it seemed like that's what you were testing. If you set it to low then there are no differences between stable and latest master, but the quality is worse (some of the images are blurry, even though they aren't for none, and the docs suggest low is better quality that none?).",
                "createdAt": "2022-11-10T18:23:26Z"
            },
            {
                "author": "flar",
                "bodyText": "Note: I changed the FilterQuality back to none for this testing as it seemed like that's what you were testing. If you set it to low then there are no differences between stable and latest master, but the quality is worse (some of the images are blurry, even though they aren't for none, and the docs suggest low is better quality that none?).\n\nThere are very specific circumstances in which none might look better. Some of these images may be running into those. Note that if you animate anything then none will look jittery even though any given frame might look \"crisper\" when taken out of context in isolation. low will look smooth in motion, but any given frame might be less crisp than a none rendering.",
                "createdAt": "2022-11-10T18:35:29Z"
            },
            {
                "author": "bsalomon",
                "bodyText": "@bsalomon I made this change and it didn't seem to alter the goldens on my Mac. Trying on Windows, the results seem much fuzzier (although the docs suggest Low is better quality than None):\n\nI had confused myself in thinking the original issue was showing up on Mac but now I realize it was Windows. Now these results make perfect sense . Mac is sampling the image at image pixel center so none vs low makes no difference. Windows is hitting at an integer so when sampling was none we changed the snapping and made a gap and on low you get blurriness because you're getting a 50% blend of two rows. I don't think there is really anything to do here. We were already on the knife's edge and on an actual GPU you could have gotten the gap before anything in Flutter Engine changed recently.",
                "createdAt": "2022-11-10T20:15:55Z"
            },
            {
                "author": "DanTup",
                "bodyText": "@bsalomon I'm a little confused. The issue* does seem to show up on Mac for me - however Tiler's repo was skipping the golden checks for (host) platforms other than Windows (because I wasn't able to easily update the goldens on other platforms) so it only triggered on Windows when running the tests.\n\nby \"issue\" here I mean the original reason for this failure, which is that the produced goldens changed in this roll (when using FilterQuality.none, on both Windows and macOS, running on flutter-tester just using flutter test).\n\nThe branch I noted above removes the isWindows check and commits Mac goldens for the current Flutter stable. If I checkout that branch and run them on my Mac, I see failures because of golden changes.\nOn master I've now switched to low, which seems to provide consistent results before/after this roll - although the quality of the rendering is worse for this purpose IMO. If I was still maintaining/releasing that package I'd probably do some comparison of those values to decide which looks best (the original none looked great and wasn't at all fuzzy, but low is very fuzzy).",
                "createdAt": "2022-11-10T20:38:01Z"
            },
            {
                "author": "flar",
                "bodyText": "The fuzziness is due to a 0.25 scale. As you scale down a picture, you'd expect the thin lines in the original to get fainter and harder to see. By the time it is scaled down by 4x you'd expect fuzzy lines. If this picture were rendered at full scale the lines would likely not be fuzzy at all. If it was intended to be rendered at this tiny scale, then the lines should have been larger to compensate.\nCan you imagine what a rendering would look like where as you scaled it down across 4x the lines stayed as bold as they were in the original rendering despite all of the other details of the image reducing in size? That would be a quality issue...",
                "createdAt": "2022-11-10T20:51:29Z"
            },
            {
                "author": "DanTup",
                "bodyText": "The fuzziness is due to a 0.25 scale. As you scale down a picture, you'd expect the thin lines in the original to get fainter and harder to see.\n\nI understand, but it was being scaled exactly the same before this change. It just feels like the quality become a lot worse. Here's a comparison (left is stable, right is master after this change landed - there are no changes at all in the Tiler code):\n\nThere's also a slight artifact above the 3rd/clipped character which I think is pixels bled from the sprite above it in the spritesheet.\nTo be clear, I'm not saying these are issues/bugs, and they may easily be fixed/improved by tweaking my code (although I'm not actively developing that package). I just wanted to make sure the differences are understood (and expected or acceptable) :-)",
                "createdAt": "2022-11-10T21:00:01Z"
            },
            {
                "author": "flar",
                "bodyText": "The bleeding shouldn't be there, that is probably related to the rounding fix that Skia is landing.\nThese results are to be expected for low. They look bad in these examples because they are so specifically tailored for the few cases where none looks good. Across the spectrum of what you might do with images, none will show problems that make a little fuzziness look like a dream in comparison.",
                "createdAt": "2022-11-10T21:08:25Z"
            },
            {
                "author": "bsalomon",
                "bodyText": "by \"issue\" here I mean the original reason for this failure, which is that the produced goldens changed in this roll (when using FilterQuality.none, on both Windows and macOS, running on flutter-tester just using flutter test).\n\n\nSorry, by \"issue\" I was referring only to the row of undesired pixels above the one character with none, not any change to the goldens. I saw that bad pixel row in your original zip on the windows image but not when I ran the tests on my Mac.\nAre the characters coming from an image atlas? I'm wondering if you could keep the sharpness of none (with the possible jerkiness pointed out by @flar) by adjusting the image rect used to draw and ensuring there is always a transparent row/column between atlas entries.",
                "createdAt": "2022-11-10T21:28:31Z"
            },
            {
                "author": "DanTup",
                "bodyText": "@flar\n\nThese results are to be expected for low.\n\nOh, I confused things above. The diff I posted was the change from none to low, and not this roll. The changes in this roll did not make things fuzzy while still using none:\n\n@bsalomon\n\nAre the characters coming from an image atlas? [...] adjusting the image rect used to draw and ensuring there is always a transparent row/column between atlas entries.\n\nYes, but the tileset is from an external source and the info about the sizes comes from the Tiled editor so not someting that can be changed (although to be clear, I'm not concerned here about specific issues relating to these tests - these are just tests, I only highlighted it in case it was unexpected behaviour that might affect others).",
                "createdAt": "2022-11-10T21:35:55Z"
            },
            {
                "author": "bsalomon",
                "bodyText": "In Skia we have a concept of a sampling \"constraint\" on drawImageRect. If it is \"strict\" then it guarantees that the image won't be sampled outside of the src rectangle. I'm not sure if that is exposed in flutter. I don't see an equivalent here:\nhttps://api.flutter.dev/flutter/dart-ui/Canvas/drawImageRect.html\nHowever, I do see references to it in the Flutter Engine code.",
                "createdAt": "2022-11-11T14:26:25Z"
            },
            {
                "author": "flar",
                "bodyText": "In Skia we have a concept of a sampling \"constraint\" on drawImageRect. If it is \"strict\" then it guarantees that the image won't be sampled outside of the src rectangle. I'm not sure if that is exposed in flutter. I don't see an equivalent here:\nhttps://api.flutter.dev/flutter/dart-ui/Canvas/drawImageRect.html\nHowever, I do see references to it in the Flutter Engine code.\n\nHard-coded to Fast here:\nhttps://github.com/flutter/engine/blob/05649893f75f4390b883bdb287d670db5449e024/lib/ui/painting/canvas.cc#L440",
                "createdAt": "2022-11-11T18:17:32Z"
            },
            {
                "author": "DanTup",
                "bodyText": "Interesting - should I file an issue for exposing this? I'm not currently maintaining this library so it's not of importance to me, but perhaps it should be available in case others are trying to do something similar?",
                "createdAt": "2022-11-14T11:41:10Z"
            },
            {
                "author": "flar",
                "bodyText": "Interesting - should I file an issue for exposing this? I'm not currently maintaining this library so it's not of importance to me, but perhaps it should be available in case others are trying to do something similar?\n\n#67881",
                "createdAt": "2022-11-14T17:15:18Z"
            },
            {
                "author": "DanTup",
                "bodyText": "Ah, nice - thanks! \ud83d\ude03",
                "createdAt": "2022-11-14T17:17:33Z"
            }
        ],
        "commentCount": 34
    },
    {
        "number": 91802,
        "title": "Add a \"flutter debug_adapter\" command that runs a DAP server",
        "author": "Danny Tuppeny",
        "state": "MERGED",
        "closedAt": "2021-10-27T13:48:06Z",
        "createdAt": "2021-10-14T09:25:05Z",
        "comments": [
            {
                "author": "DanTup",
                "bodyText": "I'm guessing from the failure (and all the other files being 2014) that all the headers should say 2014 so I've updated them.\n@christopherfujino I forgot to mention - some of these files import existing libraries that are not null-safe, but I had written them null-safe originally. I left any annotations in in /*comments*/ for future convenience, but wasn't sure if there's something better to do than that (besides migrating the libraries, but I didn't want to duplicate any work if others are already working through them).",
                "createdAt": "2021-10-14T09:40:57Z"
            },
            {
                "author": "christopherfujino",
                "bodyText": "I'm guessing from the failure (and all the other files being 2014) that all the headers should say 2014 so I've updated them.\n\nYes, my understanding is that the correct thing to do with copyright comments is to include the year the \"work\" (in this case, the Flutter SDK) was FIRST copyrighted.\n\n@christopherfujino I forgot to mention - some of these files import existing libraries that are not null-safe, but I had written them null-safe originally. I left any annotations in in /*comments*/ for future convenience, but wasn't sure if there's something better to do than that (besides migrating the libraries, but I didn't want to duplicate any work if others are already working through them).\n\nMakes sense. Comments are helpful. You raise a good point about not duplicating null-safety migration work. To that end, I added a list of all unmigrated tool files to the description of #71511, and added open PRs to the right. Feel free to add your github username next to a file while you are migrating a file.",
                "createdAt": "2021-10-14T18:20:00Z"
            },
            {
                "author": "rrousselGit",
                "bodyText": "I am correct in thinking that this would allow supporting \"auto attach to process\" for flutter tests?",
                "createdAt": "2021-10-15T14:06:42Z"
            },
            {
                "author": "DanTup",
                "bodyText": "@rrousselGit\n\nI am correct in thinking that this would allow supporting \"auto attach to process\" for flutter tests?\n\nI'm not sure I completely understand the question. The goal here is to move the DAP implementation from Dart-Code's TypeScript codebase into the SDKs (where it can be used more easily by other tools/editors, as well as the VS Code extension). The first job is to make it do everything that that current Dart-Code DAP does so VS Code can switch to it.\nI'm not sure what \"auto attach to process\" means though. We should support attaching to running apps (by having the DAP call flutter attach) although it's done not yet. I'm not sure if you'd be able to attach to tests though - Flutter would need to support that, but also the JSON reporter would have already emitted some events if it was started externally, which might prevent things working correctly.\nCan you describe what you're trying to do (and why just running the tests directly through the DAP wouldn't be enough?).\n(Note: flutter test support is not included in this PR, but I do have ready for a follow-up PR after this lands.. it will be started as flutter debug-adapter --test).",
                "createdAt": "2021-10-15T14:10:56Z"
            },
            {
                "author": "rrousselGit",
                "bodyText": "@DanTup The description of this PR made it seem related to https://code.visualstudio.com/blogs/2018/07/12/introducing-logpoints-and-auto-attach\nSo I was wondering if this could allow combining VS code's \"auto attach to process\" feature with Flutter, such that when we run flutter test (or flutter debug_adapter --test?) in a terminal, then VS code would pick-up the process and start a debug session.",
                "createdAt": "2021-10-15T14:16:56Z"
            },
            {
                "author": "DanTup",
                "bodyText": "@rrousselGit ah, gotcha. Unfortunately not. I believe the way that works in nodejs is that VS Code is monitors the terminals for node processes and can attach to them directly. For Dart, we need to know the VM Service URI (including its authentication token) which we can't discover ourselves. We'd also need the user to run the app with special flags (to enable the VM Service).\nWe could support manually attaching to tests, but you wouldn't get the test-specific functionality (since we won't have a complete view of the JSON).\nGenerally, I would recommend launching tests from within VS Code normally and not through the terminal, as there's just a lot of functionality we can't support if we don't control the tool process that's spawned.\n\nflutter debug_adapter --test\n\nTo be clear - flutter debug-adapter is intended to be run by tools/editors, not users. It starts a service that expects you to talk with JSON (similar to flutter daemon and flutter run --machine) - although since the client speaks first it will produce no initial output.\nIt would be useful to you if you're building an editor/editor integration, trying to configure an editor with a generic DAP client (where there isn't a specific Dart/Flutter extension to do this for you and need to tell it how to start the debug adapter), or some other tool where you want to run and interact with Dart/Flutter programs/tests programatically and would prefer to use a more generic standard than launching and using the VM Service.\nFWIW, I did previously ask VS Code about having an API where we could intercept a user running dart or flutter from the terminal, and launch a proper debug session from it, but it didn't like something that was likely to happen (probably for a whole host of reasons!).",
                "createdAt": "2021-10-15T14:27:42Z"
            },
            {
                "author": "christopherfujino",
                "bodyText": "For posterity, I got debugging working in neovim and this PR and journaled it in https://gist.github.com/christopherfujino/80be0f4cd88f75c4991b478e6b071153",
                "createdAt": "2021-10-15T17:12:27Z"
            },
            {
                "author": "DanTup",
                "bodyText": "For posterity, I got debugging working in neovim and this PR and journaled it in https://gist.github.com/christopherfujino/80be0f4cd88f75c4991b478e6b071153\n\nAwesome :-)\n@ericdallo FYI - you may be interested in trying this out too once it lands.. It's not at feature-parity with the Dart-Code DAP yet, but it probably includes everything you'd using in emacs and avoids the download/compile of the VS Code extension. See the readme in this PR for some details.",
                "createdAt": "2021-10-15T17:20:01Z"
            },
            {
                "author": "ericdallo",
                "bodyText": "Awesome @DanTup, LMK when this is available so I can make the necessary changes for Emacs :)\nc/c @yyoncho",
                "createdAt": "2021-10-15T22:18:44Z"
            },
            {
                "author": "DanTup",
                "bodyText": "I don't think the latest failure is related to this PR (it's in other integration tests I don't believe this change affects), although I'm not sure how to interpret the message to understand what failed:\n00:16 +0: loading C:\\b\\s\\w\\ir\\x\\w\\flutter\\dev\\automated_tests\\integration_test\\trivial_widget_test.dart                                                                                                \n00:16 +0: A trivial widget test                                                                                                                                                                        \n00:16 +1: A trivial widget test                                                                                                                                                                        \n00:16 +1: (tearDownAll)                                                                                                                                                                                \n00:16 +1: All tests passed!                                                                                                                                                                            \n  \n  <<stderr>>\n  \n  - - - -----8<----- - - -\n  \n  package:test_api                             expect\n  test\\integration.shard\\test_test.dart 296:5  _testFile\n  \n\n01:18 +1 -1: loading test\\integration.shard\\test_test.dart                                                                                                                                             \nConsider enabling the flag chain-stack-traces to receive more detailed exceptions.\nFor example, 'dart test --chain-stack-traces'.\n\n01:18 +1 -1: test\\integration.shard\\test_test.dart: flutter test set the working directory correctly",
                "createdAt": "2021-10-18T13:40:01Z"
            },
            {
                "author": "christopherfujino",
                "bodyText": "Here's the actual failure:\n01:18 +1 -1: test\\integration.shard\\test_test.dart: integration test should not have extraneous error messages [E]                                                                                     \n  Expected: match '[0-9]+:[0-9]+ [+]1: All tests passed!'\n    Actual: 'Downloading windows-x64-debug/windows-uwp-x64-flutter tools...         3.7s'\n  Full output:\n  - - - -----8<----- - - -\n  Downloading windows-x64-debug/windows-uwp-x64-flutter tools...         3.7s\n  Downloading windows-x64/flutter-cpp-client-wrapper tools...         21ms\n  Downloading windows-x64-profile/windows-uwp-x64-flutter tools...      2,705ms\n  Downloading windows-x64-release/windows-uwp-x64-flutter tools...      2,600ms",
                "createdAt": "2021-10-18T22:45:29Z"
            },
            {
                "author": "DanTup",
                "bodyText": "@christopherfujino thanks! I don't think that's related to this PR - test_test.dart is existing and this PR is all just new files (besides adding the new command into the flutter tool). I've rebased on latest master (which will trigger a rebuild), though I wonder if it's flaky.",
                "createdAt": "2021-10-19T08:22:02Z"
            },
            {
                "author": "christopherfujino",
                "bodyText": "@christopherfujino thanks! I don't think that's related to this PR - test_test.dart is existing and this PR is all just new files (besides adding the new command into the flutter tool). I've rebased on latest master (which will trigger a rebuild), though I wonder if it's flaky.\n\nI suspect this is an infra provisioning problem, and once it fails once subsequent runs at the same engine hash pass because the assets are cached. I'll open a new tracking issue.",
                "createdAt": "2021-10-19T15:05:38Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Google testing has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2021-10-19T16:08:03Z"
            },
            {
                "author": "DanTup",
                "bodyText": "@christopherfujino I don't have access to whatever google-testing is - are you able to check the results and let me know what failed (if it's something I need to fix). Thanks!",
                "createdAt": "2021-10-19T16:10:00Z"
            },
            {
                "author": "christopherfujino",
                "bodyText": "@christopherfujino I don't have access to whatever google-testing is - are you able to check the results and let me know what failed (if it's something I need to fix). Thanks!\n\nHmm, it's a build rule failure because you added a new file that imports package:pedantic. I'll have to follow up to see what the right thing to do is (no action item on your part, though).",
                "createdAt": "2021-10-19T20:51:09Z"
            },
            {
                "author": "DanTup",
                "bodyText": "@christopherfujino turns out there's an unawaited in dart:async (and actually also one in lib/src/base/common.dart) so package:pedantic is no longer required. I've removed it, so hopefully this will be green now :-)",
                "createdAt": "2021-10-21T14:04:31Z"
            },
            {
                "author": "DanTup",
                "bodyText": "@christopherfujino seems like it still failed google-testing - are you able to check why?",
                "createdAt": "2021-10-21T19:34:30Z"
            },
            {
                "author": "jiahaog",
                "bodyText": "@DanTup I reran the Google tests, you should be good to go now \ud83d\ude42",
                "createdAt": "2021-10-26T15:13:13Z"
            },
            {
                "author": "christopherfujino",
                "bodyText": "@christopherfujino seems like it still failed google-testing - are you able to check why?\n\nOops, sorry I missed this comment. Looks like Google-testing is green now though.",
                "createdAt": "2021-10-26T18:09:17Z"
            },
            {
                "author": "DanTup",
                "bodyText": "Not sure if flutter-gold is stuck.. The Details link goes to a page that doesn't seem to have any indication it's queued/running. I'll push an empty change to see if that helps.",
                "createdAt": "2021-10-27T12:45:37Z"
            },
            {
                "author": "ericdallo",
                "bodyText": "@DanTup, some questions, will this be available only for flutter? for lsp-dart users that use only dart without flutter it'd still be necessary to have the dart DAP vscode extension, right?",
                "createdAt": "2021-10-27T13:52:41Z"
            },
            {
                "author": "DanTup",
                "bodyText": "@ericdallo this PR is to add a Flutter-specific DAP that supports Flutter apps. There's an equivalent adapter in Dart for non-Flutter apps.\nCurrently, when you run the DAP from Dart-Code you'd typically pass it an argument of \"dart\" or \"flutter\" to select the adapter, but now it will be run by changing the top level command (eg. \"flutter debug_adapter\" or \"dart debug_adapter\").\nIt didn't make sense to build the Flutter-specific parts (eg. knowing how to launch Flutter apps and about Hot Restart) into the Dart SDK, so this debug adapter extends the Dart SDK one for the Flutter support.\nIf you have any questions (or issues making it work), feel free to ping me!",
                "createdAt": "2021-10-27T14:06:35Z"
            },
            {
                "author": "ericdallo",
                "bodyText": "it makes sense! I didn't know there was a command for dart as well, cool!\nThank you for the explanation, I should give a try soon with lsp-dart, if you have the exact version where this will be available on dart-sdk or flutter-sdk let me know so I can only use this based on the version",
                "createdAt": "2021-10-27T14:28:57Z"
            },
            {
                "author": "DanTup",
                "bodyText": "Yep, info on each are here:\n\nhttps://github.com/dart-lang/sdk/blob/main/pkg/dds/tool/dap/README.md#debug-adapter-protocol\nhttps://github.com/flutter/flutter/tree/master/packages/flutter_tools/lib/src/debug_adapters#debug-adapter-protocol-dap\n\nThe Dart one landed a little while ago so may be in dev/beta builds, though right now this one is only in master. I would probably avoid enabling it by default until it's clear they're included in a stable release and then using that.\nNote: These aren't as complete as Dart-Code's, but the things that aren't done yet are probably not things you're using (the significant thing missing is test support for Flutter - but I'm hoping to file a PR with that today).",
                "createdAt": "2021-10-27T14:37:27Z"
            },
            {
                "author": "ericdallo",
                "bodyText": "Awesome, makes sense, thank you again!",
                "createdAt": "2021-10-27T14:42:14Z"
            },
            {
                "author": "liangxianzhe",
                "bodyText": "Hi @DanTup, I tried this and it works great. Thanks for this! One small question, reading the PR, it seems only hotReload and hotRestart are supported as custom commands. Is there a plan to add others like debugDumpRenderTree, etc?",
                "createdAt": "2022-11-03T21:57:34Z"
            },
            {
                "author": "DanTup",
                "bodyText": "@liangxianzhe I'm not very familiar with debugDumpRenderTree but if it's a service extension then it should be callable via the callService custom request (see here - it's in the Dart DAP doc because it's available in both Dart and Flutter adapters). This is how VS Code does things like toggle debug painting (I don't know if your \"etc.\" meant things like debug painting which are already exposed in VS Code).\nIf it's not available as a service extension or in the flutter daemon then it would need exposing via one of those before the debug adapter could expose it.",
                "createdAt": "2022-11-03T23:49:44Z"
            },
            {
                "author": "liangxianzhe",
                "bodyText": "Thanks @DanTup, (not sure if we should move the discussion somewhere else). Are you able to run callService successfully? For me, it seems hotRestart works, but callService doesn't.\nI'm using nvim. Tail the dap.log shows that debugPaint and debugDumpRenderTree are both service extensions (among with many others):\n[ WARN ] 2022-11-04T09:46:46Z-0700 ] ...nvim/site/pack/packer/start/nvim-dap/lua/dap/session.lua:888 ]\t\"No event handler for \"\t{\n  body = {\n    extensionRPC = \"ext.flutter.debugPaint\",\n    isolateId = \"isolates/629036477267839\"\n  },\n  event = \"dart.serviceExtensionAdded\",\n  seq = 33,\n  type = \"event\"\n}\n...\n[ WARN ] 2022-11-04T09:46:46Z-0700 ] ...nvim/site/pack/packer/start/nvim-dap/lua/dap/session.lua:888 ]\t\"No event handler for \"\t{\n  body = {\n    extensionRPC = \"ext.flutter.debugDumpRenderTree\",\n    isolateId = \"isolates/629036477267839\"\n  },\n  event = \"dart.serviceExtensionAdded\",\n  seq = 40,\n  type = \"event\"\n}\n\nTrying to callService doesn't work:\nlua require('dap').session():request('callService', {method = 'ext.flutter.debugPaint', params = {enabled = 'true', isolateId = 'isolates/629036477267839'}})\n\nwhile, hotRestart works:\nlua require('dap').session():request('hotRestart')\n\nAny pointer on how to further debug this?",
                "createdAt": "2022-11-04T17:25:16Z"
            },
            {
                "author": "DanTup",
                "bodyText": "@liangxianzhe it seems to work in my testing - I captured this using Dart: Capture Debug Logs in VS Code and then toggling the debug paint:\n\n# VS Code sending request to DAP (req1)\n[11:31:58 AM] [DAP] [Info] <== {\"command\":\"callService\",\"arguments\":{\"method\":\"ext.flutter.debugPaint\",\"params\":{\"enabled\":true,\"isolateId\":\"isolates/2324209834572387\"}},\"type\":\"request\",\"seq\":11}\n\n# DAP sending request to VM Service (req2)\n[11:31:58 AM] [General] [Info] [Flutter (iPhone 14 Pro Max)] ==> [VM] {\"jsonrpc\":\"2.0\",\"id\":\"3917\",\"method\":\"ext.flutter.debugPaint\",\"params\":{\"enabled\":true,\"isolateId\":\"isolates/2324209834572387\"}}\n\n# Event from VM Service to DAP about state change\n[11:31:58 AM] [General] [Info] [Flutter (iPhone 14 Pro Max)] <== [VM] {\"jsonrpc\":\"2.0\",\"method\":\"streamNotify\",\"params\":{\"streamId\":\"Extension\",\"event\":{\"type\":\"Event\",\"kind\":\"Extension\",\"extensionKind\":\"Flutter.ServiceExtensionStateChanged\",\"isolate\":{\"type\":\"@Isolate\",\"id\":\"isolates/2324209834572387\",\"name\":\"main\",\"number\":\"2324209834572387\",\"isSystemIsolate\":false,\"isolateGroupId\":\"isolateGroups/3891113904111409424\"},\"timestamp\":1667820718530,\"extensionData\":{\"extension\":\"ext.flutter.debugPaint\",\"value\":\"true\"}}}}\n\n# Event passed back from DAP to VS Code\n[11:31:58 AM] [DAP] [Info] ==> {\"seq\":9333,\"type\":\"event\",\"body\":{\"extension\":\"ext.flutter.debugPaint\",\"value\":\"true\"},\"event\":\"flutter.serviceExtensionStateChanged\"}\n\n# Response back from VM Service for request (req2)\n[11:31:58 AM] [General] [Info] [Flutter (iPhone 14 Pro Max)] <== [VM] {\"jsonrpc\":\"2.0\",\"result\":{\"enabled\":\"true\",\"type\":\"_extensionType\",\"method\":\"ext.flutter.debugPaint\"},\"id\":\"3917\"}\n\n# Response from DAP to VS Code to the original request (req1)\n[11:31:58 AM] [DAP] [Info] ==> {\"seq\":9334,\"type\":\"response\",\"body\":{\"enabled\":\"true\",\"type\":\"_extensionType\",\"method\":\"ext.flutter.debugPaint\"},\"command\":\"callService\",\"request_seq\":11,\"success\":true}\n\nAre you able to capture the protocol traffic to the DAP server to see exactly what is being sent (and what it is responding with)?",
                "createdAt": "2022-11-07T11:39:49Z"
            },
            {
                "author": "DanTup",
                "bodyText": "(note: I tested this on latest master, though I wouldn't expect it to make much difference if you're on the most recent stable)",
                "createdAt": "2022-11-07T11:41:10Z"
            },
            {
                "author": "DanTup",
                "bodyText": "Oh, one thing I noticed is that in your snippet it looks like enabled may be sent as a string?\n\nenabled = 'true'\n\nIn my VS Code log, it's a literal boolean:\n\n\"enabled\":true",
                "createdAt": "2022-11-07T11:42:34Z"
            },
            {
                "author": "liangxianzhe",
                "bodyText": "I upgrade flutter version and it works now. Actually both true and 'true' works. Thanks again!\nPaste the command here in case anyone sees this thread in the future:\n\nFind the isolate id by tail -f ~/.cache/nvim/dap.log.\nlua require('dap').session():request('callService', {method = 'ext.flutter.debugPaint', params = {enabled = 'true', isolateId = 'isolates/2781966622852691'}})\nlua require('dap').session():request('callService', {method = 'ext.flutter.debugDumpRenderTree', params = {isolateId = 'isolates/2781966622852691'}})",
                "createdAt": "2022-11-14T22:38:01Z"
            },
            {
                "author": "DanTup",
                "bodyText": "@liangxianzhe ah, glad you got it working. I'm not sure what changed since the current stable version related to this, but there have been a few fixes recently. If you're able to add some code for this, you should be able to capture the isolateId from the dart.serviceExtensionAdded event so you don't need to fish it out of log files. I don't know how easy that will be in nvim though (it's what we do in the VS Code extension).",
                "createdAt": "2022-11-14T23:17:44Z"
            },
            {
                "author": "liangxianzhe",
                "bodyText": "Yeah, that should be easy. I will write a plugin for that when I got time.",
                "createdAt": "2022-11-14T23:30:24Z"
            }
        ],
        "commentCount": 35
    },
    {
        "number": 68523,
        "title": "Fix the OutlineInputBorder padding (#67707)",
        "author": "Michel Feinstein",
        "state": "CLOSED",
        "closedAt": "2021-03-29T19:38:34Z",
        "createdAt": "2020-10-19T21:09:55Z",
        "comments": [
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 2 untriaged digest(s) on patchset 1.\nView them at https://flutter-gold.skia.org/cl/github/68523",
                "createdAt": "2020-10-19T21:18:00Z"
            },
            {
                "author": "justinmc",
                "bodyText": "Thanks for the PR!  Your idea about an adjustable label position might be nice too, but I agree that this PR is fine on its own for now.\nCould you merge master into this branch?  I think you picked up a weird commit that's causing weird test failures.\nAfter that, I'll take a look at the tests and see if anything else needs to change besides the goldens.\nWe'll also need to follow the breaking changes policy for this, including writing a design doc and migration guide.  Are you up for that?",
                "createdAt": "2020-10-26T21:10:47Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 2 untriaged digest(s) on patchset 2.\nView them at https://flutter-gold.skia.org/cl/github/68523",
                "createdAt": "2020-10-26T21:33:02Z"
            },
            {
                "author": "feinstein",
                "bodyText": "@justinmc I don't know if I have the spare time to write an entire document on this. I could jump start one and you could review/complete it?\nI looked at the template, should I create a go link with my go link account or do you create one with Google's?\nI merged it with master as you requested.",
                "createdAt": "2020-10-26T22:25:52Z"
            },
            {
                "author": "justinmc",
                "bodyText": "Yeah sure I can take over the design doc after you get started with it.\nThe go link is step 6 in the design doc instructions.  You just open a PR in flutter/website.\nThanks for merging master, the tests seem to be running now, but indeed they are failing due to the padding change.  Try running material/text_field_test.dart locally and you'll see the failures.  Probably just some numbers that need to be updated.",
                "createdAt": "2020-10-27T17:02:47Z"
            },
            {
                "author": "feinstein",
                "bodyText": "I try to run them locally.\nI just didn't understand the step 6. I have to edit the JSON, ok, but what go link do I put there? Will someone else put it for me on my PR?",
                "createdAt": "2020-10-27T21:11:31Z"
            },
            {
                "author": "justinmc",
                "bodyText": "The destination link is just the link to your design document.  So make a copy of that template, make it publicly visible, and then put the public URL into that JSON file.",
                "createdAt": "2020-10-28T16:14:57Z"
            },
            {
                "author": "feinstein",
                "bodyText": "Yes, but that json has 2 fields, one for the doc link and one for the go link. Will the go link name be generated automatically by whatever I write there?",
                "createdAt": "2020-10-28T16:18:14Z"
            },
            {
                "author": "justinmc",
                "bodyText": "Oh sorry, the go link you can just make up yourself.  Like \"outline-input-border-padding\" or whatever looks nice to you.",
                "createdAt": "2020-10-28T18:28:48Z"
            },
            {
                "author": "feinstein",
                "bodyText": "@justinmc I added you as an editor to the breaking changes doc I am writing, it's almost done, I just left the testing section empty.\nI would appreciate any inputs on how to improve it.",
                "createdAt": "2020-10-30T20:29:59Z"
            },
            {
                "author": "justinmc",
                "bodyText": "@feinstein I left you some comments, thanks for writing that!  You also have some tests here that are failing because they're testing the position of various things in TextField.  You should run the tests in material/text_field_test.dart locally to see what's failing.",
                "createdAt": "2020-11-02T16:50:34Z"
            },
            {
                "author": "feinstein",
                "bodyText": "@justinmc I tried to run the tests in text_field_test.dart but I get TONS of errors, most I believe not related with this issue. Also the code doesn't compile, so I believe more has to be changed in order for us to change the tests? Is this related to the non-nullable changes?",
                "createdAt": "2020-11-02T21:40:53Z"
            },
            {
                "author": "justinmc",
                "bodyText": "Maybe, could you try merging in master again?  I would expect lots of failures due to sizing and positioning numbers being wrong, but not unrelated errors.",
                "createdAt": "2020-11-03T16:02:26Z"
            },
            {
                "author": "feinstein",
                "bodyText": "I tried to merge master again, but I got lots of errors as well. All of them appeared to be unrelated with this. Also a compilation error. I suspect this test file wasn't fully updated to match the non-nullable update.",
                "createdAt": "2020-11-03T16:05:54Z"
            },
            {
                "author": "justinmc",
                "bodyText": "I just checked out your branch and ran flutter test packages/flutter/test/material/text_field_test.dart in the root of the flutter repo and I get one failure and no strange errors.  Is that the command you're running?  Maybe something is messed up in your checkout of Flutter?",
                "createdAt": "2020-11-03T17:10:44Z"
            },
            {
                "author": "feinstein",
                "bodyText": "Thinking about it, I invoked the IntellijJ shortcut for running all tests, as I always do. But my system is not using the flutter tool version from the flutter repo, it uses the stable branch, that could be the problem. Thanks for pointing it out, I will try to run the test in the repo's flutter tool.",
                "createdAt": "2020-11-03T19:15:55Z"
            },
            {
                "author": "feinstein",
                "bodyText": "@justinmc I found the error, but I am not sure on how to fix it.\nThe test failing is related to the MD specs on leading icons on text inputs. The most recent version of the website doesn't include specs for a leading icon, just for a trailing icon.\nCould you inform the MD team and ask for specs so I could fix the test and a create a new one accordingly?",
                "createdAt": "2020-11-03T19:42:56Z"
            },
            {
                "author": "justinmc",
                "bodyText": "What is the clarification you need, exactly?  The distance from the outline to the leading icon?",
                "createdAt": "2020-11-04T01:20:28Z"
            },
            {
                "author": "feinstein",
                "bodyText": "The distance from the outline to the leading icon and the distance from the leading icon to the label texts.",
                "createdAt": "2020-11-04T01:21:30Z"
            },
            {
                "author": "justinmc",
                "bodyText": "Got it, I will find out and respond here.",
                "createdAt": "2020-11-04T01:23:29Z"
            },
            {
                "author": "justinmc",
                "bodyText": "@feinstein I confirmed that it's the same for the leading and trailing icons (they are mirror images of each other).",
                "createdAt": "2020-11-04T16:48:35Z"
            },
            {
                "author": "feinstein",
                "bodyText": "OK so I am assuming this:\nWith icon:\n(border)(12dp)(icon)(16dp)(label)(16dp)(icon)(12dp)(border)\nWithout icon:\n(border)(16dp)(label)(16dp)(border)\nAnd will ajust the code accordingly.",
                "createdAt": "2020-11-04T18:49:28Z"
            },
            {
                "author": "feinstein",
                "bodyText": "@justinmc I will need some further specs from the MD team.\nThe tests mention some specs relative to the outer icon, but the link and text make no sense on the current version of MD.\nThese are all the icons (I don't know why they are rendering as X, maybe a bad master?):\n\nFrom left to right: icon, prefixIcon and suffixIcon.\nI have the specs for prefixIcon and suffixIcon, but not for icon.\nIs icon out of the MD and should we remove it's tests?",
                "createdAt": "2020-11-04T22:38:25Z"
            },
            {
                "author": "justinmc",
                "bodyText": "We should probably have some tests for the icon and wherever Flutter decides to put it, even if we have no spec definition for it.\nYeah I'm also unable to find it in the spec.  Maybe it's more of a form thing and less of a text field thing.  I'll check with the Material team again tomorrow.",
                "createdAt": "2020-11-05T02:11:20Z"
            },
            {
                "author": "justinmc",
                "bodyText": "I haven't been able to get any solid numbers from the Material team.  These kinds of icons are in the spec but they don't have measurements.",
                "createdAt": "2020-11-09T16:41:07Z"
            },
            {
                "author": "feinstein",
                "bodyText": "Ok, so do we proceed? Do they want to make a spec and we should wait?... Or do I just leave them as they are?",
                "createdAt": "2020-11-09T16:44:45Z"
            },
            {
                "author": "feinstein",
                "bodyText": "Hi @justinmc, I have been very busy lately so it has been hard to take a look at this, anyway, today I got some spare time to update the tests and I got another question to the MD team.\nThe prefixIcon and suffixIcon have a minimum size of 48x48. The MD specs say they should have 12dp distance from the border....do I add 12 to those 48 or do I remove the 48dp from the width and add 12dp padding?",
                "createdAt": "2020-11-18T19:56:50Z"
            },
            {
                "author": "justinmc",
                "bodyText": "Sorry for the silence, I've been on leave for awhile.  I actually noticed today that the bug I opened on the Material spec had just been assigned, so maybe we will get an answer soon.  If not, I think we should just take our best guess at the location of those far left icons, but then write a test that checks the icons' exact positions (if one doesn't already exist).\nAbout your second question, I say 12 + 48.  Is there any invisible padding in that 48x48 though?  The reason the icon's hitbox is 48x48 is so that it's never too small to tap.",
                "createdAt": "2020-11-30T22:34:07Z"
            },
            {
                "author": "justinmc",
                "bodyText": "@feinstein Here are the measurements we need.  Are you still available to get this PR over the finish line?",
                "createdAt": "2021-02-12T18:18:42Z"
            },
            {
                "author": "feinstein",
                "bodyText": "@justinmc I became a Flutter Tech Lead @ BTG Pactual a couple of months ago, so I am currently swamped with new projects.\nDo you guys have any time-line on this? I can try to attack it on my spare time, if it takes too long I will let you know and ask for help, is this OK?",
                "createdAt": "2021-02-12T18:25:24Z"
            },
            {
                "author": "Piinks",
                "bodyText": "Hey @feinstein congrats on your tech lead role! \ud83c\udf89\nShould we close this PR or would you like to have this change move forward?",
                "createdAt": "2021-03-17T20:38:27Z"
            },
            {
                "author": "feinstein",
                "bodyText": "Thanks @Piinks!\nI would like to see this implemented, I am just not finding the spare time to look into it.",
                "createdAt": "2021-03-18T02:37:03Z"
            },
            {
                "author": "Piinks",
                "bodyText": "I would like to see this implemented, I am just not finding the spare time to look into it.\n\nI understand. Thank you very much for your work on this! Someone may pick it up, but in the meantime, I am going to close this since it is not currently active.",
                "createdAt": "2021-03-29T19:38:34Z"
            }
        ],
        "commentCount": 33
    },
    {
        "number": 65501,
        "title": "Update the cupertino picker visuals",
        "author": "YeungKC",
        "state": "MERGED",
        "closedAt": "2020-10-07T20:12:13Z",
        "createdAt": "2020-09-09T20:06:54Z",
        "comments": [
            {
                "author": "xster",
                "bodyText": "oh https://github.com/flutter/flutter/wiki/Writing-a-golden-file-test-for-package:flutter#first-time-contributors it looks like there's a special step for first time contributors. cc @Piinks",
                "createdAt": "2020-09-10T07:47:26Z"
            },
            {
                "author": "YeungKC",
                "bodyText": "I found a difference between CupertinoTimerPicker and iOS 14 native, which I will update later.",
                "createdAt": "2020-09-14T09:37:28Z"
            },
            {
                "author": "YeungKC",
                "bodyText": "Hi, @xster @LongCatIsLooong\nRegarding timer picker CupertinoTimerPickerMode.hms mode, I've been trying for a long time and haven't been able to figure out the iOS 14 native's label position logic exactly, so I was wondering if you had any suggestions?\nMaybe you should open an issue about CupertinoTimerPicker?\niOS 14 native:\n\nflutter CupertinoTimerPicker",
                "createdAt": "2020-09-15T08:13:59Z"
            },
            {
                "author": "LongCatIsLooong",
                "bodyText": "@YeungKC\n\nThe centered item in iOS 14 picker does look a little bit out of place to me. I guess we can remove the margin for now so the rectangle covers the text area.",
                "createdAt": "2020-09-16T00:39:58Z"
            },
            {
                "author": "YeungKC",
                "bodyText": "@LongCatIsLooong\nI've thought about implementing something like the spaceAround, but there's a problem, I don't have a way to get the possible hours, minutes, seconds text to measure the dimensions.\nIf I take (localizations as dynamic) and get a text like timerPickerSecondLabelZero to match it, maybe it's possible.\nBut that's too said.",
                "createdAt": "2020-09-17T10:09:42Z"
            },
            {
                "author": "LongCatIsLooong",
                "bodyText": "We do have the text width of each column (see the _measureLabelMetrics private method). But I'm not sure why that's needed to implement the margin/padding?",
                "createdAt": "2020-09-17T17:03:01Z"
            },
            {
                "author": "YeungKC",
                "bodyText": "@LongCatIsLooong\nBecause the label aspect is implemented on the stack, they're not the same level of thing.\nI plan to use CustomMultiChildLayout to determine the position of the number and label to achieve a spaceAround-like layout.\nBut there's still a problem... Is there any way to get a more accurate and measurable layout of the iOS 14 native? I don't want to spend too much time on fine-tuning the UI.",
                "createdAt": "2020-09-17T17:11:43Z"
            },
            {
                "author": "YeungKC",
                "bodyText": "@LongCatIsLooong\nI'm missing the point that the labels may be different at different times... GlobalCupertinoLocalizations can get all the labels and measure...\nIs that hard to fix? Unless something else is created?",
                "createdAt": "2020-09-17T17:18:44Z"
            },
            {
                "author": "LongCatIsLooong",
                "bodyText": "Typically we don't have to directly deal with the dimensions of the \"hour\" \"min\" labels. Do you mind briefly describe what layout strategy (i.e. which edge/vertice you're going to use as anchors etc.) you're planning to use, to help me understand the why they're needed?\n\nBut there's still a problem... Is there any way to get a more accurate and measurable layout of the iOS 14 native? I don't want to spend too much time on fine-tuning the UI.\n\nUnfortunately much of it is guesswork. For each specific value (such as origin or size) you can try to look it up in xcode (\"Debug View Hierarchy\").",
                "createdAt": "2020-09-17T18:02:56Z"
            },
            {
                "author": "YeungKC",
                "bodyText": "Sorry I didn't describe the problem clearly.\nCupertinoTimerPicker is a Row of children with two or three Stack, Stack mainly contains CupertinoPicker and label widget.\nNumberLabel and LabelWidget need to be calculated.\nFor example, if we need to center the content of the picker, and each picker width is _kTimerPickerColumnIntrinsicWidth, then the start padding of CupertinoPicker is ( _kTimerPickerColumnIntrinsicWidth - CupertinoPicker.numberLabel.maxWidth - _kTimerPickerHalfColumnPadding - LabelWidget.maxWidth) / 2\nThis yields that the start padding of LabelWidget.maxWidth: CupertinoPicker.NumberLabel.startPadding + CupertinoPicker.NumberLabel.maxWidth + _ kTimerPickerHalfColumnPadding\nTo prevent layout jitter when scrolling, we need to calculate the maximum width of the CupertinoPicker.NumberLabel, and the maximum width of the LabelWidget to make the picker content centered.\nThe code now does the padding calculation with _kTimerPickerHalfColumnPadding, which is not good.\nCupertinoPicker.NumberLabel.maxWidth might be easy to calculate, it's only two digits after all.\nBut the possibilities of 'hours', 'minutes', 'seconds', etc., I can't know, I don't know much about other languages.",
                "createdAt": "2020-09-17T18:40:27Z"
            },
            {
                "author": "LongCatIsLooong",
                "bodyText": "Ah I think I see what you are saying about measuring the size of the labels, the \"label\" text may change between the word's plural form and singular form when the number changes. You may have to do a measurement run for each possible value in that locale for each column if you want to implement this properly. Currently the Text widget for each label is set to allow overflowing in case the text inside the label needs more horizontal space, so even if the text becomes slightly longer than expected it may still be fully visible.",
                "createdAt": "2020-09-17T22:29:54Z"
            },
            {
                "author": "LongCatIsLooong",
                "bodyText": "When I set the width of an iOS 14 timer picker to a small enough number it looks like this:\n\nMaybe CupertinoTimerPicker should take up the available horizontal space and each column (each picker) should be of the same width?",
                "createdAt": "2020-09-18T00:14:37Z"
            },
            {
                "author": "YeungKC",
                "bodyText": "@LongCatIsLooong Long Yes, I think each picker width should be the same.\nit could just be a margin/padding difference that affects the position",
                "createdAt": "2020-09-18T02:34:57Z"
            },
            {
                "author": "YeungKC",
                "bodyText": "I think it's very close to iOS 14 native style now.",
                "createdAt": "2020-09-20T21:24:17Z"
            },
            {
                "author": "xster",
                "bodyText": "@Piinks can you help us take a look at this test? I added the ignore rule in the console but it seems like the golden hasn't run.",
                "createdAt": "2020-09-22T05:09:25Z"
            },
            {
                "author": "Piinks",
                "bodyText": "@Piinks can you help us take a look at this test? I added the ignore rule in the console but it seems like the golden hasn't run.\n\nTouched base on discord: https://discord.com/channels/608014603317936148/608018585025118217/758001451967578382\nSince @YeungKC landed their first change elsewhere, this is not a first-time contributor case anymore. I have removed the active ignores for the affected tests on the dashboard (https://flutter-gold.skia.org/changelists). The tests may need to be run again for the images to show up on Gold now that the tests are no longer being ignored. \ud83d\udc4d",
                "createdAt": "2020-09-22T20:42:51Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 18 untriaged digest(s) on patchset 29.\nView them at https://flutter-gold.skia.org/cl/github/65501",
                "createdAt": "2020-09-23T09:49:36Z"
            },
            {
                "author": "xster",
                "bodyText": "I think we have a width overflow here https://flutter-gold.skia.org/detail?test=cupertino.timer_picker_test.datetime.initial&digest=ff6ad81d5189b693156e3501a20a5d7f :)\nYou can try just flutter running the test itself on a simulator or device to see the effect (or placing a date picker in a small width container) to see what's the overflow issue. We should just follow the native behavior when it's too narrow #65501 (comment).",
                "createdAt": "2020-09-23T18:30:25Z"
            },
            {
                "author": "YeungKC",
                "bodyText": "I didn't find any overflow in my actual testing.\nbtw, because of your reminder, I improved the layout when the width is smaller.",
                "createdAt": "2020-09-25T04:31:09Z"
            },
            {
                "author": "YeungKC",
                "bodyText": "Before I updated, I found out about TimerPicker golden tests missing the default fontSize value, so I got unexpected results.\nThis has now been updated, and I get the expected results.\nbtw, in the original test, the local test couldn't output the gold file, but here it does: https://flutter-gold.skia.org/detail?test=cupertino.timer_picker_test.datetime.initial&digest=ff6ad81d5189b693156e3501a20a5d7f",
                "createdAt": "2020-09-28T20:24:28Z"
            },
            {
                "author": "xster",
                "bodyText": "I've approved the rest of the goldens that match expectations from the last commit. Though I'm still seeing 3 diffs that are overflowing in https://flutter-gold.skia.org/search?crs=github&fdiffmax=-1&fref=false&frgbamax=255&frgbamin=0&head=true&include=false&issue=65501&limit=50&master=false&match=name&metric=combined&neg=false&offset=0&pos=false&query=source_type%3Dflutter&sort=desc&unt=true",
                "createdAt": "2020-09-29T04:57:37Z"
            },
            {
                "author": "YeungKC",
                "bodyText": "I know, but I'm not sure why it's not the same as my local test results and if I can re-run the test generation?",
                "createdAt": "2020-09-29T21:21:55Z"
            },
            {
                "author": "xster",
                "bodyText": "Sorry that this process is taking longer with the tests. Let us poke at it a bit more for a day. If we can't figure it out, I'll ask you to remove the TimerPicker golden tests test from date_picker_test.dart and we'll go figure it out afterwards. The PR itself is great and the test issue here isn't caused by you as far as I can tell.",
                "createdAt": "2020-10-02T05:46:06Z"
            },
            {
                "author": "YeungKC",
                "bodyText": "Thank you for your follow-up, I believe this is worth the wait.",
                "createdAt": "2020-10-02T06:59:55Z"
            },
            {
                "author": "xster",
                "bodyText": "It's still off I think but I couldn't figure out the current state.\nLooking at\n\nno new commits appeared under the same PR. There's 45 here and 29 there. The main issues we were facing were the cupertino.timer_picker_test.datetime goldens. I marked the last known incorrect ones as negative. Though it seems like we never triggered new ones for me to be able to triage on newer commits since.",
                "createdAt": "2020-10-06T22:21:14Z"
            },
            {
                "author": "Piinks",
                "bodyText": "Have you tried running it locally since the local execution was fixed?\nNot every commit is tested (like when I push 3 commits, only the latest gets tested), so I think that is why the # of commits is not matching with your accounting.",
                "createdAt": "2020-10-06T23:06:56Z"
            },
            {
                "author": "xster",
                "bodyText": "ya the local results are as expected.\n@YeungKC could I ask you to just comment out the 'TimerPicker golden tests' in the date_picker_test.dart file? I locally validated that the layout and rendering is correct and various widths didn't overflow. I'll poke at the golden test after you merge your changes to turn it back on.",
                "createdAt": "2020-10-07T01:56:51Z"
            },
            {
                "author": "Piinks",
                "bodyText": "The cirrus failure is due to #67463, fix is in #67468\nSorry for the infra issues. Our migration to luci has caused a lot of gold issues lately.",
                "createdAt": "2020-10-07T15:46:34Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite framework_tests-libraries-linux has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-10-07T17:37:05Z"
            },
            {
                "author": "xster",
                "bodyText": "@Piinks don't know if it's related to #67468. The tests are indicating a date_picker_test.datetime.initial failure though in the gold console, I already approved the new image\n\nMaybe there's some cross-talk with Cirrus as you're pointing out.\n@YeungKC could you comment out 'DatePicker golden tests' as well? Sorry for the hassle so far. I'll turn them back on after we unblock this PR.",
                "createdAt": "2020-10-07T17:47:55Z"
            },
            {
                "author": "Piinks",
                "bodyText": "@Piinks don't know if it's related to #67468. The tests are indicating a date_picker_test.datetime.initial failure though in the gold console, I already approved the new image\n\nIt is related. The failure you are seeing here has nothing to do with the dashboard, that all looks to be ok.\n\nThis is a Cirrus failure. Cirrus is no longer talking to Gold, so it is failing here without a way to be resolved.\n\n\n\nThis image shows only luci builds in the parameters under CI. That looks to be as expected.\nThe cirrus build failure here can't be resolved until #67468 lands and can be patched in. An infra change added a Cirrus build without the config to talk to Gold, so it is stuck right now.",
                "createdAt": "2020-10-07T17:57:28Z"
            },
            {
                "author": "xster",
                "bodyText": "@YeungKC sorry, I just understood what @Piinks was saying. There are 2 testing infrastructures in transition and both are running golden though only 1 is the \"source of truth\". Linux framework_tests have already been passing for a while. That's the one appearing in the gold console. framework_tests-libraries-linux is now the deprecated infrastructure and no longer matters. We don't have to comment out more tests :). I'll merge this PR shortly after the last test completes.",
                "createdAt": "2020-10-07T18:09:29Z"
            },
            {
                "author": "xster",
                "bodyText": "Confirming both the rob test and the cirrus test are non-blockers. The rob test looped in files in the CL that aren't part of this PR due to merge issues. And the cirrus test is extraneous since the golden tests already ran on luci as mentioned above. Merging and then I'll turn the skipped golden back on. Thanks for your contribution and your patience on this one @YeungKC!",
                "createdAt": "2020-10-07T20:12:02Z"
            },
            {
                "author": "YeungKC",
                "bodyText": "This is my first pr, but I underestimated the scope of changes and code requirements. I really thank you all for your patience during this process, and I have grown from it.\n@xster @LongCatIsLooong @Piinks",
                "createdAt": "2020-10-08T00:46:09Z"
            },
            {
                "author": "xster",
                "bodyText": "Thanks for working through it too and being responsive. This is a high quality PR. Sorry for the infra issues. We're working through a migration so there's some wrinkles. Hopefully it won't happen again on your next PR :D",
                "createdAt": "2020-10-09T18:40:07Z"
            }
        ],
        "commentCount": 35
    },
    {
        "number": 44018,
        "title": "Fix the issue of TextSelection could misbehave inside a Nested Overlay",
        "author": "shihchanghsiungsonos",
        "state": "CLOSED",
        "closedAt": "2020-01-21T22:29:03Z",
        "createdAt": "2019-11-01T22:15:03Z",
        "comments": [
            {
                "author": "fluttergithubbot",
                "bodyText": "It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption to this rule, contact Hixie.\nReviewers: Read the Tree Hygiene page and make sure this patch meets those guidelines before LGTMing.",
                "createdAt": "2019-11-01T22:15:05Z"
            },
            {
                "author": "dannyvalentesonos",
                "bodyText": "@justinmc here's the PR for fixing the aligning and tap issues with a nested Overlay. The overflow issue is logged separately.\nThanks!",
                "createdAt": "2019-11-01T22:22:20Z"
            },
            {
                "author": "dnfield",
                "bodyText": "This will need some tests.  As I mentioned, I'm not super familiar with the overlay API but someone else who is can comment more on that.",
                "createdAt": "2019-11-01T22:56:16Z"
            },
            {
                "author": "justinmc",
                "bodyText": "@goderbauer We could use some of your Overlay expertise if you have time to give a review!",
                "createdAt": "2019-11-04T19:23:00Z"
            },
            {
                "author": "googlebot",
                "bodyText": "We found a Contributor License Agreement for you (the sender of this pull request), but were unable to find agreements for all the commit author(s) or Co-authors.  If you authored these, maybe you used a different email address in the git commits than was used to sign the CLA (login here to double check)?  If these were authored by someone else, then they will need to sign a CLA as well, and confirm that they're okay with these being contributed to Google.\nIn order to pass this check, please resolve this problem and then comment @googlebot I fixed it.. If the bot doesn't comment, it means it doesn't think anything has changed.\n\u2139\ufe0f Googlers: Go here for more info.",
                "createdAt": "2019-12-28T07:01:56Z"
            },
            {
                "author": "shihchanghsiungsonos",
                "bodyText": "@googlebot I fixed it.",
                "createdAt": "2019-12-28T18:01:46Z"
            },
            {
                "author": "shihchanghsiungsonos",
                "bodyText": "@googlebot I fixed it.",
                "createdAt": "2019-12-30T19:10:26Z"
            },
            {
                "author": "shihchanghsiungsonos",
                "bodyText": "@googlebot I fixed it.",
                "createdAt": "2020-01-06T23:11:57Z"
            },
            {
                "author": "shihchanghsiungsonos",
                "bodyText": "We found a Contributor License Agreement for you (the sender of this pull request), but were unable to find agreements for all the commit author(s) or Co-authors. If you authored these, maybe you used a different email address in the git commits than was used to sign the CLA (login here to double check)? If these were authored by someone else, then they will need to sign a CLA as well, and confirm that they're okay with these being contributed to Google.\nIn order to pass this check, please resolve this problem and then comment @googlebot I fixed it.. If the bot doesn't comment, it means it doesn't think anything has changed.\n\u2139\ufe0f Googlers: Go here for more info.\n\n@googlebot I fixed it.",
                "createdAt": "2020-01-06T23:15:51Z"
            },
            {
                "author": "justinmc",
                "bodyText": "@goderbauer @dnfield for a re-review.",
                "createdAt": "2020-01-14T23:01:04Z"
            },
            {
                "author": "dnfield",
                "bodyText": "This seems to make sense to me - my comment is main a nit, I'd be interested in what @goderbauer thinks of the naming.  Or @HansMuller who has done a lot with these kinds of things.",
                "createdAt": "2020-01-14T23:40:40Z"
            },
            {
                "author": "goderbauer",
                "bodyText": "This looks fine. It is missing a test, though and the CLA needs to be fixed.",
                "createdAt": "2020-01-15T00:21:17Z"
            },
            {
                "author": "dannyvalentesonos",
                "bodyText": "I like this solution, I think it's just missing a test now if others agree. I think you can add your test to material/text_field_test.dart. It will be similar to this test. I'd put a text field into a narrow Container and expect that all 4 text selection menu buttons are still there. Just make sure your test would fail without these changes.\n\n@justinmc I've added the following test, but it's failing to find the 'SELECT ALL' text entirely when the Container has a small size set.\ntestWidgets(\n    'Check the toolbar appears correctly inside a nested overlay',\n    (WidgetTester tester) async {\n      // This is a regression test for\n      // https://github.com/flutter/flutter/issues/43787\n      final TextEditingController controller = TextEditingController();\n\n      await tester.pumpWidget(MaterialApp(\n        home: Scaffold(\n          body: Center(\n            child: Container(\n              width: 300,\n              height: double.infinity,\n              child: Overlay(\n                initialEntries: [\n                  OverlayEntry(\n                      builder: (context) => Material(\n                        child: Padding(\n                          padding: const EdgeInsets.all(30.0),\n                          child: TextField(\n                            controller: controller,\n                          ),\n                        ),\n                      ),\n                  ),\n                ],\n              ),\n            ),\n          ),\n        ),\n      ));\n\n      const String testValue = 'abc def ghi';\n      await tester.enterText(find.byType(TextField), testValue);\n      await skipPastScrollingAnimation(tester);\n\n      await _showSelectionMenuAt(tester, controller, testValue.indexOf('e'));\n\n      // Verify the selection toolbar position is below the text.\n      Offset toolbarTopLeft = tester.getTopLeft(find.text('SELECT ALL'));\n      Offset textFieldTopLeft = tester.getTopLeft(find.byType(TextField));\n      expect(textFieldTopLeft.dy, lessThan(toolbarTopLeft.dy));\n    },\n  );\n\nIf I change the width to 500, it finds it.\nI've added printing in a few places in the sdk, and the following outputs can be seen during the test:\n00:04 +1: Check the toolbar appears correctly inside a nested overlay                                                                                            \nmedia: MediaQueryData(size: Size(800.0, 600.0), devicePixelRatio: 3.0, textScaleFactor: 1.0, platformBrightness: Brightness.light, padding: EdgeInsets.zero, viewPadding: EdgeInsets.zero, viewInsets: EdgeInsets.zero, physicalDepth: 1.7976931348623157e+308, alwaysUse24HourFormat: false, accessibleNavigation: false, highContrast: false,disableAnimations: false, invertColors: false, boldText: false)\nrootOverlay: true\nrootOverlay: true\nrootOverlay: true\nrootOverlay: true\nrootOverlay: true\nrootOverlay: true\nrootOverlay: true\neditingRegion: Rect.fromLTRB(280.0, 46.0, 520.0, 62.0)\nopening toolbar at Offset(143.0, 78.0) with size: Size(450.0, 44.0)\n\nAll these numbers seem good, except for the toolbar width of (450), which is wrong. This log was added in the _TextSelectionToolbarLayout's getPositionForChild method's given childSize.\nOther tests show the output as :\nopening toolbar at Offset(13.0, 114.0) with size: Size(274.0, 44.0)\n\nSo because of this, something isn't working right with the test, yet running an actual app with the same tree works well on an Android device.\nI think I might need some help with figuring out if anything else is missing in my fix.\nThanks",
                "createdAt": "2020-01-15T16:47:04Z"
            },
            {
                "author": "dannyvalentesonos",
                "bodyText": "@justinmc\nInteresting. If I change this test from\ntestWidgets(\n    'Check the toolbar appears below the TextField when there is not enough space above the TextField to show it',\n    (WidgetTester tester) async {\n      // This is a regression test for\n      // https://github.com/flutter/flutter/issues/29808\n      final TextEditingController controller = TextEditingController();\n\n      await tester.pumpWidget(MaterialApp(\n        home: Scaffold(\n          body: Padding(\n            padding: const EdgeInsets.all(30.0),\n            child: TextField(\n              controller: controller,\n              ),\n            ),\n          ),\n        ),\n      );\n\n      const String testValue = 'abc def ghi';\n      await tester.enterText(find.byType(TextField), testValue);\n      await skipPastScrollingAnimation(tester);\n\n      await _showSelectionMenuAt(tester, controller, testValue.indexOf('e'));\n\n      // Verify the selection toolbar position is below the text.\n      Offset toolbarTopLeft = tester.getTopLeft(find.text('SELECT ALL'));\n      Offset textFieldTopLeft = tester.getTopLeft(find.byType(TextField));\n      expect(textFieldTopLeft.dy, lessThan(toolbarTopLeft.dy));\n\n      await tester.pumpWidget(MaterialApp(\n        home: Scaffold(\n          body: Padding(\n            padding: const EdgeInsets.all(150.0),\n            child: TextField(\n              controller: controller,\n            ),\n          ),\n        ),\n      ));\n\n      await tester.enterText(find.byType(TextField), testValue);\n      await skipPastScrollingAnimation(tester);\n\n      await _showSelectionMenuAt(tester, controller, testValue.indexOf('e'));\n\n      // Verify the selection toolbar position\n      toolbarTopLeft = tester.getTopLeft(find.text('SELECT ALL'));\n      textFieldTopLeft = tester.getTopLeft(find.byType(TextField));\n      expect(toolbarTopLeft.dy, lessThan(textFieldTopLeft.dy));\n    },\n  );\n\nto\ntestWidgets(\n    'Check the toolbar appears below the TextField when there is not enough space above the TextField to show it',\n    (WidgetTester tester) async {\n      // This is a regression test for\n      // https://github.com/flutter/flutter/issues/29808\n      final TextEditingController controller = TextEditingController();\n\n      await tester.pumpWidget(MaterialApp(\n        home: Scaffold(\n          body: Center(\n            child: Container(\n              width: 300,\n              child: Padding(\n                padding: const EdgeInsets.all(30.0),\n                child: TextField(\n                  controller: controller,\n                ),\n              ),\n            ),\n          ),\n        ),\n      ));\n\n      const String testValue = 'abc def ghi';\n      await tester.enterText(find.byType(TextField), testValue);\n      await skipPastScrollingAnimation(tester);\n\n      await _showSelectionMenuAt(tester, controller, testValue.indexOf('e'));\n\n      // Verify the selection toolbar position is below the text.\n      Offset toolbarTopLeft = tester.getTopLeft(find.text('SELECT ALL'));\n      Offset textFieldTopLeft = tester.getTopLeft(find.byType(TextField));\n      expect(textFieldTopLeft.dy, lessThan(toolbarTopLeft.dy));\n      \n    },\n  );\n\nI get the same error, with the same output. So it actually has nothing to do with the nested overlay, and this case should really work.\nIs there something I'm missing in terms of this test code?\nThanks",
                "createdAt": "2020-01-15T17:01:03Z"
            },
            {
                "author": "justinmc",
                "bodyText": "I tried running the PR to see what could be happening in these tests, but I noticed that it still seems broken to me in the Android emulator.  I'm just using the code from the original issue.",
                "createdAt": "2020-01-15T19:50:12Z"
            },
            {
                "author": "dannyvalentesonos",
                "bodyText": "Hmm, that's strange, because it doesn't look like the new version of the fix is being applied. Is it possible you have the first version I posted? That's what it looks like.",
                "createdAt": "2020-01-15T19:53:03Z"
            },
            {
                "author": "shihchanghsiungsonos",
                "bodyText": "This looks fine. It is missing a test, though and the CLA needs to be fixed.\n\nI have tried to fix the CLA issue many times, but no luck. I also went through all my Google accounts. They all show It looks like you've already signed this CLA. Can anyone know how to find out what is missing? I also have other PR and it shows CLA been signed. Thanks!",
                "createdAt": "2020-01-15T22:58:46Z"
            },
            {
                "author": "dnfield",
                "bodyText": "@shihchanghsiungsonos  - when I look up your GitHub user name it doesn't come up in our CLA database :(  Are you sure you've signed it with the information associated with this GitHub account?",
                "createdAt": "2020-01-15T23:32:44Z"
            },
            {
                "author": "shihchanghsiungsonos",
                "bodyText": "@shihchanghsiungsonos - when I look up your GitHub user name it doesn't come up in our CLA database :( Are you sure you've signed it with the information associated with this GitHub account?\n\n@dnfield thanks for looking into this. My Google account is shihchang.hsiung@sonos.com and I use that to sign in GitHub account.",
                "createdAt": "2020-01-15T23:58:01Z"
            },
            {
                "author": "dnfield",
                "bodyText": "That email comes up as green.  And I can see from the patch that your email is the right one.  I'm going to manually mark this as good.",
                "createdAt": "2020-01-16T00:08:25Z"
            },
            {
                "author": "googlebot",
                "bodyText": "A Googler has manually verified that the CLAs look good.\n(Googler, please make sure the reason for overriding the CLA status is clearly documented in these comments.)\n\u2139\ufe0f Googlers: Go here for more info.",
                "createdAt": "2020-01-16T00:08:42Z"
            },
            {
                "author": "dnfield",
                "bodyText": "Ah! I see now - @shihchanghsiungsonos - can you go to https://cla.developers.google.com/clas and update your GitHub Username to match your actual username?  It looks like you have your email as your username instead of your username :)",
                "createdAt": "2020-01-16T00:10:48Z"
            },
            {
                "author": "shihchanghsiungsonos",
                "bodyText": "shihchanghsiungsonos\n\nDone. Thanks a lot for the help, @dnfield ! :)",
                "createdAt": "2020-01-16T00:45:34Z"
            },
            {
                "author": "justinmc",
                "bodyText": "@dannyvalentesonos You're right that I was on an older version, sorry about that!\nActually I think you can do something simpler for the test and just test that there is no error when rendering inside of an overlay.  Something like this seems to fail on master but pass on your branch:\n  testWidgets(\n    'The selection menu displays in an Overlay without error',\n    (WidgetTester tester) async {\n      // This is a regression test for\n      // https://github.com/flutter/flutter/issues/43787\n      final TextEditingController controller = TextEditingController(\n        text: 'This is a test that shows some odd behavior with Text Selection!',\n      );\n\n      await tester.pumpWidget(MaterialApp(\n        home: Scaffold(\n          body: Container(\n            color: Colors.grey,\n            child: Center(\n              child: Container(\n                color: Colors.red,\n                width: 300,\n                height: 600,\n                child: Overlay(\n                  initialEntries: [\n                    OverlayEntry(\n                      builder: (context) => Center(\n                        child: TextField(\n                          controller: controller,\n                        ),\n                      ),\n                    )\n                  ],\n                ),\n              ),\n            ),\n          ),\n        ),\n      ));\n\n      await _showSelectionMenuAt(tester, controller, controller.text.indexOf('test'));\n      await tester.pumpAndSettle();\n      expect(tester.takeException(), isNull); \n    },\n  );",
                "createdAt": "2020-01-16T00:58:00Z"
            },
            {
                "author": "dannyvalentesonos",
                "bodyText": "Awesome, thanks @justinmc . We'll get the PR updated.",
                "createdAt": "2020-01-16T01:07:44Z"
            },
            {
                "author": "googlebot",
                "bodyText": "CLAs look good, thanks!\n\u2139\ufe0f Googlers: Go here for more info.",
                "createdAt": "2020-01-16T23:03:23Z"
            },
            {
                "author": "dannyvalentesonos",
                "bodyText": "@justinmc An update to the PR has been made. Can you take a look please?\nI'm not sure why flutter-build is broken... Is that something in our changes?",
                "createdAt": "2020-01-16T23:09:17Z"
            },
            {
                "author": "dannyvalentesonos",
                "bodyText": "Thanks @justinmc . We updated. flutter-build is passing, but not sure about all the other tests.",
                "createdAt": "2020-01-17T22:32:15Z"
            },
            {
                "author": "justinmc",
                "bodyText": "@dannyvalentesonos Weird failures are still happening.  I talked to someone on the Flutter discord and they said to run git reset --soft && git commit -am 'message' && git push -f.  Something in the tool messed up while trying to read the versions.\nHopefully that fixes things!",
                "createdAt": "2020-01-21T21:53:05Z"
            },
            {
                "author": "shihchanghsiungsonos",
                "bodyText": "@dannyvalentesonos Weird failures are still happening. I talked to someone on the Flutter discord and they said to run git reset --soft && git commit -am 'message' && git push -f. Something in the tool messed up while trying to read the versions.\nHopefully that fixes things!\n\nAfter running git push -f, looks like the PR has been merged. Not sure if it is right?",
                "createdAt": "2020-01-21T22:30:45Z"
            },
            {
                "author": "dnfield",
                "bodyText": "You should be able to re-open...\nIt has not been merged.",
                "createdAt": "2020-01-21T22:43:44Z"
            },
            {
                "author": "dnfield",
                "bodyText": "Worst case scenario, push it to a new branch and open a new PR.",
                "createdAt": "2020-01-21T22:43:56Z"
            },
            {
                "author": "dnfield",
                "bodyText": "Ah, it looks like whatever you ended up doing dropped your changes....  see if you can just recover them and push it to a new branch.",
                "createdAt": "2020-01-21T22:44:24Z"
            },
            {
                "author": "shihchanghsiungsonos",
                "bodyText": "Ah, it looks like whatever you ended up doing dropped your changes.... see if you can just recover them and push it to a new branch.\n\nThanks @dnfield",
                "createdAt": "2020-01-21T23:00:56Z"
            },
            {
                "author": "shihchanghsiungsonos",
                "bodyText": "Ah, it looks like whatever you ended up doing dropped your changes.... see if you can just recover them and push it to a new branch.\n\nThanks @dnfield\n\nI have created a new PR: #49257 Thanks!",
                "createdAt": "2020-01-22T00:03:11Z"
            }
        ],
        "commentCount": 35
    },
    {
        "number": 22956,
        "title": "[FR] BottomNavigationBar fixed with no titles.",
        "author": "Hyo",
        "state": "CLOSED",
        "closedAt": "2019-02-19T20:19:39Z",
        "createdAt": "2018-10-11T14:01:43Z",
        "comments": [
            {
                "author": "Hixie",
                "bodyText": "We still need the text for the titles, because otherwise we can't provide anything to the accessibility layer.\nBut maybe we can have a new BottomNavigationBarType that hides the labels from view?",
                "createdAt": "2018-10-12T22:43:47Z"
            },
            {
                "author": "willlarche",
                "bodyText": "Thank you so much, @dooboolab , for writing this!\nMake the following changes when you have a moment:\n\nKeep the title strings mandatory for the Semantics system to read.\nMake titles something that's shown by default but hideable.\n\nWhen hidden, the layout responds as if they are not there at all (as opposed to now where you pass \"\" and still have room for titles.)",
                "createdAt": "2018-10-16T21:03:46Z"
            },
            {
                "author": "hyochan",
                "bodyText": "@willlarche Thank you for the review. I've updated the codes applying to your review. I've created showLabel parameter in BottomNavigationBarItem that judges the rendering for the label. Would this be ok?",
                "createdAt": "2018-10-16T23:38:42Z"
            },
            {
                "author": "hyochan",
                "bodyText": "@willlarche Hi. Sorry for the late comeback. I was busy preparing for the Y-Combinator interview.\nI don't quite understand your review because the purpose of this update is to provide ability to support bottomNavigationBarItem without label.\nBelow is expected feature.\n\nBottomNavigationBarItem with labels.\n\nBottomNavigationBarItem without labels.\nI supported this providing showLabel attribute. Is there something I've not understood?",
                "createdAt": "2018-11-13T02:11:53Z"
            },
            {
                "author": "willlarche",
                "bodyText": "Yes, sorry. The accessibility experience needs to be the same with and without titles. Accessibility in Flutter is done thru the Semantics APIs. https://www.didierboelens.com/2018/07/semantics/\nI've posted an image of what the semantics tree looks like with the titles (like before) and then what the tree looks like without the titles (new version.) We need them to be identical no matter what the front end looks like. So, even without seeing the titles, a blind user would be able to hear them.",
                "createdAt": "2018-11-19T16:16:46Z"
            },
            {
                "author": "willlarche",
                "bodyText": "@hyochan are you ready for re-review on this?",
                "createdAt": "2019-01-03T22:57:03Z"
            },
            {
                "author": "ohenley",
                "bodyText": "Did patch my flutter using this commit. Eg. win my case bottom_navigation_bar builds fixed label. I declare:\nBottomNavigationBarItem(\nicon: Icon(Icons.search),\ntitle: Text(\"search\"),\nlabel: \"search\",\nshowLabel: false),\nI still have \"ghost\" space for the text and therefore my icons are not centered on the main axis.\nAm I using it wrong or it is the intended behavior?\nThx.",
                "createdAt": "2019-01-12T05:01:34Z"
            },
            {
                "author": "googlebot",
                "bodyText": "So there's good news and bad news.\n\ud83d\udc4d The good news is that everyone that needs to sign a CLA (the pull request submitter and all commit authors) have done so.  Everything is all good there.\n\ud83d\ude15 The bad news is that it appears that one or more commits were authored or co-authored by someone other than the pull request submitter.  We need to confirm that all authors are ok with their commits being contributed to this project.  Please have them confirm that here in the pull request.\nNote to project maintainer: This is a terminal state, meaning the cla/google commit status will not change from this state. It's up to you to confirm consent of all the commit author(s), set the cla label to yes (if enabled on your project), and then merge this pull request when appropriate.",
                "createdAt": "2019-01-12T14:34:07Z"
            },
            {
                "author": "googlebot",
                "bodyText": "CLAs look good, thanks!",
                "createdAt": "2019-01-12T14:35:07Z"
            },
            {
                "author": "hyochan",
                "bodyText": "@willlarche I've just updated my code. Sorry for the delay, I needed to think the way to support semanticLabel since the title widget could be any widget including, Container. I tried to get text value out of Text widget. I've also done the rebase. Lastly, I've tried to expose heightFactor in last commit to support flexible design (Don't know why the last commit fails the build tough). Please review my update!\n@ohenley My code wasn't ready since I was applying to support semanticLabel. Could you try current update?",
                "createdAt": "2019-01-12T14:38:39Z"
            },
            {
                "author": "hyochan",
                "bodyText": "@willlarche Well, I thought that was expected when bottomNavigationBar is built with\ntype: BottomNavigationBarType.shifting\n\nwhich is the default type. If you don't want your icon to rise, I think we should use below.\ntype: BottomNavigationBarType.fixed\n\nP.S. I've just pushed another commit since I found unnecessary margin in fixedLabel.",
                "createdAt": "2019-01-13T02:52:40Z"
            },
            {
                "author": "ohenley",
                "bodyText": "@hyochan:\ncan not try today, will do tomorrow.\n@willlarche and @hyochan :\nregarding the clock icon rising, just to add to the comment by hyochan, from what I recall of the implementation, type: BottomNavigationBarType.shifting (icon rising behaviour) is selected automatically in code when you have more than 3 navigation_bar_item in the nav_bar.",
                "createdAt": "2019-01-13T16:34:31Z"
            },
            {
                "author": "willlarche",
                "bodyText": "You're right! Thanks for your patience.\nSo, this looks almost there. I'll put in a couple notes at the request of @jonahwilliams who will take over review as I'll be unavailable for 3 weeks.",
                "createdAt": "2019-01-16T03:34:20Z"
            },
            {
                "author": "hyochan",
                "bodyText": "@jonahwilliams I've made the fix. Thanks.",
                "createdAt": "2019-01-18T01:57:21Z"
            },
            {
                "author": "hyochan",
                "bodyText": "@jonahwilliams Thanks for the review. I've made the update to your feedback.",
                "createdAt": "2019-01-18T08:14:05Z"
            },
            {
                "author": "hyochan",
                "bodyText": "@jonahwilliams I've like to continue working #22685 when this is merged.",
                "createdAt": "2019-01-28T02:42:54Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "@hyochan We don't actually use flutter format ourselves, the additional diff should be reverted. We still need test cases to land this. Some examples:\nGiven a bottom navigation bar with showLabel= false, expect that there is no rendered text.\nGiven a bottom navigation bar with showLabel=false, expect that the semantics contains the label.",
                "createdAt": "2019-01-31T23:31:16Z"
            },
            {
                "author": "hyochan",
                "bodyText": "@jonahwilliams I've added test case on Given a bottom navigation bar with showLabel= false, expect that there is no rendered text.. However, I've not tested additional semantics because I've seen they are already covered in testWidgets('BottomNavigationBar.fixed semantics' and testWidgets('BottomNavigationBar.shifting semantics',.\nAlso, I'd like to ask you how do I know if my test code is passing? I'd like to know how to test this in my local env.\nI've tried below referring to LINK. Since I couldn't find bin/run.dart I've tried dev/devicelab/bin/run.dart instead.\n\u279c  flutter git:(bottom_navigation_bar) ~/development/flutter/bin/cache/dart-sdk/bin/dart dev/devicelab/bin/run.dart -t ./packages/flutter/lib/src/material/bottom_navigation_bar.dart \nError: Could not resolve the package 'args' in 'package:args/args.dart'.\nError: Could not resolve the package 'path' in 'package:path/path.dart'.\nError: Could not resolve the package 'flutter_devicelab' in 'package:flutter_devicelab/framework/manifest.dart'.\nError: Could not resolve the package 'flutter_devicelab' in 'package:flutter_devicelab/framework/runner.dart'.\nError: Could not resolve the package 'flutter_devicelab' in 'package:flutter_devicelab/framework/utils.dart'.\ndev/devicelab/bin/run.dart:9:8: Error: Not found: 'package:args/args.dart'\nimport 'package:args/args.dart';\n       ^\ndev/devicelab/bin/run.dart:10:8: Error: Not found: 'package:path/path.dart'\nimport 'package:path/path.dart' as path;\n       ^\ndev/devicelab/bin/run.dart:12:8: Error: Not found: 'package:flutter_devicelab/framework/manifest.dart'\nimport 'package:flutter_devicelab/framework/manifest.dart';\n       ^\ndev/devicelab/bin/run.dart:13:8: Error: Not found: 'package:flutter_devicelab/framework/runner.dart'\nimport 'package:flutter_devicelab/framework/runner.dart';\n       ^\ndev/devicelab/bin/run.dart:14:8: Error: Not found: 'package:flutter_devicelab/framework/utils.dart'\nimport 'package:flutter_devicelab/framework/utils.dart';\n       ^",
                "createdAt": "2019-02-01T18:36:22Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Sorry for the delay @hyochan , in your local flutter checkout you can run flutter analyze  for analysis errors and flutter test for the test files in flutter/packages/flutter. The devicelab is just for integration tests, you don't need to worry about it",
                "createdAt": "2019-02-10T18:21:52Z"
            },
            {
                "author": "hyochan",
                "bodyText": "@jonahwilliams I've just run flutter test in flutter/packages/flutter and unedited flutter codes is even failing. Below is output.\n...\n  Failed to load \"/Users/hyochan/development/flutter/packages/flutter/test/widgets/gesture_detector_semantics_test.dart\":\n  Too many open files\n    Command: /Users/hyochan/development/flutter/bin/cache/artifacts/engine/darwin-x64/flutter_tester --disable-observatory --enable-checked-mode --verify-entry-points --enable-software-rendering --skia-deterministic-rendering --enable-dart-profiling --non-interactive --use-test-fonts --packages=/Users/hyochan/development/flutter/packages/flutter/.packages /var/folders/7p/gd_4b3gx5j3fwncvhz_r6mdc0000gn/T/flutter_test_listener.LtDQXM/listener.dart.dill\n05:05 +1616 ~33 -273: loading /Users/hyochan/development/flutter/packages/flutter/test/widgets/semantics_merge_test.dart [E]                                                                                 \n  Failed to load \"/Users/hyochan/development/flutter/packages/flutter/test/widgets/semantics_merge_test.dart\":\n  Too many open files\n    Command: /Users/hyochan/development/flutter/bin/cache/artifacts/engine/darwin-x64/flutter_tester --disable-observatory --enable-checked-mode --verify-entry-points --enable-software-rendering --skia-deterministic-rendering --enable-dart-profiling --non-interactive --use-test-fonts --packages=/Users/hyochan/development/flutter/packages/flutter/.packages /var/folders/7p/gd_4b3gx5j3fwncvhz_r6mdc0000gn/T/flutter_test_listener.HwrcPg/listener.dart.dill\n05:05 +1616 ~33 -274: loading /Users/hyochan/development/flutter/packages/flutter/test/widgets/status_transitions_test.dart [E]                                                                              \n  Failed to load \"/Users/hyochan/development/flutter/packages/flutter/test/widgets/status_transitions_test.dart\":\n  Too many open files\n    Command: /Users/hyochan/development/flutter/bin/cache/artifacts/engine/darwin-x64/flutter_tester --disable-observatory --enable-checked-mode --verify-entry-points --enable-software-rendering --skia-deterministic-rendering --enable-dart-profiling --non-interactive --use-test-fonts --packages=/Users/hyochan/development/flutter/packages/flutter/.packages /var/folders/7p/gd_4b3gx5j3fwncvhz_r6mdc0000gn/T/flutter_test_listener.JOqaKk/listener.dart.dill\n05:06 +1616 ~33 -275: loading /Users/hyochan/development/flutter/packages/flutter/test/widgets/overflow_box_test.dart [E]                                                                                    \n  Failed to load \"/Users/hyochan/development/flutter/packages/flutter/test/widgets/overflow_box_test.dart\":\n  Too many open files\n    Command: /Users/hyochan/development/flutter/bin/cache/artifacts/engine/darwin-x64/flutter_tester --disable-observatory --enable-checked-mode --verify-entry-points --enable-software-rendering --skia-deterministic-rendering --enable-dart-profiling --non-interactive --use-test-fonts --packages=/Users/hyochan/development/flutter/packages/flutter/.packages /var/folders/7p/gd_4b3gx5j3fwncvhz_r6mdc0000gn/T/flutter_test_listener.PxvkOq/listener.dart.dill\n05:06 +1616 ~33 -276: loading /Users/hyochan/development/flutter/packages/flutter/test/widgets/positioned_test.dart [E]                                                                                      \n  Failed to load \"/Users/hyochan/development/flutter/packages/flutter/test/widgets/positioned_test.dart\":\n  Too many open files\n    Command: /Users/hyochan/development/flutter/bin/cache/artifacts/engine/darwin-x64/flutter_tester --disable-observatory --enable-checked-mode --verify-entry-points --enable-software-rendering --skia-deterministic-rendering --enable-dart-profiling --non-interactive --use-test-fonts --packages=/Users/hyochan/development/flutter/packages/flutter/.packages /var/folders/7p/gd_4b3gx5j3fwncvhz_r6mdc0000gn/T/flutter_test_listener.7G2IPO/listener.dart.dill\n05:06 +1616 ~33 -277: loading /Users/hyochan/development/flutter/packages/flutter/test/widgets/shader_mask_test.dart [E]                                                                                     \n  Failed to load \"/Users/hyochan/development/flutter/packages/flutter/test/widgets/shader_mask_test.dart\":\n  Too many open files\n    Command: /Users/hyochan/development/flutter/bin/cache/artifacts/engine/darwin-x64/flutter_tester --disable-observatory --enable-checked-mode --verify-entry-points --enable-software-rendering --skia-deterministic-rendering --enable-dart-profiling --non-interactive --use-test-fonts --packages=/Users/hyochan/development/flutter/packages/flutter/.packages /var/folders/7p/gd_4b3gx5j3fwncvhz_r6mdc0000gn/T/flutter_test_listener.8TL537/listener.dart.dill\n05:06 +1616 ~33 -278: loading /Users/hyochan/development/flutter/packages/flutter/test/widgets/slivers_test.dart [E]                                                                                         \n  Failed to load \"/Users/hyochan/development/flutter/packages/flutter/test/widgets/slivers_test.dart\":\n  Too many open files\n    Command: /Users/hyochan/development/flutter/bin/cache/artifacts/engine/darwin-x64/flutter_tester --disable-observatory --enable-checked-mode --verify-entry-points --enable-software-rendering --skia-deterministic-rendering --enable-dart-profiling --non-interactive --use-test-fonts --packages=/Users/hyochan/development/flutter/packages/flutter/.packages /var/folders/7p/gd_4b3gx5j3fwncvhz_r6mdc0000gn/T/flutter_test_listener.9E2VQW/listener.dart.dill\n05:07 +1616 ~33 -279: loading /Users/hyochan/development/flutter/packages/flutter/test/widgets/draggable_test.dart [E]                                                                                       \n  Failed to load \"/Users/hyochan/development/flutter/packages/flutter/test/widgets/draggable_test.dart\":\n  Too many open files\n    Command: /Users/hyochan/development/flutter/bin/cache/artifacts/engine/darwin-x64/flutter_tester --disable-observatory --enable-checked-mode --verify-entry-points --enable-software-rendering --skia-deterministic-rendering --enable-dart-profiling --non-interactive --use-test-fonts --packages=/Users/hyochan/development/flutter/packages/flutter/.packages /var/folders/7p/gd_4b3gx5j3fwncvhz_r6mdc0000gn/T/flutter_test_listener.rtBJH0/listener.dart.dill\n05:07 +1616 ~33 -280: loading /Users/hyochan/development/flutter/packages/flutter/test/widgets/global_keys_moving_test.dart [E]                                                                              \n  Failed to load \"/Users/hyochan/development/flutter/packages/flutter/test/widgets/global_keys_moving_test.dart\":\n  Too many open files\n    Command: /Users/hyochan/development/flutter/bin/cache/artifacts/engine/darwin-x64/flutter_tester --disable-observatory --enable-checked-mode --verify-entry-points --enable-software-rendering --skia-deterministic-rendering --enable-dart-profiling --non-interactive --use-test-fonts --packages=/Users/hyochan/development/flutter/packages/flutter/.packages /var/folders/7p/gd_4b3gx5j3fwncvhz_r6mdc0000gn/T/flutter_test_listener.sjQbBR/listener.dart.dill\n05:07 +1616 ~33 -281: loading /Users/hyochan/development/flutter/packages/flutter/test/widgets/notification_test.dart [E]                                                                                    \n  Failed to load \"/Users/hyochan/development/flutter/packages/flutter/test/widgets/notification_test.dart\":\n  Too many open files\n    Command: /Users/hyochan/development/flutter/bin/cache/artifacts/engine/darwin-x64/flutter_tester --disable-observatory --enable-checked-mode --verify-entry-points --enable-software-rendering --skia-deterministic-rendering --enable-dart-profiling --non-interactive --use-test-fonts --packages=/Users/hyochan/development/flutter/packages/flutter/.packages /var/folders/7p/gd_4b3gx5j3fwncvhz_r6mdc0000gn/T/flutter_test_listener.r5Qde7/listener.dart.dill\n05:07 +1616 ~33 -282: loading /Users/hyochan/development/flutter/packages/flutter/test/widgets/list_view_misc_test.dart [E]                                                                                  \n  Failed to load \"/Users/hyochan/development/flutter/packages/flutter/test/widgets/list_view_misc_test.dart\":\n  Too many open files\n    Command: /Users/hyochan/development/flutter/bin/cache/artifacts/engine/darwin-x64/flutter_tester --disable-observatory --enable-checked-mode --verify-entry-points --enable-software-rendering --skia-deterministic-rendering --enable-dart-profiling --non-interactive --use-test-fonts --packages=/Users/hyochan/development/flutter/packages/flutter/.packages /var/folders/7p/gd_4b3gx5j3fwncvhz_r6mdc0000gn/T/flutter_test_listener.ET9Idv/listener.dart.dill\n05:08 +1616 ~33 -283: loading /Users/hyochan/development/flutter/packages/flutter/test/widgets/text_golden_test.dart [E]                                                                                     \n  Failed to load \"/Users/hyochan/development/flutter/packages/flutter/test/widgets/text_golden_test.dart\":\n  Too many open files\n    Command: /Users/hyochan/development/flutter/bin/cache/artifacts/engine/darwin-x64/flutter_tester --disable-observatory --enable-checked-mode --verify-entry-points --enable-software-rendering --skia-deterministic-rendering --enable-dart-profiling --non-interactive --use-test-fonts --packages=/Users/hyochan/development/flutter/packages/flutter/.packages /var/folders/7p/gd_4b3gx5j3fwncvhz_r6mdc0000gn/T/flutter_test_listener.SfSjMN/listener.dart.dill\n05:08 +1616 ~33 -284: loading /Users/hyochan/development/flutter/packages/flutter/test/widgets/shadow_test.dart [E]                                                                                          \n  Failed to load \"/Users/hyochan/development/flutter/packages/flutter/test/widgets/shadow_test.dart\":\n  Too many open files\n    Command: /Users/hyochan/development/flutter/bin/cache/artifacts/engine/darwin-x64/flutter_tester --disable-observatory --enable-checked-mode --verify-entry-points --enable-software-rendering --skia-deterministic-rendering --enable-dart-profiling --non-interactive --use-test-fonts --packages=/Users/hyochan/development/flutter/packages/flutter/.packages /var/folders/7p/gd_4b3gx5j3fwncvhz_r6mdc0000gn/T/flutter_test_listener.IkcqW5/listener.dart.dill\n05:08 +1616 ~33 -285: loading /Users/hyochan/development/flutter/packages/flutter/test/widgets/text_test.dart [E]                                                                                            \n  Failed to load \"/Users/hyochan/development/flutter/packages/flutter/test/widgets/text_test.dart\":\n  Too many open files\n    Command: /Users/hyochan/development/flutter/bin/cache/artifacts/engine/darwin-x64/flutter_tester --disable-observatory --enable-checked-mode --verify-entry-points --enable-software-rendering --skia-deterministic-rendering --enable-dart-profiling --non-interactive --use-test-fonts --packages=/Users/hyochan/development/flutter/packages/flutter/.packages /var/folders/7p/gd_4b3gx5j3fwncvhz_r6mdc0000gn/T/flutter_test_listener.5vXHhJ/listener.dart.dill\n05:08 +1616 ~33 -286: loading /Users/hyochan/development/flutter/packages/flutter/test/widgets/semantics_tester_generateTestSemanticsExpressionForCurrentSemanticsTree_test.dart [E]                         \n  Failed to load \"/Users/hyochan/development/flutter/packages/flutter/test/widgets/semantics_tester_generateTestSemanticsExpressionForCurrentSemanticsTree_test.dart\":\n  Too many open files\n    Command: /Users/hyochan/development/flutter/bin/cache/artifacts/engine/darwin-x64/flutter_tester --disable-observatory --enable-checked-mode --verify-entry-points --enable-software-rendering --skia-deterministic-rendering --enable-dart-profiling --non-interactive --use-test-fonts --packages=/Users/hyochan/development/flutter/packages/flutter/.packages /var/folders/7p/gd_4b3gx5j3fwncvhz_r6mdc0000gn/T/flutter_test_listener.bSSgcl/listener.dart.dill\n05:09 +1616 ~33 -287: loading /Users/hyochan/development/flutter/packages/flutter/test/widgets/scroll_physics_test.dart [E]                                                                                  \n  Failed to load \"/Users/hyochan/development/flutter/packages/flutter/test/widgets/scroll_physics_test.dart\":\n  Too many open files\n    Command: /Users/hyochan/development/flutter/bin/cache/artifacts/engine/darwin-x64/flutter_tester --disable-observatory --enable-checked-mode --verify-entry-points --enable-software-rendering --skia-deterministic-rendering --enable-dart-profiling --non-interactive --use-test-fonts --packages=/Users/hyochan/development/flutter/packages/flutter/.packages /var/folders/7p/gd_4b3gx5j3fwncvhz_r6mdc0000gn/T/flutter_test_listener.bj5POb/listener.dart.dill\n05:09 +1616 ~33 -288: loading /Users/hyochan/development/flutter/packages/flutter/test/widgets/size_changed_layout_notification_test.dart [E]                                                                \n  Failed to load \"/Users/hyochan/development/flutter/packages/flutter/test/widgets/size_changed_layout_notification_test.dart\":\n  Too many open files\n    Command: /Users/hyochan/development/flutter/bin/cache/artifacts/engine/darwin-x64/flutter_tester --disable-observatory --enable-checked-mode --verify-entry-points --enable-software-rendering --skia-deterministic-rendering --enable-dart-profiling --non-interactive --use-test-fonts --packages=/Users/hyochan/development/flutter/packages/flutter/.packages /var/folders/7p/gd_4b3gx5j3fwncvhz_r6mdc0000gn/T/flutter_test_listener.35cFel/listener.dart.dill\n05:09 +1616 ~33 -289: loading /Users/hyochan/development/flutter/packages/flutter/test/widgets/nested_scroll_view_test.dart [E]                                                                              \n  Failed to load \"/Users/hyochan/development/flutter/packages/flutter/test/widgets/nested_scroll_view_test.dart\":\n  Too many open files\n    Command: /Users/hyochan/development/flutter/bin/cache/artifacts/engine/darwin-x64/flutter_tester --disable-observatory --enable-checked-mode --verify-entry-points --enable-software-rendering --skia-deterministic-rendering --enable-dart-profiling --non-interactive --use-test-fonts --packages=/Users/hyochan/development/flutter/packages/flutter/.packages /var/folders/7p/gd_4b3gx5j3fwncvhz_r6mdc0000gn/T/flutter_test_listener.P3LEnX/listener.dart.dill\n05:09 +1616 ~33 -290: loading /Users/hyochan/development/flutter/packages/flutter/test/widgets/grid_view_test.dart [E]                                                                                       \n  Failed to load \"/Users/hyochan/development/flutter/packages/flutter/test/widgets/grid_view_test.dart\":\n  Too many open files\n    Command: /Users/hyochan/development/flutter/bin/cache/artifacts/engine/darwin-x64/flutter_tester --disable-observatory --enable-checked-mode --verify-entry-points --enable-software-rendering --skia-deterministic-rendering --enable-dart-profiling --non-interactive --use-test-fonts --packages=/Users/hyochan/development/flutter/packages/flutter/.packages /var/folders/7p/gd_4b3gx5j3fwncvhz_r6mdc0000gn/T/flutter_test_listener.3Wm8JF/listener.dart.dill\n05:10 +1616 ~33 -291: loading /Users/hyochan/development/flutter/packages/flutter/test/widgets/image_package_asset_test.dart [E]                                                                             \n  Failed to load \"/Users/hyochan/development/flutter/packages/flutter/test/widgets/image_package_asset_test.dart\":\n  Too many open files\n    Command: /Users/hyochan/development/flutter/bin/cache/artifacts/engine/darwin-x64/flutter_tester --disable-observatory --enable-checked-mode --verify-entry-points --enable-software-rendering --skia-deterministic-rendering --enable-dart-profiling --non-interactive --use-test-fonts --packages=/Users/hyochan/development/flutter/packages/flutter/.packages /var/folders/7p/gd_4b3gx5j3fwncvhz_r6mdc0000gn/T/flutter_test_listener.kB5HNv/listener.dart.dill\n05:10 +1616 ~33 -292: loading /Users/hyochan/development/flutter/packages/flutter/test/widgets/set_state_2_test.dart [E]                                                                                     \n  Failed to load \"/Users/hyochan/development/flutter/packages/flutter/test/widgets/set_state_2_test.dart\":\n  Too many open files\n    Command: /Users/hyochan/development/flutter/bin/cache/artifacts/engine/darwin-x64/flutter_tester --disable-observatory --enable-checked-mode --verify-entry-points --enable-software-rendering --skia-deterministic-rendering --enable-dart-profiling --non-interactive --use-test-fonts --packages=/Users/hyochan/development/flutter/packages/flutter/.packages /var/folders/7p/gd_4b3gx5j3fwncvhz_r6mdc0000gn/T/flutter_test_listener.2BMoVM/listener.dart.dill\n05:10 +1616 ~33 -293: loading /Users/hyochan/development/flutter/packages/flutter/test/widgets/remember_scroll_position_test.dart [E]                                                                        \n  Failed to load \"/Users/hyochan/development/flutter/packages/flutter/test/widgets/remember_scroll_position_test.dart\":\n  Too many open files\n    Command: /Users/hyochan/development/flutter/bin/cache/artifacts/engine/darwin-x64/flutter_tester --disable-observatory --enable-checked-mode --verify-entry-points --enable-software-rendering --skia-deterministic-rendering --enable-dart-profiling --non-interactive --use-test-fonts --packages=/Users/hyochan/development/flutter/packages/flutter/.packages /var/folders/7p/gd_4b3gx5j3fwncvhz_r6mdc0000gn/T/flutter_test_listener.mngHxl/listener.dart.dill\n05:10 +1616 ~33 -294: loading /Users/hyochan/development/flutter/packages/flutter/test/widgets/semantics_10_test.dart [E]                                                                                    \n  Failed to load \"/Users/hyochan/development/flutter/packages/flutter/test/widgets/semantics_10_test.dart\":\n  Too many open files\n    Command: /Users/hyochan/development/flutter/bin/cache/artifacts/engine/darwin-x64/flutter_tester --disable-observatory --enable-checked-mode --verify-entry-points --enable-software-rendering --skia-deterministic-rendering --enable-dart-profiling --non-interactive --use-test-fonts --packages=/Users/hyochan/development/flutter/packages/flutter/.packages /var/folders/7p/gd_4b3gx5j3fwncvhz_r6mdc0000gn/T/flutter_test_listener.CaFSev/listener.dart.dill\n05:11 +1616 ~33 -295: loading /Users/hyochan/development/flutter/packages/flutter/test/widgets/sliver_fill_viewport_test.dart [E]                                                                            \n  Failed to load \"/Users/hyochan/development/flutter/packages/flutter/test/widgets/sliver_fill_viewport_test.dart\":\n  Too many open files\n    Command: /Users/hyochan/development/flutter/bin/cache/artifacts/engine/darwin-x64/flutter_tester --disable-observatory --enable-checked-mode --verify-entry-points --enable-software-rendering --skia-deterministic-rendering --enable-dart-profiling --non-interactive --use-test-fonts --packages=/Users/hyochan/development/flutter/packages/flutter/.packages /var/folders/7p/gd_4b3gx5j3fwncvhz_r6mdc0000gn/T/flutter_test_listener.5DnWY2/listener.dart.dill\n05:11 +1616 ~33 -295: loading /Users/hyochan/development/flutter/packages/flutter/test/widgets/visibility_test.dart                                                                               05:11 +1616 ~33 -295: /Users/hyochan/development/flutter/packages/flutter/test/widgets/dispose_ancestor_lookup_test.dart: inheritFromWidgetOfExactType() called from dispose() throws error       05:11 +1616 ~33 -296: loading /Users/hyochan/development/flutter/packages/flutter/test/widgets/visibility_test.dart [E]                                                                                      \n  Failed to load \"/Users/hyochan/development/flutter/packages/flutter/test/widgets/visibility_test.dart\":\n  Too many open files\n    Command: /Users/hyochan/development/flutter/bin/cache/artifacts/engine/darwin-x64/flutter_tester --disable-observatory --enable-checked-mode --verify-entry-points --enable-software-rendering --skia-deterministic-rendering --enable-dart-profiling --non-interactive --use-test-fonts --packages=/Users/hyochan/development/flutter/packages/flutter/.packages /var/folders/7p/gd_4b3gx5j3fwncvhz_r6mdc0000gn/T/flutter_test_listener.KB3tin/listener.dart.dill\n05:11 +1617 ~33 -296: /Users/hyochan/development/flutter/packages/flutter/test/widgets/dispose_ancestor_lookup_test.dart: inheritFromWidgetOfExactType() called from dispose() throws error       05:11 +1617 ~33 -296: /Users/hyochan/development/flutter/packages/flutter/test/widgets/dispose_ancestor_lookup_test.dart: ancestorInheritedElementForWidgetOfExactType() called from dispose() thr05:11 +1618 ~33 -296: /Users/hyochan/development/flutter/packages/flutter/test/widgets/dispose_ancestor_lookup_test.dart: ancestorInheritedElementForWidgetOfExactType() called from dispose() thr05:11 +1618 ~33 -296: /Users/hyochan/development/flutter/packages/flutter/test/widgets/dispose_ancestor_lookup_test.dart: ancestorWidgetOfExactType() called from dispose() throws error          05:11 +1619 ~33 -296: /Users/hyochan/development/flutter/packages/flutter/test/widgets/dispose_ancestor_lookup_test.dart: ancestorWidgetOfExactType() called from dispose() throws error          05:11 +1619 ~33 -296: /Users/hyochan/development/flutter/packages/flutter/test/widgets/dispose_ancestor_lookup_test.dart: ancestorStateOfType() called from dispose() throws error                05:11 +1620 ~33 -296: /Users/hyochan/development/flutter/packages/flutter/test/widgets/dispose_ancestor_lookup_test.dart: ancestorStateOfType() called from dispose() throws error                05:11 +1620 ~33 -296: /Users/hyochan/development/flutter/packages/flutter/test/widgets/dispose_ancestor_lookup_test.dart: ancestorRenderObjectOfType() called from dispose() throws error         05:12 +1620 ~33 -296: /Users/hyochan/development/flutter/packages/flutter/test/widgets/dispose_ancestor_lookup_test.dart: ancestorRenderObjectOfType() called from dispose() throws error         05:12 +1621 ~33 -296: /Users/hyochan/development/flutter/packages/flutter/test/widgets/dispose_ancestor_lookup_test.dart: ancestorRenderObjectOfType() called from dispose() throws error         05:12 +1621 ~33 -296: /Users/hyochan/development/flutter/packages/flutter/test/widgets/dispose_ancestor_lookup_test.dart: visitAncestorElements() called from dispose() throws error              05:12 +1622 ~33 -296: /Users/hyochan/development/flutter/packages/flutter/test/widgets/dispose_ancestor_lookup_test.dart: visitAncestorElements() called from dispose() throws error              05:12 +1622 ~33 -296: /Users/hyochan/development/flutter/packages/flutter/test/widgets/dispose_ancestor_lookup_test.dart: dispose() method does not unconditionally throw an error                05:12 +1623 ~33 -296: /Users/hyochan/development/flutter/packages/flutter/test/widgets/dispose_ancestor_lookup_test.dart: dispose() method does not unconditionally throw an error                05:12 +1623 ~33 -296: Some tests failed.",
                "createdAt": "2019-02-11T04:21:36Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "See https://superuser.com/questions/433746/is-there-a-fix-for-the-too-many-open-files-in-system-error-on-os-x-10-7-1 for info on how to fix this.",
                "createdAt": "2019-02-11T04:25:22Z"
            },
            {
                "author": "googlebot",
                "bodyText": "So there's good news and bad news.\n\ud83d\udc4d The good news is that everyone that needs to sign a CLA (the pull request submitter and all commit authors) have done so.  Everything is all good there.\n\ud83d\ude15 The bad news is that it appears that one or more commits were authored or co-authored by someone other than the pull request submitter.  We need to confirm that all authors are ok with their commits being contributed to this project.  Please have them confirm that here in the pull request.\nNote to project maintainer: This is a terminal state, meaning the cla/google commit status will not change from this state. It's up to you to confirm consent of all the commit author(s), set the cla label to yes (if enabled on your project), and then merge this pull request when appropriate.",
                "createdAt": "2019-02-12T13:49:12Z"
            },
            {
                "author": "googlebot",
                "bodyText": "CLAs look good, thanks!",
                "createdAt": "2019-02-12T13:50:11Z"
            },
            {
                "author": "hyochan",
                "bodyText": "@jonahwilliams Thanks. I was able to do the job with your grateful help \ud83c\udf7b.\n\nP.S I've tested this locally and checked it is passing. I don't get why CI build is failing.",
                "createdAt": "2019-02-12T14:04:51Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Several files have trailing whitespace:\n\u23e9 RUNNING: cd .; grep --line-number --extended-regexp [[:blank:]]$ packages/flutter/lib/src/material/bottom_navigation_bar.dart packages/flutter/test/material/bottom_navigation_bar_test.dart\npackages/flutter/test/material/bottom_navigation_bar_test.dart:882:    \npackages/flutter/test/material/bottom_navigation_bar_test.dart:885: \npackages/flutter/test/material/bottom_navigation_bar_test.dart:927:    \n\ud83d\udd50 ELAPSED TIME: 0:00:00.022591 for grep --line-number --extended-regexp [[:blank:]]$ packages/flutter/lib/src/material/bottom_navigation_bar.dart packages/flutter/test/material/bottom_navigation_bar_test.dart in .: \nWhitespace detected at the end of source code lines.\nPlease remove:\n\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\u2501\nERROR: Last command exited with 0 (expected: 1).\nCommand: grep --line-number --extended-regexp [[:blank:]]$ packages/flutter/lib/src/material/bottom_navigation_bar.dart packages/flutter/test/material/bottom_navigation_bar_test.dart\nRelative working directory: .",
                "createdAt": "2019-02-12T16:07:41Z"
            },
            {
                "author": "willlarche",
                "bodyText": "@jonahwilliams 's approval and passing tests all that's needed now.",
                "createdAt": "2019-02-12T22:56:32Z"
            },
            {
                "author": "johnsonmh",
                "bodyText": "Hi Hyo, thanks so much for opening this PR and working on this feature since it is highly requested! I\u2019m making a number of unrelated changes to the BottomNavigationBar component in: #27698. My changes update the motion logic of the BottomNavigationBar and will remove some of the code you've been working in here. Would it be OK if I incorporate some of the work you did in your PR into my current PR? I will close your PR and add you as a co-author on the new PR.",
                "createdAt": "2019-02-13T00:38:11Z"
            },
            {
                "author": "hyochan",
                "bodyText": "@willlarche @jonahwilliams I think I made it now. Sorry that it took me times to recognize the process of contribution to flutter since this was my first time. I can do better next time. Please review once more.\n@johnsonmh Hi. Thank you for the great offer, but I'd like to make this PR as one complete one since I've been taking quite a time working on it. Also, I am thinking of another work based on this which is #22685. I am planning to close that one when I start working on that. I hope you could rebase if possible.",
                "createdAt": "2019-02-13T05:24:21Z"
            },
            {
                "author": "willlarche",
                "bodyText": "Put a temporary flag on it so I can merge it simultaneously with #27698 next week.",
                "createdAt": "2019-02-14T20:30:40Z"
            },
            {
                "author": "willlarche",
                "bodyText": "@hyochan , You've worked super hard on this and we want to land it. Since @johnsonmh 's PR would have a slight breaking change to yours, we're going to merge them together next week so there's no Flutter release between their merges. Just means holding for a few days! You're all set.",
                "createdAt": "2019-02-14T20:31:55Z"
            },
            {
                "author": "hyochan",
                "bodyText": "Thank you so much. I am very honored to contribute to this awesome Google project. I will do more and better next time.",
                "createdAt": "2019-02-15T06:42:12Z"
            },
            {
                "author": "willlarche",
                "bodyText": "No no. You did great. Sometimes development just happens in parallel like\nthis.\n\u2026\nOn Fri, Feb 15, 2019 at 01:43 Hyo Chan Jang ***@***.***> wrote:\n Thank you so much. I am very honored to contribute to this awesome Google\n project. I will do more and better next time.\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n <#22956 (comment)>,\n or mute the thread\n <https://github.com/notifications/unsubscribe-auth/ABNm5fS55xp3UrQVLRLwsY6Km6ermxmcks5vNlcdgaJpZM4XXnRG>\n .",
                "createdAt": "2019-02-15T13:42:39Z"
            },
            {
                "author": "HansMuller",
                "bodyText": "Similar versions of the changes and new tests included in this PR were also included in what is now #28159\nI'm going to close this PR in favor of #28159. I have listed you as a co-contributor on #28159, please let me know if that's OK.",
                "createdAt": "2019-02-19T20:19:39Z"
            },
            {
                "author": "hyochan",
                "bodyText": "@HansMuller I thought I've already answered above that I wish this PR could be merged as one complete one. I wished myself to list up my PR's and being motivated to contribute to flutter further. Why couldn't this be merged and rebase separately? I've also done quite a work rebasing because I had to wait for the reviews even though I was on the recent branch.",
                "createdAt": "2019-02-19T21:29:13Z"
            },
            {
                "author": "HansMuller",
                "bodyText": "@hyochan Right, but unfortunately the work you did here was independently duplicated in another PR that had broader scope (#28159).   It wouldn't make sense to land this PR only to effectively remove it with #28159.\nI wanted to give you credit for the work you did, which is why I added you as a co-contributor to #28519.",
                "createdAt": "2019-02-19T22:37:11Z"
            }
        ],
        "commentCount": 35
    },
    {
        "number": 14298,
        "title": "[fuchsia_remote_debug_protocol] Adds the fuchsia remote debug protocol library.",
        "author": "Andrew Davies",
        "state": "MERGED",
        "closedAt": "2018-03-23T00:19:03Z",
        "createdAt": "2018-01-26T20:59:02Z",
        "comments": [
            {
                "author": "yjbanov",
                "bodyText": "The high-level structure of this package LGTM. Let's do a round of design review, then style review. Let's also make sure the package is configured consistently with the other packages, e.g. transitive dependencies in pubspec.yaml.\nAlso, let's add tests! \ud83d\ude03",
                "createdAt": "2018-01-26T21:56:48Z"
            },
            {
                "author": "awdavies",
                "bodyText": "Most code is addressed.  Still figuring out what makes exiting the program hang (having some issues with observatory).",
                "createdAt": "2018-01-27T00:32:35Z"
            },
            {
                "author": "Hixie",
                "bodyText": "I'm concerned about this being a top-level package. Can you elaborate on the use case and why this is a package? Do we expect people to import it?",
                "createdAt": "2018-01-29T21:37:14Z"
            },
            {
                "author": "awdavies",
                "bodyText": "@Hixie the package is intended to function similar to the flutter_driver, but from the context of running in a Fuchsia environment.  This would require significant refactoring of the existing flutter_driver, due to the fact that there are often multiple instances of the Dart VM running at a given time, and that an application can be composed of multiple isolates across multiple Dart VM's.\nWe would expect people to import this, yes.  This change is mostly a dummy one for myself to figure out the basics of connecting/talking to the Fuchsia Dart VM (and to work out any potential issues I might run into with things like flutter analyze, continuous integration, etc) before trying to tackle a robust API.",
                "createdAt": "2018-01-30T00:16:23Z"
            },
            {
                "author": "Hixie",
                "bodyText": "Ah, I see. Maybe it should be called something like multiinstance_driver? I'm worried that flutter_fuchsia really doesn't convey what it is; the driver part of flutter_driver is really the important part, not the flutter part.",
                "createdAt": "2018-01-30T01:29:59Z"
            },
            {
                "author": "awdavies",
                "bodyText": "sgtm.  @yjbanov thoughts?",
                "createdAt": "2018-01-30T01:32:22Z"
            },
            {
                "author": "Hixie",
                "bodyText": "Also unless this is very fuchsia-specific I recommend keeping the API agnostic about the OS, because that way if we ever have a similar setup on another platform we can re-use this without the awkward problem of the classes referring to another OS. :-)",
                "createdAt": "2018-01-30T01:36:14Z"
            },
            {
                "author": "awdavies",
                "bodyText": "@Hixie To double check again with a comment Yegor made: should the License header be written under the Flutter team, or under the Fuchsia team?  I figure given the OS agnostic comment it'd be Copyrighted under the Flutter team?\n@yjbanov PTAL at the code (also check up on Ian's comments about the purpose of this package).",
                "createdAt": "2018-01-30T20:11:47Z"
            },
            {
                "author": "yjbanov",
                "bodyText": "@Hixie, all of the OS-agnostic bits will indeed go in package:flutter_driver. This new package would only contain Fuchsia-specific parts (How to talk to a Fuchsia device over USB and SSH. How to track the lifecycle of processes/stories/mods running in Fuchsia. How to enable/disable the driver extension inside a Flutter app running on Fuchsia.). One way to look at it is this is \"adb for Fuchsia\". It can indeed be imported and used independently of flutter_driver and flutter_tools (perhaps the Fuchsia infra team can use it for some testing). I still think that this package should live over in the Fuchsia source (similar to how adb is developed as part of the Android SDK), and managed and tested using Fuchsia infra (jiri and so on). But I failed to convince the Fuchsia team to do this. Developing it as part of Flutter but as a standalone package seemed like a good compromise.",
                "createdAt": "2018-01-30T22:40:36Z"
            },
            {
                "author": "yjbanov",
                "bodyText": "let's add tests\n when you ran flutter update-packages --force-upgrade, did it update other pubspecs? It usually does",
                "createdAt": "2018-01-30T22:56:12Z"
            },
            {
                "author": "awdavies",
                "bodyText": "Will do!\nYes, it did. I wasn't sure whether to include changes to other pubspecs as part of this change.",
                "createdAt": "2018-01-30T23:20:16Z"
            },
            {
                "author": "awdavies",
                "bodyText": "/CC @krisgiesing here's the start to the driver impl we discussed",
                "createdAt": "2018-01-30T23:25:54Z"
            },
            {
                "author": "yjbanov",
                "bodyText": "I wasn't sure whether to include changes to other pubspecs as part of this change.\n\nYes, they should be included. The analyzer will complain if the pubspecs have different version numbers.",
                "createdAt": "2018-01-30T23:42:37Z"
            },
            {
                "author": "Hixie",
                "bodyText": "I don't really understand what this package is. I can't work out if it's flutter-specific, fuchsia-specific, driver-specific, or what.\nCan we meet before this lands to discuss it?",
                "createdAt": "2018-01-31T05:10:31Z"
            },
            {
                "author": "Hixie",
                "bodyText": "@Hixie To double check again with a comment Yegor made: should the License header be written under the Flutter team, or under the Fuchsia team? I figure given the OS agnostic comment it'd be Copyrighted under the Flutter team?\n\nAll code in this repo should have the exact same copyright license. Just copy it from another file, do not change anything except (optionally) the year (if and only if you created the entire file from scratch).",
                "createdAt": "2018-01-31T05:11:13Z"
            },
            {
                "author": "Hixie",
                "bodyText": "Ok so @yjbanov explained some of the background to me, and now I have a better idea of what's going on.\nSeveral things come to mind:\n\nWe should make sure this is heavily tested, including the code that uses ssh and that talks over a Web socket.\nI think the code would be easier to read if every type and member didn't have the word \"fuchsia\" in it.\nRather than flutter_fuchsia, the library name should either be more descriptive, e.g. fuchsia_remote_debug_protocol, or something more pithy that will become a name we use to refer to it unambiguously, like fdb (with a parallel to adb).\nWe should find a solution that doesn't depend on the existence of a Fuchsia build tree. People will presumably develop for Fuchsia without having compiled it first.\nWe should avoid depending on logging or any other package that isn't critical; our long-term plan is to dramatically scale back our dependencies because everything we depend on is something we pin for all our developers.\nWe should support IPv6 from the get-go. Ideally we'd be agnostic as to v4 vs v6.\n_potentiallyAvailablePort is an antipattern; we've gone down that route several times in the past couple of years and it's always been a mistake. The race condition appears harmless but always becomes a flaky test or a crash or some such thing. We should allocate the port when we actually connect, not before then attempt to reuse it.\nI'm a little concerned about depending a magic file in /tmp on the host, but I presume that is something that will develop over time over in Fuchsia land.\nWe should make sure this follows the Flutter style guide and other conventions. For example, we should make sure to export everything (not just limited to show), have dartdocs for everything public (looks like this is already done), constructors first in classes, examples in .../examples/ rather than .../bin/, trailing commas in parameter declarations and argument lists so dartfmt does the right thing (basically an open (, {, or [ should either be followed by a newline or the matching close should be on the same line; and vice versa with the closing equivalents).",
                "createdAt": "2018-01-31T06:14:57Z"
            },
            {
                "author": "MarkOSullivan94",
                "bodyText": "@awdavies  / @Hixie could you provide a bit more clarity on what this is?",
                "createdAt": "2018-01-31T12:59:59Z"
            },
            {
                "author": "awdavies",
                "bodyText": "/CC @shrike69 @dglazkov\n(more interested parties)",
                "createdAt": "2018-01-31T23:04:39Z"
            },
            {
                "author": "Hixie",
                "bodyText": "@MarkOSullivan94 As I understand it, this is a library for use by flutter_tools and flutter_driver (and eventually maybe standalone tools shipped with the library itself) for connecting to a Fuchsia host and listing the Flutter views instantiated on that host.",
                "createdAt": "2018-01-31T23:37:13Z"
            },
            {
                "author": "awdavies",
                "bodyText": "Sorry for the delay.  Addressing concerns.\n\nWe should make sure this is heavily tested, including the code that uses ssh and that talks over a Web socket.\n\nWorking on that right now! \ud83d\ude04\n\nI think the code would be easier to read if every type and member didn't have the word \"fuchsia\" in it.\n\nDefinitely agree here, I'm just hoping to avoid stepping over existing namespaces (e.g. FlutterView, Isolate, VMService etc).\n\nWe should find a solution that doesn't depend on the existence of a Fuchsia build tree. People will presumably develop for Fuchsia without having compiled it first.\n\nAgreed.  My first instinct here was just to optionally point to an SSH config, though if there are more straightforward ways to connect to a Fuchsia instance I would definitely like to implement things that way instead.\n\nWe should avoid depending on logging or any other package that isn't critical; our long-term plan is to dramatically scale back our dependencies because everything we depend on is something we pin for all our developers.\n\nI can understand this, but is there a workaround so that we can support logging?  I think it is at least important to know if, say, the user doesn't have permission to bind to a port or the like.\n\nWe should support IPv6 from the get-go. Ideally we'd be agnostic as to v4 vs v6.\n\nCan do!\n\n_potentiallyAvailablePort is an antipattern; we've gone down that route several times in the past couple of years and it's always been a mistake. The race condition appears harmless but always becomes a flaky test or a crash or some such thing. We should allocate the port when we actually connect, not before then attempt to reuse it.\n\nAh.  This was something I blatantly stole from flutter_tools.  That race condition actually ended up being a huge problem on OSX for me, which is for the hack fallback code that I added.  I'll chop it out, though.\n\nI'm a little concerned about depending a magic file in /tmp on the host, but I presume that is something that will develop over time over in Fuchsia land.\n\nAgreed.  The hope is to work with Fuchsia to turn this into an established service so that information about the VM instances can be taken from a websocket similar to the existing Dart VM.  The intent for now is that this method is a placeholder.\n\nWe should make sure this follows the Flutter style guide and other conventions. For example, we should make sure to export everything (not just limited to show), have dartdocs for everything public (looks like this is already done), constructors first in classes, examples in .../examples/ rather than .../bin/, trailing commas in parameter declarations and argument lists so dartfmt does the right thing (basically an open (, {, or [ should either be followed by a newline or the matching close should be on the same line; and vice versa with the closing equivalents).\n\nThis was addressed recently, with the exceptions being ../bin/, exports, and trailing commas.  This along with testing and previous comments are in progress \ud83d\ude04",
                "createdAt": "2018-01-31T23:58:13Z"
            },
            {
                "author": "awdavies",
                "bodyText": "@awdavies / @Hixie could you provide a bit more clarity on what this is?\n\nLong term this is intended to replace lots of code that should be shared between flutter_driver and flutter_tools in such a way as to allow connecting to an arbitrary number of Dart VM's, and then on top of that allow for driving stories/mods on Fuchsia devices similar to flutter_driver.\nI am unsure where the highest priorities lie regarding those requirements.  I am simply implementing things with guidance from @yjbanov.  I am also unsure of how much information has been sync'd between @yjbanov and @Hixie.  It appears they are both on the same page now?  I need to sync up with Yegor, though, to make sure I understand (as far as I understand there is no up-to-date PRD or design doc to reference).\nAt the time of writing this I am under the impression this is initially going to be more Fuchsia-centric code, but now I'm not sure given the existing feedback.",
                "createdAt": "2018-02-01T00:05:00Z"
            },
            {
                "author": "Hixie",
                "bodyText": "I'm just hoping to avoid stepping over existing namespaces (e.g. FlutterView, Isolate, VMService etc).\n\nSince this is in its own package I wouldn't worry too much about that.\n\nI can understand this, but is there a workaround so that we can support logging?  I think it is at least important to know if, say, the user doesn't have permission to bind to a port or the like.\n\nSure, just use print or provide a callback that you invoke. Logging doesn't have to be particularly complicated. :-)\n\nAh.  This was something I blatantly stole from flutter_tools.\n\nOh dear, we still have code there that does this? I thought we'd excised all of it. Sigh. I'll file a bug or something to deal with that. In the meantime, yeah, let's avoid reproducing this mistake here.\nHappy to give a more detailed review, let me know when it's ready. :-)",
                "createdAt": "2018-02-01T00:09:51Z"
            },
            {
                "author": "awdavies",
                "bodyText": "@Hixie @yjbanov PTAL\nSupports IPv6 and has tests and such. Logging is self-contained, etc.  I've addressed all concerns AFAICT, though I'm unsure how well the code is tested regarding actual SSH.",
                "createdAt": "2018-02-09T00:52:45Z"
            },
            {
                "author": "yjbanov",
                "bodyText": "If @Hixie is ok with the high-level structure of this package, I can do a detailed code review.",
                "createdAt": "2018-02-14T17:21:30Z"
            },
            {
                "author": "yjbanov",
                "bodyText": "I will optimistically begin reviewing the code.",
                "createdAt": "2018-02-15T00:22:11Z"
            },
            {
                "author": "Hixie",
                "bodyText": "General approach SGTM.",
                "createdAt": "2018-02-15T00:50:08Z"
            },
            {
                "author": "awdavies",
                "bodyText": "@yjbanov Comments addressed.  PTAL",
                "createdAt": "2018-03-02T01:58:24Z"
            },
            {
                "author": "awdavies",
                "bodyText": "the unit tests run as part of our Travis script\n the package is captured by the analyzer\n  all types that are returned by public API are also exported through libraries under lib/ (so that a user does not have to import from lib/src)",
                "createdAt": "2018-03-15T01:35:51Z"
            },
            {
                "author": "awdavies",
                "bodyText": "@yjbanov @Hixie there are some minor analyzer issues (but these are due to the flutter package.  slider_theme.dart is also missing documented public members).",
                "createdAt": "2018-03-15T01:49:32Z"
            },
            {
                "author": "yjbanov",
                "bodyText": "@Hixie, did you want to do a code style pass on this PR, or is it good to merge?",
                "createdAt": "2018-03-20T00:17:00Z"
            },
            {
                "author": "Hixie",
                "bodyText": "Just some style nits and one race condition that we should fix before landing (we've had huge troubles with race conditions like this causing flakes, and I really don't want to go down that road again...).",
                "createdAt": "2018-03-20T18:18:34Z"
            },
            {
                "author": "awdavies",
                "bodyText": "@Hixie @yjbanov\nEverything should be ready to go!",
                "createdAt": "2018-03-22T00:02:57Z"
            },
            {
                "author": "awdavies",
                "bodyText": "Oh wait... had to fix a constructor.  Should be good.",
                "createdAt": "2018-03-22T00:09:02Z"
            },
            {
                "author": "Hixie",
                "bodyText": "",
                "createdAt": "2018-03-22T23:17:02Z"
            },
            {
                "author": "shrike69",
                "bodyText": "Great!",
                "createdAt": "2018-03-23T23:41:38Z"
            }
        ],
        "commentCount": 35
    },
    {
        "number": 103833,
        "title": "Add OvalBorder and BoxShape.oval ",
        "author": "Bernardo Ferrari",
        "state": "MERGED",
        "closedAt": "2022-07-20T21:29:05Z",
        "createdAt": "2022-05-14T22:49:21Z",
        "comments": [
            {
                "author": "bernaferrari",
                "bodyText": "Cc @gspencergoog. Kind of related to the PR you just reviewed \ud83d\ude05. This is a lot simpler.",
                "createdAt": "2022-05-18T20:27:48Z"
            },
            {
                "author": "gspencergoog",
                "bodyText": "I think if we're going to add a new shape, then it should support lerping to all the other shapes.  The problem is that adding a new shape is exponential in the number of lerps you need to implement, since not only does this have to lerp to, say, rectangle, rectangle needs to lerp to it. For three shapes, you need three lerp functions.  For five, you need ten. If we had 32 shapes, we'd need 496 lerp functions. (x = n(n-1)/2). We don't have to support every lerp, but the more the better.  I'd say at least oval->rectangle, oval->rounded rect, oval->circle, oval->stadium, and back again.\nIt also makes the burden of adding a new shape exponentially harder, so we should consider if this is one of the shapes we really want to have.  It seems reasonably likely that it is, but we should choose carefully.",
                "createdAt": "2022-05-19T17:53:26Z"
            },
            {
                "author": "bernaferrari",
                "bodyText": "What do you think if I made it as an attribute to CircleBorder? Like isOval? We would loose lerp between oval = true and oval = false, but it could be easier to update every Circle lerp.",
                "createdAt": "2022-05-19T18:27:52Z"
            },
            {
                "author": "gspencergoog",
                "bodyText": "I like that better, since it doesn't increase the cost of adding a new shape. What about making it more \"lerpable\": instead of a bool, make the parameter a double that goes from 0.0 to 1.0, where 0.0 is an oval, and 1.0 is a circle. The problem is the name of this parameter: circularity? rotundity? ovalness (reverse sense)? I think I'm leaning towards circularity.",
                "createdAt": "2022-05-19T19:50:27Z"
            },
            {
                "author": "gspencergoog",
                "bodyText": "Having it be a continuum will make it more useful anyhow: I can imagine wanting a semi-oval circle even when I don't want to lerp it.",
                "createdAt": "2022-05-19T19:52:08Z"
            },
            {
                "author": "bernaferrari",
                "bodyText": "I'll test that, probably tomorrow. There is already a property like you described used in lerping. It will be kind of weird, but let's see the result. Because we are not lerping from round to square, it is round with min bounds to round without bounds.",
                "createdAt": "2022-05-19T19:54:43Z"
            },
            {
                "author": "gspencergoog",
                "bodyText": "Yes, but I think the rect to circle lerp parameter isn't the same as this.  They probably need to be combined somehow, which might be complicated. Or it might just be a multiply in the right place, if you're lucky. :-)",
                "createdAt": "2022-05-19T19:58:28Z"
            },
            {
                "author": "bernaferrari",
                "bodyText": "It should be simple, just the end result might be kind of weird. Let's see tomorrow.",
                "createdAt": "2022-05-19T19:59:30Z"
            },
            {
                "author": "bernaferrari",
                "bodyText": "Here it goes!\nI also updated the sample code with a complex example lerping everything. Test is failing for mysterious reasons, might be something broken in the tree. I'll try to rebase another day.",
                "createdAt": "2022-05-23T17:00:01Z"
            },
            {
                "author": "gspencergoog",
                "bodyText": "I'll take a look.  What about \"eccentricity\" for the name instead of \"ovalness\"?\nI'm not sure it matches the textbook definition, but it does make some sense: eccentricity of 0.0 is a circle, and 1.0 is a very \"eccentric\" ellipse.\n\"The eccentricity of an ellipse is the ratio of the distance from the center to the foci and the distance from the center to the vertices.\"",
                "createdAt": "2022-05-23T22:31:39Z"
            },
            {
                "author": "bernaferrari",
                "bodyText": "I replaced ovalness with your circularity idea.\nI think 0.0 = ellipse and 1.0 = circle makes slightly more sense codewise while at the same time being weird to introduce a parameter that by default is 1.0, not 0.0. Both have pros and cons. I changed from ovalness to circularity to make this change. If you go back two or three commits you can see how it was and which way you prefer.\nBut eccentricity could also work. I guess first check the code, then we can discover the name we want. It could even be fitEdgesRatio or something that has zero relationship to a circle. What we are changing are the bounds from a square to a rectangle.",
                "createdAt": "2022-05-23T23:41:47Z"
            },
            {
                "author": "bernaferrari",
                "bodyText": "Now it is using eccentricity \ud83d\udc40",
                "createdAt": "2022-06-23T19:45:49Z"
            },
            {
                "author": "gspencergoog",
                "bodyText": "@bernaferrari are you still wanting to merge this?  I think we're really close here.",
                "createdAt": "2022-07-13T18:55:11Z"
            },
            {
                "author": "bernaferrari",
                "bodyText": "Yes, I just don't know what else we need. You never reviewed the code.",
                "createdAt": "2022-07-13T18:55:57Z"
            },
            {
                "author": "bernaferrari",
                "bodyText": "Don't worry, I'll forgive you if you can help give an end to the round outside StrokeAlign saga (either Flutter stays with the current one, we merge the other PR or we merge other and propose a new way for the one you and I like) before it is too late :P",
                "createdAt": "2022-07-13T20:37:09Z"
            },
            {
                "author": "Hixie",
                "bodyText": "I think if we're going to add a new shape, then it should support lerping to all the other shapes. The problem is that adding a new shape is exponential in the number of lerps you need to implement, since not only does this have to lerp to, say, rectangle, rectangle needs to lerp to it. For three shapes, you need three lerp functions. For five, you need ten. If we had 32 shapes, we'd need 496 lerp functions. (x = n(n-1)/2).\n\nIt's actually a bit more complicated than that, because some of the lerps actually generate new (otherwise inaccessible) types, which you then need to be able to lerp to/from. For example, _CompoundBorder, _RoundedRectangleToCircleBorder, _StadiumToRoundedRectangleBorder, etc. And do we need to support lerping from a _RoundedRectangleToCircleBorder to a _StadiumToRoundedRectangleBorder? How would we even implement that without making at least one public. :-)",
                "createdAt": "2022-07-18T23:42:58Z"
            },
            {
                "author": "bernaferrari",
                "bodyText": "Ok, I fixed the issue and made some tiny changes:\n\nAdded lerpTo to OvalBorder (lerpFrom/lerpTo is optional).\nRename RoundedRectangleBorder(..., 50% of the way to being a CircleBorder that is 20% circular) to 20% oval (since now 100% = totally oval, 0% = circle)\nAdded that string to StadiumBorder lerp (ops).\n\nReady for Google Testing again.",
                "createdAt": "2022-07-19T01:36:05Z"
            },
            {
                "author": "bernaferrari",
                "bodyText": "Someone needs to make a g3fix:",
                "createdAt": "2022-07-19T17:38:06Z"
            },
            {
                "author": "Hixie",
                "bodyText": "[BoxShape.oval] There is a comment saying new shapes shouldn't go here.\n\nI should probably have included more information in the comment saying why:\n\nEach new enum value is a lot of new code in a bunch of places, including in code we don't control (e.g. app code, that's why the Google tests are failing), so we'd need to write a migration guide and migrate a bunch of code.\nEach new enum value requires new code in a bunch of places.\nThat new code likely won't get tree-shaken out, since I don't think the compiler can know which values are never used. So this has a permanent binary size cost even for people who don't use it.\nIn principle, we've moved to ShapeBorders rather than BoxShape for new shapes, and the existence of BoxShape is just a legacy feature at this point. Adding more shapes encourages people to use BoxShape in the future.",
                "createdAt": "2022-07-19T17:53:05Z"
            },
            {
                "author": "bernaferrari",
                "bodyText": "Should I remove it then? It felt redundant because it is even simpler than the current circle option that's available there.",
                "createdAt": "2022-07-19T18:00:36Z"
            },
            {
                "author": "Hixie",
                "bodyText": "I would probably recommend removing it, for the binary size issue. I agree that each individual bit of code that implements BoxShape.oval is simpler than the equivalent code for BoxShape.circle, but there's a lot of these, and they all add up, and they all end up being in the compiled binary even if the user doesn't ever use either BoxShape value.\n(If we could remove BoxShape entirely, I would probably do that. But that would break code that uses it.)\nIf we don't remove BoxShape.oval then we have to go through the breaking change process:\nhttps://github.com/flutter/flutter/wiki/Tree-hygiene#handling-breaking-changes",
                "createdAt": "2022-07-19T18:11:12Z"
            },
            {
                "author": "bernaferrari",
                "bodyText": "Removed \ud83d\ude25\nWhat if we had this lint dart-lang/linter#3411 for BoxShape.circle only so that users 'upgrade' before removing ShapeBorder entirely?",
                "createdAt": "2022-07-19T18:28:42Z"
            },
            {
                "author": "Hixie",
                "bodyText": "I don't think that lint necessarily is the right one (see e.g. dart-lang/linter#3411 (comment)) but I could see having a specific lint that looks for BoxDecorations with BoxShape.circle and suggests using a ShapeDecoration with a CircleBorder instead, yeah. That would let us move towards deprecating BoxShape.\nActually we could just deprecate BoxShape.circle with a message saying to use ShapeDecoration with a CircleBorder instead. Is there anything that wouldn't be handled by that case?",
                "createdAt": "2022-07-19T18:45:01Z"
            },
            {
                "author": "bernaferrari",
                "bodyText": "Everything would be handed in that case. But...\nI don't know how it would handle this. Probably somewhere in Image accepts a ShapeBorder? Or it would become the child? It is a weird case that happens everywhere (luckily most/all don't have a child, so putting as child would work).\ndecoration: const BoxDecoration(\n    image: DecorationImage(\n        image: AssetImage(\n            'people/square/sandra.png',\n             package: _kGalleryAssetsPackage,\n        ),\n    ),\n    shape: BoxShape.circle,\n),\nAnd this, which is basically the only BoxShape usage in Flutter. Replace that with ShapeBorder?",
                "createdAt": "2022-07-19T18:50:41Z"
            },
            {
                "author": "bernaferrari",
                "bodyText": "I can make a PR that tries to fix all BoxShape.circle in the API, just tell me what should happen to InkWell:",
                "createdAt": "2022-07-19T18:53:17Z"
            },
            {
                "author": "Hixie",
                "bodyText": "I think the example above just becomes:\ndecoration: const ShapeDecoration(\n    image: DecorationImage(\n        image: AssetImage(\n            'people/square/sandra.png',\n             package: _kGalleryAssetsPackage,\n        ),\n    ),\n    shape: CircleBorder(),\n),\nInkHighlight is tricky. It's unrelated to decorations and just using it for its own purposes. I would probably not touch it (though I could also imagine porting the whole ink infrastructure to ShapeBorders).",
                "createdAt": "2022-07-19T19:22:38Z"
            },
            {
                "author": "Hixie",
                "bodyText": "(That does mean that deprecating BoxShape.circle would be more difficult since it would affect users of InkHighlight... maybe we just deprecate shape on BoxDecoration?)",
                "createdAt": "2022-07-19T19:27:57Z"
            },
            {
                "author": "bernaferrari",
                "bodyText": "Yeah, seems like so :(\nMaybe move the BoxShape from BoxDecoration to InkHighlighter too.\nI'll open a PR, we can play with that.",
                "createdAt": "2022-07-19T19:29:58Z"
            },
            {
                "author": "bernaferrari",
                "bodyText": "Ok, got halfway, but tests breaking are awful \ud83d\ude29 basically, everywhere that expects a circle must now expect something else, right?\nflutter/packages/flutter/test/material/switch_test.dart -p vm --plain-name 'Switch thumb color resolves in active/enabled states'\n00:05 +15 -6: Switch thumb color resolves in hovered/focused states                                                               \n\u2550\u2550\u2561 EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK \u255e\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\nThe following TestFailure was thrown running a test:\nExpected: Object or closure painting:\n          'a rounded rectangle with Color(0x801e88e5), RRect: RRect.fromLTRBR(13.0, 17.0, 46.0,\n31.0, 7.0)'\n          'a circle with Color(0x1f000000)'\n          'a circle with Color(0x33000000)'\n          'a circle with Color(0x24000000)'\n          'a circle with Color(0x1f000000)'\n          'a circle with Color(0xff000002)'\n  Actual: _RenderInkFeatures:<_RenderInkFeatures#65c76>\n   Which: did not match the pattern.\n          It called 5 other methods on the canvas, the first of which was drawPath(Instance of\n'Path', Paint(Color(0x33000000))), but did not call drawCircle() at the time where a circle with\nColor(0x33000000) was expected.\n          The first method that was called when the call to drawCircle() was expected,\ndrawPath(Instance of 'Path', Paint(Color(0x33000000))), was called with the following stack:\n\nEven this is breaking:\n\nAnd that was the whole change:\n\nI need to explore that better later, or might need some help with ideas on how to fix.",
                "createdAt": "2022-07-19T20:28:45Z"
            },
            {
                "author": "bernaferrari",
                "bodyText": "I'm still not 100% sure, there are many tests broken, but this seems to be one of the issues:\nvoid _paintInterior(Canvas canvas) {\n  if (_interiorPaint != null) {\n    canvas.drawPath(_outerPath, _interiorPaint!);\n  }\n}\nWhere\n@override\nPath getOuterPath(Rect rect, { TextDirection? textDirection }) {\n  return Path()\n    ..addOval(Rect.fromCircle(\n      center: rect.center,\n      radius: rect.shortestSide / 2.0,\n    ));\n}\nvs BoxDecoration:\ncanvas.drawCircle(center, radius, paint)\nIs it possible to somehow convert Path..addOval() to drawOval instead of drawPath? This would solve the tests.",
                "createdAt": "2022-07-20T18:35:21Z"
            },
            {
                "author": "Hixie",
                "bodyText": "@bernaferrari can you upload a PR in draft mode with your proposed changes so far and cc me on it? Before you sink too much time into it I'm curious to see the impact.\nIn general, optimizing the call from drawPath(getOuterPath) to drawCircle does seem like a good idea but it's been a while since I looked at this code so I don't recall how easy that would be to do.",
                "createdAt": "2022-07-20T20:28:07Z"
            },
            {
                "author": "bernaferrari",
                "bodyText": "Here it goes: #108052. The changes are really simple, but the code it breaks is bad (especially switch, I think it is the worst offender).\nBTW, could you (or someone else reading this) add the \"autosubmit\" label in this PR so it gets merged?",
                "createdAt": "2022-07-20T20:44:50Z"
            }
        ],
        "commentCount": 32
    },
    {
        "number": 87203,
        "title": "Add image keyboard support on Android",
        "author": "Tanay Neotia",
        "state": "CLOSED",
        "closedAt": "2022-08-25T21:43:13Z",
        "createdAt": "2021-07-28T15:44:45Z",
        "comments": [
            {
                "author": "tneotia",
                "bodyText": "@googlebot I fixed it",
                "createdAt": "2021-07-28T15:56:00Z"
            },
            {
                "author": "zlshames",
                "bodyText": "@googlebot I consent.",
                "createdAt": "2021-07-28T16:27:24Z"
            },
            {
                "author": "gspencergoog",
                "bodyText": "@tneotia You'll need to do the same rebase or squash here as in the engine PR.",
                "createdAt": "2021-07-28T16:46:36Z"
            },
            {
                "author": "zlshames",
                "bodyText": "@tneotia You'll need to do the same rebase or squash here as in the engine PR.\n\nHey, so when I originally checked-out the repo to make the changes, this is what I did (for the engine):\nFor the framework, I did a similar thing, but instead of checking out a hash, i checked-out a tag. The engine repo doesn't have those tags. The reason I did the reset was because I wanted to make sure that the existing commits were only ones that existed in the 2.2.3 tag, and drop anything newer. And the reason we only wanted the 2.2.3 changes (instead of master) was because we wanted only stable/officially released code that was compatible with the flutter framework v 2.2.3\ngit checkout <sha256 hash of the cherry picks for 2.2.3>\ngit reset --hard <sha256 hash>\ngit branch ......\n\n# made my changes\n\ngit commit ......\ngit push ......\n\nShould this have been done a different way? I am also no git expert, but i generally know the basic actions",
                "createdAt": "2021-07-28T16:57:50Z"
            },
            {
                "author": "gspencergoog",
                "bodyText": "Somewhere in there you need to either squash the commits down to one commit, or rebase them so that the only changes between the master branch and your branch are your changes. The CLA bot doesn't really like any PR where more than one author appears in the list of changes.\nThe workflow I use is:\n# Make a new branch\ngit fetch origin\ngit fetch upstream\ngit checkout master\ngit checkout -b git-insertion-pr\ngit push -u origin git-insertion-pr\n# Make changes and push\ngit commit -m \"message\"\ngit push\n# More changes\ngit commit -m \"message\"\n# Incorporate changes made to master\ngit fetch upstream\ngit rebase upstream/master\n# Fix conflicts\ngit push --force origin git-insertion-pr\n\nWith git, there are a number of ways you can accomplish the same thing (sadly), but this one works for me.\nI think the problem here is that you need to rebase on top of master, so the relevant commands would be:\ngit fetch upstream\ngit rebase upstream/master\n# Fix conflicts\ngit push --force origin git-insertion-pr\n\nThis all assumes that the output of git remote -v looks like:\norigin\tgit@github.com:BlueBubblesApp/flutter.git (fetch)\norigin\tgit@github.com:BlueBubblesApp/flutter.git (push)\nupstream\tgit@github.com:flutter/flutter.git (fetch)\nupstream\tgit@github.com:flutter/flutter.git (push)\n\nIf that's not the case, then you'll probably have to at least set up the upstream that way and try rebasing.",
                "createdAt": "2021-07-28T17:22:12Z"
            },
            {
                "author": "tneotia",
                "bodyText": "@gspencergoog this one should be fixed now as well. Again thanks for your help, learned something new today!",
                "createdAt": "2021-07-28T17:34:44Z"
            },
            {
                "author": "zlshames",
                "bodyText": "@gspencergoog this one should be fixed now as well. Again thanks for your help, learned something new today!\n\nBeautiful, thank you for doing that",
                "createdAt": "2021-07-28T17:36:33Z"
            },
            {
                "author": "justinmc",
                "bodyText": "I've left a review (flutter/engine#27763 (review)) on the engine PR in order to find consensus on this approach before I get too detailed with a review here.",
                "createdAt": "2021-07-29T18:33:25Z"
            },
            {
                "author": "zlshames",
                "bodyText": "I've left a review (flutter/engine#27763 (review)) on the engine PR in order to find consensus on this approach before I get too detailed with a review here.\n\nHopefully this isn't a dumb question, but is there a way to use the engine in \"dev\" mode? So I don't need to rebuild the engine each time I make a change and need to test it? That's how I've been doing it because I never found a way to use the engine without it being compiled first.\nIn the meantime... I will be recompiling the engine with some changes to test how changing the mimeType support list will work.\nEdit 1: So, I just rebuilt the engine after removing all the mimeTypes from the setContentMimeType list. For whatever reason, GIF insertion still worked. This leads me to believe that calling setContentMimeType doesn't do anything... I actually pulled it from Anton here: #20796 (comment).\nNow, I am rebuilding the engine with only 1 mime type (png) to see if i can still insert GIFs... if that still works, I'm going to try and remove the setContentMimeType call entirely and see what happens...",
                "createdAt": "2021-07-29T19:02:42Z"
            },
            {
                "author": "justinmc",
                "bodyText": "@zlshames Sorry I missed your question before, but no, unfortunately you must rebuild the engine with ninja as in the compiling the engine wiki page each time you make a change, the run your Flutter app with --local-engine=....  If you've already built it once, it should be much faster than the first time.",
                "createdAt": "2021-08-17T22:14:42Z"
            },
            {
                "author": "zlshames",
                "bodyText": "@zlshames Sorry I missed your question before, but no, unfortunately you must rebuild the engine with ninja as in the compiling the engine wiki page each time you make a change, the run your Flutter app with --local-engine=.... If you've already built it once, it should be much faster than the first time.\n\nThat's what I figured, and have been doing. No worries! Been busy working on our latest app release, but will get back to working on this PR (hopefully) shortly",
                "createdAt": "2021-08-18T13:13:59Z"
            },
            {
                "author": "justinmc",
                "bodyText": "Sounds good, happy to take a look whenever you have time to update it \ud83d\udc4d",
                "createdAt": "2021-08-18T22:31:25Z"
            },
            {
                "author": "Hixie",
                "bodyText": "@zlshames No pressure, just curious if you've had a chance to look at this?",
                "createdAt": "2021-11-30T23:58:21Z"
            },
            {
                "author": "zlshames",
                "bodyText": "@zlshames No pressure, just curious if you've had a chance to look at this?\n\nApologies! I have not forgotten about it. Just am super busy with the holiday season right now. And previously, with working on updates to a different part of the app that uses this custom code. I know @tneotia updated our code, I just need to test setting custom MIME Types so users can select which they want to handle (vs. just automatically handling every type). I would like to do it by the end of the year.\nIf no one sees an update by me nearing Christmas, give me a ping and I'll try to get on it :)",
                "createdAt": "2021-12-01T14:04:46Z"
            },
            {
                "author": "mrorabau",
                "bodyText": "@zlshames I hope you had a nice holiday. Just checking in, I know lots of people are looking forward to this PR, and it seems that you were fairly close with only a few failing checks. Any update or ETA?",
                "createdAt": "2022-01-05T22:58:23Z"
            },
            {
                "author": "zlshames",
                "bodyText": "@zlshames I hope you had a nice holiday. Just checking in, I know lots of people are looking forward to this PR, and it seems that you were fairly close with only a few failing checks. Any update or ETA?\n\nI knew this would happen.... I was traveling for the holidays and am still not home. I won\u2019t be home till next week. I'll try to do it then. I also just got a home-lab, so makes it easier to test",
                "createdAt": "2022-01-05T23:23:11Z"
            },
            {
                "author": "zlshames",
                "bodyText": "Hey guys, so this PR is almost ready now. I set some time aside to add a new parameter, contentCommitMimeTypes to TextFields. It takes a List<String> and allows you to \"whitelist\" MIME Types for any content that is committed by your keyboard. Currently, if you do not provide a list (i.e. it's null), but provide a callback for onContentCommitted, it will show a toast error when you try and commit content because you did not pass any MIME Types. I've been speaking it over with @tneotia, and we decided that we may want a default list of MIME Types to be automatically supported if contentCommitMimeTypes is null. Here are the use-cases, which I will need to verify (and probably make changes for):\n1. onContentCommitted callback is null, show error toast (mime types null) on content committed\n2. onContentCommitted callback provided but custom mime types null, automatically assume a default list of supported MIME types\n3. onContentCommitted callback provided and custom mime types provided, use custom types and show toast if the mime type of inserted content doesn't match\n\nDoes anyone have any issues with auto automatically enabling a default set of MIME Types to be supported if contentCommitMimeTypes is null? If you guys think we should leave it as is and make it show an error toast if no MIME Types are provided (i.e. you have to specify them manually), please chime in.\nThanks!",
                "createdAt": "2022-01-16T22:11:13Z"
            },
            {
                "author": "tneotia",
                "bodyText": "@Hixie and @justinmc, this should finally be fully ready to go now. After discussing some more with @zlshames our final implementation can be summarized as follows:\nonContentCommitted\nThis is a new function added to CupertinoTextField and TextField to allow Flutter devs to supply a callback when images are inserted into the text field. The callback will expose CommittedContent class, which holds the mime type, URI, and Uint8 data of the inserted content.\ncontentCommitMimeTypes\nThis is a List<String> also added to CupertinoTextField and TextField to allow Flutter devs to explicitly define which mime types to support.\ncontentCommitMimeTypes \"Default\" Values\nThe value of contentCommitMimeTypes is determined as follows:\n\nonContentCommitted is null - contentCommitMimeTypes is null (the engine will show a toast message saying \"[app] does not support image insertion here)\nonContentCommitted is not null, but contentCommitMimeTypes is null - contentCommitMimeTypes will be assigned all possible mime type values:\n\n<String>[\n   'image/png',\n   'image/bmp',\n   'image/jpg',\n   'image/tiff',\n   'image/gif',\n   'image/jpeg',\n   'image/webp'\n]\n\nonContentCommitted is not null, and contentCommitMimeTypes is also not null - use the developer-set contentCommitMimeTypes, and if content that doesn't match the desired mime types is inserted, the engine will show the same toast message.",
                "createdAt": "2022-01-17T20:19:28Z"
            },
            {
                "author": "zlshames",
                "bodyText": "@justinmc I believe I fixed all your nitpicks. Do you mind reviewing it again?",
                "createdAt": "2022-01-28T20:46:28Z"
            },
            {
                "author": "zlshames",
                "bodyText": "Can someone help me figure out why it's not letting me set the value of a non-final? I know the value needs to be a const, but it is, and it's still failing",
                "createdAt": "2022-01-28T21:32:41Z"
            },
            {
                "author": "Hixie",
                "bodyText": "@zlshames if you catch me on the #hackers-new channel on discord (see our contributing docs for the invite link) i'd be happy to see if we can figure out the problem together",
                "createdAt": "2022-01-28T23:18:56Z"
            },
            {
                "author": "zlshames",
                "bodyText": "Alright, this should be good to go, is there anything else I need to do?",
                "createdAt": "2022-02-04T20:34:26Z"
            },
            {
                "author": "matthew-carroll",
                "bodyText": "@justinmc I'm commenting here based on you tagging me on the engine side. On the other PR you mentioned imperative vs declarative - but I think the big issue in this PR is the monolith problem. A pattern that we've seen, which continues here, is treating these core text APIs as a dumping ground for anything and everything that any platform can do. I think it's clear that the logical conclusion for this pattern of behavior is that TextInputConfiguration, TextInputClient and TextInputConnection will eventually hold every setting and every method that exists across Android, iOS, Mac, Windows, Linux, and Web. There's no obvious alternative path with the way things are going.\nCombine this API direction with the fact that these APIs are unavoidable, and we have a big problem. Developers can't escape the monolith, so creating a monolith is very harmful. I do think that the monolith problem should be addressed ASAP, and any such platform-specific behavior should be paused until Flutter can find a reasonable API structure that decomposes in a reasonable way.\nIf you'd like to assemble the Text Working Group for some brainstorming, I'll make myself available.",
                "createdAt": "2022-04-13T21:32:22Z"
            },
            {
                "author": "zlshames",
                "bodyText": "Hi, thank you for the edit suggestions! I will make them as soon as I can. As for your question about \"will it work with other keyboard types and file types\". It should as long as the MIME Types are supported. That is the only code that specifically indicates that committing content is for images. So if you just add more MIME Types, it can support more than just images. However, I haven't tested that to the full extend. I'd need to find a keyboard that can commit that other type of content. I'll be honest, I don't think I'll personally be able to test that too in depth",
                "createdAt": "2022-04-14T12:35:35Z"
            },
            {
                "author": "zlshames",
                "bodyText": "@justinmc I made a bunch of changes and comments to your comments. Let me know if there is anything else.",
                "createdAt": "2022-04-14T12:58:53Z"
            },
            {
                "author": "zlshames",
                "bodyText": "Alright, someone might have to help me out here. Admittedly, I'm not a full-time Dart developer. I can't for the life of me figure out what's wrong in our template comment's sample code. It's saying that it's receiving an unexpected character, which I would have assumed would have been due to the unescaped single-quote, but it still fails when the quote is escaped.",
                "createdAt": "2022-04-14T19:59:01Z"
            },
            {
                "author": "justinmc",
                "bodyText": "@zlshames @tneotia Are you all still available to help get this PR merged?  Would you be able to merge in master (or rebase) to update the branch and get the checks to run again?  It looks like the analyzer failure is an infrastructure thing.",
                "createdAt": "2022-08-10T22:08:54Z"
            },
            {
                "author": "zlshames",
                "bodyText": "@justinmc I could have sworn we discussed needing to refactor it and decouple it from the TextInputClient code. Our other PR was closed due to inactivity as well as that they weren't sure if it was how they would want to architect the solution. @tneotia correct me if I'm misremembering. We can always reopen the PR, but I just don't think this is the official solution they wanted.\nIf anyone from Google wants to chime in and offer their opinion, we are open! Obviously, we would love to get this native in Flutter. But at the same time, I'm not sure where to refactor it so that it's decoupled",
                "createdAt": "2022-08-10T23:27:31Z"
            },
            {
                "author": "justinmc",
                "bodyText": "After catching back up on the code here and in the engine PR, I think the current approach with TextInputClient is already the best option \ud83d\udc4d .  @zlshames I think if you re-open the engine PR and get both PRs to pass CI, then I can re-review and get this moving again without any major changes.\nThere was a strong argument made for decoupling this from TextInputClient here, but I think that this feature is fundamentally a part of TextInputClient.  Sending rich image content from the platform keyboard requires TextInputClient's input connection.  Very custom behavior is still possible (say for someone writing a custom text editor) by overriding commitContent.\nIn general we should work to decouple our platform channel methods as discussed in my design doc, but in this case the logic belongs in TextInputClient.\nCC @LongCatIsLooong, I believe you and I discussed this a few weeks ago and came to the same conclusion.",
                "createdAt": "2022-08-19T17:38:32Z"
            },
            {
                "author": "tneotia",
                "bodyText": "I am going back to school shortly, but I will definitely have some time next week to mess with this and bring it back up to date. I may re-PR this just because there are way, way, way too many commits here.\nBuilding our app with a custom flutter engine has been.... well... not great. We'd like to get this into a stable Flutter release ASAP! :)",
                "createdAt": "2022-08-19T21:59:45Z"
            },
            {
                "author": "justinmc",
                "bodyText": "Closing this in favor of #110052.  Will leave a review over there soon.  Thanks!",
                "createdAt": "2022-08-25T21:43:13Z"
            }
        ],
        "commentCount": 31
    },
    {
        "number": 51126,
        "title": "[flutter_tools] fix build for projects with watchOS companion app",
        "author": "tauu",
        "state": "MERGED",
        "closedAt": "2020-04-15T19:13:07Z",
        "createdAt": "2020-02-20T15:55:42Z",
        "comments": [
            {
                "author": "fluttergithubbot",
                "bodyText": "It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption to this rule, contact Hixie.\nReviewers: Read the Tree Hygiene page and make sure this patch meets those guidelines before LGTMing.",
                "createdAt": "2020-02-20T15:55:45Z"
            },
            {
                "author": "googlebot",
                "bodyText": "We found a Contributor License Agreement for you (the sender of this pull request), but were unable to find agreements for all the commit author(s) or Co-authors.  If you authored these, maybe you used a different email address in the git commits than was used to sign the CLA (login here to double check)?  If these were authored by someone else, then they will need to sign a CLA as well, and confirm that they're okay with these being contributed to Google.\nIn order to pass this check, please resolve this problem and then comment @googlebot I fixed it.. If the bot doesn't comment, it means it doesn't think anything has changed.\n\u2139\ufe0f Googlers: Go here for more info.",
                "createdAt": "2020-02-20T15:55:46Z"
            },
            {
                "author": "tauu",
                "bodyText": "@googlebot I fixed it.",
                "createdAt": "2020-02-20T16:03:23Z"
            },
            {
                "author": "googlebot",
                "bodyText": "CLAs look good, thanks!\n\u2139\ufe0f Googlers: Go here for more info.",
                "createdAt": "2020-02-20T16:03:28Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "FYI @jmagman",
                "createdAt": "2020-02-20T20:02:43Z"
            },
            {
                "author": "jmagman",
                "bodyText": "#43731 (comment)\n\n\nSUPPORTED_PLATFORMS= iphoneos for Profile and Relase should be set in the Runner target, not the Runner project.\n-sdk iphoneos or -sdk iphonesimulator are set on every flutter build command: #17312.  I believe this should already be handled by the SDKROOT build setting, but I would need to test this.",
                "createdAt": "2020-02-20T21:23:48Z"
            },
            {
                "author": "tauu",
                "bodyText": "Regarding 2. :\nThe -sdk parameter seems to be set independent of the SDKROOT build setting in   \n  \n    \n      flutter/packages/flutter_tools/lib/src/ios/mac.dart\n    \n    \n        Lines 209 to 213\n      in\n      3cee8e0\n    \n  \n  \n    \n\n        \n          \n           if (buildForDevice) { \n        \n\n        \n          \n             buildCommands.addAll(<String>['-sdk', 'iphoneos']); \n        \n\n        \n          \n           } else { \n        \n\n        \n          \n             buildCommands.addAll(<String>['-sdk', 'iphonesimulator', '-arch', 'x86_64']); \n        \n\n        \n          \n           } \n        \n    \n  \n\n\nI tried using the SDKROOT setting, but couldn't get rid of the -sdk parameter this way.\nIn addition just dropping the -sdk parameter is unfortunately not sufficient for simulator builds. For these also -destination id=<deviceid> with a valid simulator device identifier (or alternatively a valid iphone model name) has to be set.  This is also automatically handled by the changes in this pull request.",
                "createdAt": "2020-02-20T21:47:17Z"
            },
            {
                "author": "jmagman",
                "bodyText": "Regarding 2. :\nThe -sdk parameter seems to be set independent of the SDKROOT build setting in\n\n  \n    \n      flutter/packages/flutter_tools/lib/src/ios/mac.dart\n    \n    \n        Lines 209 to 213\n      in\n      3cee8e0\n    \n  \n  \n    \n\n        \n          \n           if (buildForDevice) { \n        \n\n        \n          \n             buildCommands.addAll(<String>['-sdk', 'iphoneos']); \n        \n\n        \n          \n           } else { \n        \n\n        \n          \n             buildCommands.addAll(<String>['-sdk', 'iphonesimulator', '-arch', 'x86_64']); \n        \n\n        \n          \n           } \n        \n    \n  \n\n\nI tried using the SDKROOT setting, but couldn't get rid of the -sdk parameter this way.\nIn addition just dropping the -sdk parameter is unfortunately not sufficient for simulator builds. For these also -destination id=<deviceid> with a valid simulator device identifier (or alternatively a valid iphone model name) has to be set. This is also automatically handled by the changes in this pull request.\n\nSorry for being unclear, I meant could we get rid of -sdk in favor of SDKROOT?  But I just tested it and it causes the same compilation error:\nerror: unable to resolve product type 'com.apple.product-type.watchkit2-extension' for platform 'iphonesimulator' (in target 'TestClock Extension' from project 'Runner')\nerror: unable to resolve product type 'com.apple.product-type.watchkit2-extension' for platform 'iphonesimulator' (in target 'TestClock Extension' from project 'Runner')\n\nRequiring a destination for apps with companions seems like a good compromise, so thanks for this solution!\nA few concerns:\n\nThis needs tests.  Unfortunately there are zero unit tests for any Xcode build code paths that I can find, and writing the first one is a big ask, considering the process and file system mocking requirements (we have some technical debt to pay down there).\n\nAn \"easier\" way to test this may be to add a new ~/Projects/flutter/dev/integration_tests/ios_app_with_watch_companion project that contains a companion app, and confirm it does not build before your change, and does build after.\nThen add a new dev/devicelab/bin/tasks/app_with_watch_companion.dart integration test to run on post-submit that does something like:\n      final Directory watchApp = Directory(path.join(tempDir.path, 'app_with_watch'));\n      mkdir(watchApp);\n      recursiveCopy(\n        Directory(path.join(flutterDirectory.path, 'dev', 'integration_tests', 'ios_app_with_watch_companion')),\n        watchApp,\n      );\n\n  \n    \n      flutter/dev/devicelab/bin/tasks/module_test_ios.dart\n    \n    \n         Line 222\n      in\n      7572ec4\n    \n  \n  \n    \n\n        \n          \n           final Directory objectiveCHostApp = Directory(path.join(tempDir.path, 'hello_host_app')); \n        \n    \n  \n\n for something similar.\nThe rub here is that your change requires a real destination.  So you'd have to add simctl code to your dart test as setup (this needs to be exec'd in dart, but I just tested this in bash as an example)\n$ xcrun simctl create \"TestFlutterWatch\" \"Apple Watch Series 5 - 44mm\" \n709E9D7C-5D9D-4753-8423-F3BB7515E6FB\n$ xcrun simctl create \"TestFlutteriPhoneWithWatch\" \"iPhone 11\"\n375D81C8-0EB4-4CFF-A14F-1066C9B85EED\n$ xcrun simctl pair 709E9D7C-5D9D-4753-8423-F3BB7515E6FB 375D81C8-0EB4-4CFF-A14F-1066C9B85EED\n2360C20E-86EC-454C-8BF2-9053AD6AAE93\n\n      await inDirectory(watchApp, () async {\n        await flutter(\n          'build',\n          options: <String>[\n         'ios',\n          '--no-codesign',\n          '-d',\n          '2360C20E-86EC-454C-8BF2-9053AD6AAE93',\n          ],\n        );\n      });\nThen needs to be cleaned up in a finally:\n$ xcrun simctl delete 375D81C8-0EB4-4CFF-A14F-1066C9B85EED\n$ xcrun simctl delete 709E9D7C-5D9D-4753-8423-F3BB7515E6FB\n\nTo be tested like:\n$ cd dev/devicelab\n$ dart bin/run.dart -t app_with_watch_companion\n\nThen added to \n  \n    \n      flutter/dev/bots/test.dart\n    \n    \n         Line 939\n      in\n      3411129\n    \n  \n  \n    \n\n        \n          \n           if (Platform.isMacOS) () => _runDevicelabTest('plugin_lint_mac'), \n        \n    \n  \n\n\nif (Platform.isMacOS) () => _runDevicelabTest('app_with_watch_companion'),\n(And you can see why I haven't gotten around to fixing this yet \ud83d\ude04).\n\n\n\n\nFor some reason this leads to TARGET_BUILD_DIR always ending in 'iphoneos' even though the actual directory will end with 'iphonesimulator' for simulator builds.\n\nThis is very concerning, and I saw this in my own tests, too I'm not sure what other issues this will cause.",
                "createdAt": "2020-02-24T20:57:28Z"
            },
            {
                "author": "jmagman",
                "bodyText": "Oh, another thing:\nAs I mentioned in #43731 (comment), I believe this change will also require setting SUPPORTED_PLATFORMS= iphoneos for Profile and Release in the Runner target, and NOT the Runner project for new projects.  When the companion app is added, it inherits those settings from the Runner project, which isn't correct.  We can address that in another change.",
                "createdAt": "2020-02-24T21:03:45Z"
            },
            {
                "author": "solid-yuriiprykhodko",
                "bodyText": "Hi!\nI've tested the fix on the Simulator, works great, thanks!\nHowever, I've tried using it to run the Flutter app on a physical device, and that failed:\nYuriis-MacBook-Pro:ios yuriiprykhodko$ flutter run -d ***\nChanging current working directory to: /Users/yuriiprykhodko/IdeaProjects/-/packages/--\nLaunching lib/main.dart on iPhone in debug mode...\n \n\nAutomatically signing iOS for device deployment using specified development team in Xcode project: -\nWatch companion app found. Adjusting build settings.\nRunning Xcode build...                                                  \n                                                   \nXcode build done.                                            7.6s\nFailed to build iOS app\nError output from Xcode build:\n\u21b3\n    2020-02-25 22:22:10.629 xcodebuild[44321:3660406]  DTDeviceKit: deviceType from - was NULL\n    ** BUILD FAILED **\n\n\nXcode's output:\n\u21b3\n    While building module 'Flutter' imported from /Users/yuriiprykhodko/.pub-cache/hosted/pub.dartlang.org/path_provider-1.6.0/ios/Classes/FLTPathProviderPlugin.h:5:\n    In file included from <module-includes>:1:\n    In file included from /Users/yuriiprykhodko/IdeaProjects/-/packages/--/ios/Flutter/Flutter.framework/Headers/Flutter.h:54:\n    In file included from /Users/yuriiprykhodko/IdeaProjects/-/packages/--/ios/Flutter/Flutter.framework/Headers/FlutterAppDelegate.h:11:\n    /Users/yuriiprykhodko/IdeaProjects/-/packages/--/ios/Flutter/Flutter.framework/Headers/FlutterPlugin.h:314:11: warning: parameter 'gestureBlockingPolicy' not found in the\n    function declaration [-Wdocumentation]\n     * @param gestureBlockingPolicy How UIGestureRecognizers on the platform views are\n              ^~~~~~~~~~~~~~~~~~~~~\n    /Users/yuriiprykhodko/IdeaProjects/-/packages/--/ios/Flutter/Flutter.framework/Headers/FlutterPlugin.h:314:11: note: did you mean 'gestureRecognizersBlockingPolicy'?\n     * @param gestureBlockingPolicy How UIGestureRecognizers on the platform views are\n              ^~~~~~~~~~~~~~~~~~~~~\n              gestureRecognizersBlockingPolicy\n    1 warning generated.\n    1 warning generated.\n    While building module 'Flutter' imported from /Users/yuriiprykhodko/.pub-cache/hosted/pub.dartlang.org/flutter_mailer-0.4.2/ios/Classes/FlutterMailerPlugin.h:1:\n    In file included from <module-includes>:1:\n    In file included from /Users/yuriiprykhodko/IdeaProjects/-/packages/--/ios/Flutter/Flutter.framework/Headers/Flutter.h:54:\n    In file included from /Users/yuriiprykhodko/IdeaProjects/-/packages/--/ios/Flutter/Flutter.framework/Headers/FlutterAppDelegate.h:11:\n    /Users/yuriiprykhodko/IdeaProjects/-/packages/--/ios/Flutter/Flutter.framework/Headers/FlutterPlugin.h:314:11: warning: parameter 'gestureBlockingPolicy' not found in the\n    function declaration [-Wdocumentation]\n     * @param gestureBlockingPolicy How UIGestureRecognizers on the platform views are\n              ^~~~~~~~~~~~~~~~~~~~~\n    /Users/yuriiprykhodko/IdeaProjects/-/packages/--/ios/Flutter/Flutter.framework/Headers/FlutterPlugin.h:314:11: note: did you mean 'gestureRecognizersBlockingPolicy'?\n     * @param gestureBlockingPolicy How UIGestureRecognizers on the platform views are\n              ^~~~~~~~~~~~~~~~~~~~~\n              gestureRecognizersBlockingPolicy\n    1 warning generated.\n    1 warning generated.\n    Command CompileSwift failed with a nonzero exit code\n    mkdir -p /Users/yuriiprykhodko/IdeaProjects/-/packages/--/build/ios/Debug-watchos/Watch Extension.appex/Frameworks\n    rsync --delete -av --filter P .*.?????? --filter \"- CVS/\" --filter \"- .svn/\" --filter \"- .git/\" --filter \"- .hg/\" --filter \"- Headers\" --filter \"- PrivateHeaders\" --filter \"- Modules\"\n    \"/Users/yuriiprykhodko/IdeaProjects/-/packages/--/build/ios/Debug-watchos/AppleWatchInfoService/AppleWatchInfoService.framework\"\n    \"/Users/yuriiprykhodko/IdeaProjects/-/packages/--/build/ios/Debug-watchos/Watch Extension.appex/Frameworks\"\n    building file list ... done\n    AppleWatchInfoService.framework/\n    AppleWatchInfoService.framework/Info.plist\n\n    sent 980 bytes  received 48 bytes  2056.00 bytes/sec\n    total size is 297691  speedup is 289.58\n    /Users/yuriiprykhodko/IdeaProjects/-/packages/--/ios/Pods/Target Support Files/Pods-Watch Extension/Pods-Watch Extension-frameworks.sh: line 141: ARCHS[@]: unbound variable\n    Command PhaseScriptExecution failed with a nonzero exit code\n    note: Using new build system\n    note: Planning build\n    note: Constructing build description\n    warning: None of the architectures in ARCHS (arm64) are valid. Consider setting ARCHS to $(ARCHS_STANDARD) or updating it to include at least one value from VALID_ARCHS (arm64_32, armv7k). (in target 'Zip' from project 'Pods')\n    warning: None of the architectures in ARCHS (arm64) are valid. Consider setting ARCHS to $(ARCHS_STANDARD) or updating it to include at least one value from VALID_ARCHS (arm64_32, armv7k). (in target 'Watch Extension' from project 'Runner')\n    warning: None of the architectures in ARCHS (arm64) are valid. Consider setting ARCHS to $(ARCHS_STANDARD) or updating it to include at least one value from VALID_ARCHS (arm64_32, armv7k). (in target 'Starscream' from project 'Pods')\n    warning: None of the architectures in ARCHS (arm64) are valid. Consider setting ARCHS to $(ARCHS_STANDARD) or updating it to include at least one value from VALID_ARCHS (arm64_32, armv7k). (in target 'Pods-Watch Extension' from project 'Pods')\n    warning: None of the architectures in ARCHS (arm64) are valid. Consider setting ARCHS to $(ARCHS_STANDARD) or updating it to include at least one value from VALID_ARCHS (arm64_32, armv7k). (in target 'LogServer' from project 'Pods')\n    warning: None of the architectures in ARCHS (arm64) are valid. Consider setting ARCHS to $(ARCHS_STANDARD) or updating it to include at least one value from VALID_ARCHS (arm64_32, armv7k). (in target 'AppleWatchInfoService' from project 'Pods')\n\nCould not build the precompiled application for the device.\n\nError launching application on iPhone.\n\nFlutter doctor output and version:\nYuriis-MacBook-Pro:ios yuriiprykhodko$ flutter doctor -v\n[\u2713] Flutter (Channel apple-watch, v1.10.2-pre.2052, on Mac OS X 10.15.3 19D76, locale en-GB)\n    \u2022 Flutter version 1.10.2-pre.2052 at /Users/yuriiprykhodko/dev/flutter2\n    \u2022 Framework revision cf20a295f1 (5 days ago), 2020-02-20 17:51:42 +0100\n    \u2022 Engine revision f2f8c342be\n    \u2022 Dart version 2.8.0 (build 2.8.0-dev.9.0 0f141be8bd)\n\n \n[\u2713] Android toolchain - develop for Android devices (Android SDK version 29.0.2)\n    \u2022 Android SDK at /Users/yuriiprykhodko/Library/Android/sdk\n    \u2022 Android NDK location not configured (optional; useful for native profiling support)\n    \u2022 Platform android-29, build-tools 29.0.2\n    \u2022 Java binary at: /Applications/Android Studio.app/Contents/jre/jdk/Contents/Home/bin/java\n    \u2022 Java version OpenJDK Runtime Environment (build 1.8.0_202-release-1483-b49-5587405)\n    \u2022 All Android licenses accepted.\n\n[\u2713] Xcode - develop for iOS and macOS (Xcode 11.3.1)\n    \u2022 Xcode at /Applications/Xcode.app/Contents/Developer\n    \u2022 Xcode 11.3.1, Build version 11C504\n    \u2022 CocoaPods version 1.8.4\n\n[!] Android Studio (version 3.5)\n    \u2022 Android Studio at /Applications/Android Studio.app/Contents\n    \u2717 Flutter plugin not installed; this adds Flutter specific functionality.\n    \u2717 Dart plugin not installed; this adds Dart specific functionality.\n    \u2022 Java version OpenJDK Runtime Environment (build 1.8.0_202-release-1483-b49-5587405)\n\n[\u2713] IntelliJ IDEA Ultimate Edition (version 2019.3.2)\n    \u2022 IntelliJ at /Applications/IntelliJ IDEA.app\n    \u2022 Flutter plugin version 42.1.4\n    \u2022 Dart plugin version 193.6015.53\n\n[\u2713] VS Code (version 1.42.1)\n    \u2022 VS Code at /Applications/Visual Studio Code.app/Contents\n    \u2022 Flutter extension version 3.7.1\n\n[\u2713] Connected device (1 available)\n    \u2022 iPhone \u2022 *** \u2022 ios \u2022 iOS 13.3.1\n\n! Doctor found issues in 1 category.\n\nYuriis-MacBook-Pro:ios yuriiprykhodko$ flutter --version\nFlutter 1.10.2-pre.2052 \u2022 channel apple-watch \u2022 https://github.com/tauu/flutter.git\nFramework \u2022 revision cf20a295f1 (5 days ago) \u2022 2020-02-20 17:51:42 +0100\nEngine \u2022 revision f2f8c342be\nTools \u2022 Dart 2.8.0 (build 2.8.0-dev.9.0 0f141be8bd)\n\n\nPerhaps we could address this in some further issue?\nAnd given that we need to implement and test some interaction between the apps, another problem appears.\nWe will have to manually grab the WatchKit extension from build/ios/Debug-iphonesimulator/<iOS app name>.app/Watch/<watchOS Extension name>.app, and install it on a paired Watch Simulator to work on the applications.\nWe could do that via xcrun simclt install <Watch Sim UDID> <dir to Watchkit extension> and xcrun simctl launch <Watch Sim UDID> <app bundleId>\nPossibly we could add that to the flutter_tool as well?",
                "createdAt": "2020-02-25T22:36:01Z"
            },
            {
                "author": "Henrik-glt",
                "bodyText": "@tauu Any plan on following up the change request from @jmagman ? \ud83d\ude42",
                "createdAt": "2020-03-23T12:52:50Z"
            },
            {
                "author": "tauu",
                "bodyText": "@Henrik-glt yes, of course! I plan to implement it this / next week :-) Sorry for the delay, but recent world wide events kinda forced me to work on more immediate projects. :-(",
                "createdAt": "2020-03-23T13:29:55Z"
            },
            {
                "author": "Henrik-glt",
                "bodyText": "@Henrik-glt yes, of course! I plan to implement it this / next week :-) Sorry for the delay, but recent world wide events kinda forced me to work on more immediate projects. :-(\n\nGreat! Looking forward to getting this important fix to master. \ud83d\ude03 Great work mate, completely understand that people need to prioritise during this weird time.",
                "createdAt": "2020-03-23T13:33:16Z"
            },
            {
                "author": "john-yick",
                "bodyText": "Any news on when this fix will be available on the stable branch?",
                "createdAt": "2020-04-06T00:20:42Z"
            },
            {
                "author": "tauu",
                "bodyText": "@jmagman Sorry that it took so long - hope the overall situation gets less stressful soon.\nThanks for the detailed instructions on how to create devicelab tests! That was very helpful. The latest commits adds a sample app with an watch companion and tests for\n\nBuilding the sample app for a device in release / debug mode.\nBuilding the sample app in debug mode for a simulated device.\nRunning the sample app on a simulated device.\n\nBuild for a simulated device seems to use a different codepath than running on a simulated device, as buildForDevice will be true in buildXcodeProject(...) for the first one but not for the second one.\n\nAs I mentioned in #43731 (comment), I believe this change will also require setting SUPPORTED_PLATFORMS= iphoneos for Profile and Release in the Runner target, and NOT the Runner project for new projects. When the companion app is added, it inherits those settings from the Runner project, which isn't correct. We can address that in another change.\n\nThat is definately a good idea. Can confirm that in my test, the companion app inherited the iphoneos setting from the Runner project. Moving the setting to the Runner target fixes the issue.\nOne more thing: As running the devicelab tests with other locales than en_US fails (likely en_* also works, not tested), would it be possible to add the following text to https://github.com/flutter/flutter/wiki/Running-and-writing-tests in the section \"Running device lab tests locally\" between items 2. and 3.:\n\nEnsure that the current locale is en_US. Setting the locale of a terminal can be achieved by executing the command export LANG=en_US.UTF-8.",
                "createdAt": "2020-04-10T14:47:36Z"
            },
            {
                "author": "jmagman",
                "bodyText": "@tauu Thank you so much for working on this, I can tell you put in a lot of time and thought!  I'll look at it in detail today!\n\nOne more thing: As running the devicelab tests with other locales than en_US fails (likely en_* also works, not tested), would it be possible to add the following text to https://github.com/flutter/flutter/wiki/Running-and-writing-tests in the section \"Running device lab tests locally\" between items 2. and 3.:\n\nEnsure that the current locale is en_US. Setting the locale of a terminal can be achieved by executing the command export LANG=en_US.UTF-8.\n\n\nGreat idea, done. Also created an issue for the tests to do this for you.",
                "createdAt": "2020-04-10T18:56:48Z"
            },
            {
                "author": "tauu",
                "bodyText": "@jmagman Once again thanks for all the detailed information and for immediately updating the wiki page with the locale setting information.\nThe pull request has been rebased to the current master and the mentioned issues are resolved.\nRegarding the linker error after the rebase. The problems seems to be that the watch and watch extension targets inherit the linker flags from \"ios/Flutter/Generated.xcconfig\", which sets OTHER_LDFLAGS=$(inherited) -framework Flutter. Consequently the link fails, because these targets do not contain the flutter framework. Currently it is fixed by setting OTHER_LDFLAGS=\"\" for the watch and watch extension targets, though it would be more convenient if this manual adjustment is not necessary. As this setting seems to be a side effect of fixing #50568 , do you have some insight if this setting could be limited to the Runner target?\nThe analyze-linux test currently fails with:\n\n/tmp/flutter sdk/dev/integration_tests/ios_app_with_watch_companion/lib/main.dart\nThe expected license header is:\n// Copyright 2014 The Flutter Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nIs this intentional? Adding a copyright dated to 2014 to a file created in 2020 seems a bit odd to me, but I will gladly add it, if thats is intended.\n\nThanks for the fast review! :-)",
                "createdAt": "2020-04-12T13:49:53Z"
            },
            {
                "author": "jmagman",
                "bodyText": "Regarding the linker error after the rebase. The problems seems to be that the watch and watch extension targets inherit the linker flags from \"ios/Flutter/Generated.xcconfig\", which sets OTHER_LDFLAGS=$(inherited) -framework Flutter. Consequently the link fails, because these targets do not contain the flutter framework. Currently it is fixed by setting OTHER_LDFLAGS=\"\" for the watch and watch extension targets, though it would be more convenient if this manual adjustment is not necessary. As this setting seems to be a side effect of fixing #50568 , do you have some insight if this setting could be limited to the Runner target?\n\nYou're right.  Created #54680 and am working on it now.\n\nThe analyze-linux test currently fails with:\n\n/tmp/flutter sdk/dev/integration_tests/ios_app_with_watch_companion/lib/main.dart\nThe expected license header is:\n// Copyright 2014 The Flutter Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\nIs this intentional? Adding a copyright dated to 2014 to a file created in 2020 seems a bit odd to me, but I will gladly add it, if thats is intended.\n\n\nOur lawyers say all files should use the oldest copyright date in the repo, even for new files.  I can't find that documentation at the moment.",
                "createdAt": "2020-04-13T19:06:37Z"
            },
            {
                "author": "tauu",
                "bodyText": "Our lawyers say all files should use the oldest copyright date in the repo, even for new files. I can't find that documentation at the moment.\n\nOK, thanks for the explanation. :-) The copyright notice has been added.",
                "createdAt": "2020-04-14T11:21:36Z"
            },
            {
                "author": "tauu",
                "bodyText": "So I was able to make analyze-linux almost happy with the last commits. The only thing remaining is, that it requires executing flutter update-packages --force-upgrade to set the dependencies of the ios test app. Doing so will change a lot of pubspec.yaml files in the repository to upgrade the path package from 1.6.4 to 1.7.0. Is it ok to add these changes to the current PR or should I wait until the package  upgraded is done by another commit in the master branch and rebase onto it afterwards?",
                "createdAt": "2020-04-14T16:40:10Z"
            },
            {
                "author": "jmagman",
                "bodyText": "The only thing remaining is, that it requires executing flutter update-packages --force-upgrade to set the dependencies of the ios test app. Doing so will change a lot of pubspec.yaml files in the repository to upgrade the path package from 1.6.4 to 1.7.0. Is it ok to add these changes to the current PR or should I wait until the package upgraded is done by another commit in the master branch and rebase onto it afterwards?\n\nCan you run it, but revert everything but the changes in ios_app_with_watch_companion?  Updating all the pubspecs should be done in a separate PR (and eventually automatically).",
                "createdAt": "2020-04-14T20:01:33Z"
            },
            {
                "author": "tauu",
                "bodyText": "Can you run it, but revert everything but the changes in ios_app_with_watch_companion? Updating all the pubspecs should be done in a separate PR (and eventually automatically).\n\nYes, have already tried that, but this leads to analyze-linux failing due to a dependency conflict for the path package.  The obvious next step is to manually edit the version number of the autogenerated dependency so that it matches the version used by the reverted pubspec files. Unsurprisingly this yields a checksum error for the pubsec file. Furthermore removing the checksum then results in analyze-linux not detecting the autogenerated imports and the error from the beginning asking for a forced package upgrade. :-( Kudos for the very solid checks btw. ;-)\nSo I was thinking about creating the checksum by hand to finally convince the analyze script, but somehow it didn't feel like this would be the intended way to handle this error. (well that and standard md5/sha1/sha256 didn't seem to yield a correct hash value)\n\ud83d\udc4d for automatic package upgrades",
                "createdAt": "2020-04-14T20:45:10Z"
            },
            {
                "author": "tauu",
                "bodyText": "Created #54787 which contains only the changes created by executing flutter upgrade-packages --force-upgrade.",
                "createdAt": "2020-04-14T21:51:14Z"
            },
            {
                "author": "jmagman",
                "bodyText": "Created #54787 which contains only the changes created by executing flutter upgrade-packages --force-upgrade.\n\nMerged.",
                "createdAt": "2020-04-15T01:21:44Z"
            },
            {
                "author": "tauu",
                "bodyText": "Thanks for merging #54787 so fast! :-)",
                "createdAt": "2020-04-15T16:42:15Z"
            },
            {
                "author": "tauu",
                "bodyText": "No problem, always a pleasure submitting PRs to the flutter project. Thank you for all the detailed feedback.",
                "createdAt": "2020-04-15T22:51:41Z"
            },
            {
                "author": "Henrik-glt",
                "bodyText": "@tauu Are you able to run using flutter run when your iOS app has a watch extension?\nI've tried to get my app with an Apple Watch extension to run, but no luck so far.\nWhen I use legacy build system I get the following error:\nPrepare build\n               note: Using legacy build system\n               === BUILD TARGET TestWatch Extension OF PROJECT Runner WITH CONFIGURATION Debug ===\n           \n               Check dependencies\n               No architectures to compile for (ONLY_ACTIVE_ARCH=YES, active arch=arm64, VALID_ARCHS=arm64_32 armv7k).\n\nThis seems to be caused flutter specifying architecture arm64, but that is not a valid architecture for the watch extension.\nWhen I use the \"new\" build system I get an error saying that signing doesn't match parent app.\nRunning flutter build ios works now however (great work! :) )\nAm I missing something obvious?\nErrors produced by switching to master (flutter channel master), run flutter upgrade and then flutter run",
                "createdAt": "2020-04-16T08:05:08Z"
            },
            {
                "author": "tauu",
                "bodyText": "@Henrik-glt Can confirm that using flutter run to run a flutter app with a watch companion does not work for a real device. Just tried it and I get the same error message.\n\nEmbedded binary is not signed with the same certificate as the parent app.\n\nSorry apparently I missed checking it this way. Running the app on a real device from XCode works though. So likely the build process employed by flutter run differs in some way from what XCode does, will investigate it further.",
                "createdAt": "2020-04-16T10:35:50Z"
            },
            {
                "author": "tauu",
                "bodyText": "@Henrik-glt: Found the issue and proposed a fix for it #54959.",
                "createdAt": "2020-04-16T14:05:20Z"
            },
            {
                "author": "Henrik-glt",
                "bodyText": "@tauu  Works like a charm! Great work and many thanks for fixing this!",
                "createdAt": "2020-04-17T06:53:03Z"
            },
            {
                "author": "mgonzalezc",
                "bodyText": "Hello,\nDoes anybody have a workaround in case WKCompanionAppBundleIdentifier is not the app bundle itself but a build variable like ${APP_BUNDLE}?\nWe have different bundle identifiers in our app so we need to have it in this way.",
                "createdAt": "2021-03-09T16:21:15Z"
            },
            {
                "author": "wph144",
                "bodyText": "Hello,\nDoes anybody have a workaround in case WKCompanionAppBundleIdentifier is not the app bundle itself but a build variable like ${APP_BUNDLE}?\nWe have different bundle identifiers in our app so we need to have it in this way.\n\nI have same issue. I use flavor like com.foo.bar and com.foo.bar.dev\nIf I set WKCompanionAppBundleIdentifier = \"com.foo.bar${BUNDLE_ID_SUFFIX}\", build fails",
                "createdAt": "2022-02-24T19:47:35Z"
            },
            {
                "author": "wph144",
                "bodyText": "Hello,\nDoes anybody have a workaround in case WKCompanionAppBundleIdentifier is not the app bundle itself but a build variable like ${APP_BUNDLE}?\nWe have different bundle identifiers in our app so we need to have it in this way.\n\nI have same issue. I use flavor like com.foo.bar and com.foo.bar.dev If I set WKCompanionAppBundleIdentifier = \"com.foo.bar${BUNDLE_ID_SUFFIX}\", build fails\n\nI reolved using hacky solution.\nDespite of additional fix for substituting variable (Skogsfrae@584801d), I failed substituting \"com.foo.bar${BUNDLE_ID_SUFFIX}\"\nHowever \"$(PRODUCT_BUNDLE_IDENTIFIER)\" success\nSo I added the following to ../Runner/Info.plist\n    <key>WKCompanionAppBundleIdentifier</key>\n    <string>$(PRODUCT_BUNDLE_IDENTIFIER)</string>\n\n$(PRODUCT_BUNDLE_IDENTIFIER) is what value I want (e.g., \"com.foo.bar.dev\", etc) only where in Runner target.",
                "createdAt": "2022-02-24T23:18:52Z"
            }
        ],
        "commentCount": 33
    },
    {
        "number": 49527,
        "title": "Avoid calling didChangeDependences on a State that has dropped out of the tree",
        "author": "Dan Field",
        "state": "MERGED",
        "closedAt": "2020-01-29T22:33:02Z",
        "createdAt": "2020-01-27T07:08:53Z",
        "comments": [
            {
                "author": "rrousselGit",
                "bodyText": "It is a breaking change\nThis solves the \"Avoid calling didChangeDependences on a State that has dropped out of the tree\".\nBut it also debounce the call too.\nIf a StatefulWidget depends on two Inheritedwidgets, and both Inheritedwidgets changes within the same frame, then the StatefulWidget's didChangeDependencies is currently called twice\nThis change would make it called once.",
                "createdAt": "2020-01-27T07:20:05Z"
            },
            {
                "author": "dnfield",
                "bodyText": "Hm.  Should be easy to unbreak that by using a count instead of a book.",
                "createdAt": "2020-01-27T07:29:37Z"
            },
            {
                "author": "dnfield",
                "bodyText": "But it seems like we should eventually break it.",
                "createdAt": "2020-01-27T07:29:54Z"
            },
            {
                "author": "Hixie",
                "bodyText": "whether it's a breaking change or not is just whether it breaks any of the contributed tests. (see our breaking change policy)\nassuming it doesn't, this seems valuable.",
                "createdAt": "2020-01-27T15:24:29Z"
            },
            {
                "author": "rrousselGit",
                "bodyText": "I don't know about the contributed tests, but it does break some of the content available online.\nI've seen didChangeDependencies used for pushing routes/modals which works only because it is executed synchronously on change.\n@override\nvoid didChangeDependencies() {\n  super.didChangeDependencies();\n\n  if (whatever) {\n    showBottomSheet<void>(\n      context: context,\n      builder: (_) {\n        return Text('Hello world');\n      },\n    );\n  }\n}",
                "createdAt": "2020-01-27T15:51:32Z"
            },
            {
                "author": "Hixie",
                "bodyText": "see https://flutter.dev/docs/resources/compatibility",
                "createdAt": "2020-01-27T16:09:12Z"
            },
            {
                "author": "rrousselGit",
                "bodyText": "I know about flutter/test, but it does not consider all the private apps, articles, and answers online.\nI know this for fact because a few people asked me about \"how to push Routes/... on provider change\" and I remember answering a few of these with didChangeDependencies\nHere's one for example: https://stackoverflow.com/questions/59400368/how-to-do-something-if-changenotifier-notifies-with-provider-package-similar\nThe author edited his question to mention that I answered him about didChangeDependencies (used as mentionned in #49527 (comment))\nSo even if all tests on Flutter and Flutter/test pass, there's still a risk here.\nMaking an announcement doesn't hurt anybody",
                "createdAt": "2020-01-27T16:18:30Z"
            },
            {
                "author": "goderbauer",
                "bodyText": "This looks like a good change to me, but it is failing some tests on Cirrus.",
                "createdAt": "2020-01-27T17:36:44Z"
            },
            {
                "author": "dnfield",
                "bodyText": "Yeah, it's breaking some stuff with focus scope, trying to figure out why right now.",
                "createdAt": "2020-01-27T17:37:26Z"
            },
            {
                "author": "dnfield",
                "bodyText": "To make this work, I had to update FocusScope so that it does some work it used to only do in didChangeDependencies so that it now does that work also in deactivate.\nI think this falls under:\n\nChanges that do not break any tests. We will pretend that such changes are not breaking changes and make them without any effort to prevent breakages. In cases where we can imagine reasonable scenarios where developers would be affected negatively, by courtesy, once the change has landed, engineers are encouraged to announce the changes by sending an e-mail to flutter-announce and listing it on our Changelog wiki page (such that they will be included in our release notes). However, we do not consider these breaking changes.",
                "createdAt": "2020-01-27T18:17:40Z"
            },
            {
                "author": "SpajicM",
                "bodyText": "I know about flutter/test, but it does not consider all the private apps, articles, and answers online.\nI know this for fact because a few people asked me about \"how to push Routes/... on provider change\" and I remember answering a few of these with didChangeDependencies\n\n@rrousselGit Thank you for considering this case - I'm among the ones who used that advice.\nWould you mind suggesting an alternative that scenario?",
                "createdAt": "2020-01-27T20:14:36Z"
            },
            {
                "author": "dnfield",
                "bodyText": "This would only break you if your widget was dropping out of the tree AFAICT.  If you didn't want to push a route in deactivate, you wouldn't want to have used the functionality this removes either, right?",
                "createdAt": "2020-01-27T21:05:14Z"
            },
            {
                "author": "dnfield",
                "bodyText": "I will be running this patch through a set of internal tests before landing - we have plenty of people using provider and if it breaks anything in there it's a breaking change.",
                "createdAt": "2020-01-27T21:05:35Z"
            },
            {
                "author": "rrousselGit",
                "bodyText": "This would only break you if your widget was dropping out of the tree AFAICT. If you didn't want to push a route in deactivate, you wouldn't want to have used the functionality this removes either, right?\n\nNo, this breaks a different situation unrelated to unmounting\nIt's about the lifecycle being called in a state where the tree is unlocked VS the tree being locked.\nWith such change, calling showBottomSheet in didChangeDependencies will now throw the typical \"setState() or markNeedsBuild() called when widget tree was locked\" when it didn't before",
                "createdAt": "2020-01-27T21:17:15Z"
            },
            {
                "author": "rrousselGit",
                "bodyText": "All in all, I'm definitely for this change.\nIf people need the old behavior, provider can implement something using a custom Element to help people migrate.\nIt's more about making sure that it's communicated, as I'm 99% sure that it may break someone's code",
                "createdAt": "2020-01-27T21:33:45Z"
            },
            {
                "author": "Hixie",
                "bodyText": "I know about flutter/test, but it does not consider all the private apps, articles, and answers online.\n\nFeel free to submit tests that verify those (e.g. by creating a repo that just contains tests that reflect what those articles say, and submitting that repo to flutter/tests). That would be really useful in fact.",
                "createdAt": "2020-01-28T03:48:32Z"
            },
            {
                "author": "dnfield",
                "bodyText": "I ran this through all the internal tests and it passed.\nI'm a bit torn on whether I should be trying to find a way to avoid having this be withint he build scope.",
                "createdAt": "2020-01-28T05:01:55Z"
            },
            {
                "author": "rrousselGit",
                "bodyText": "I know about flutter/test, but it does not consider all the private apps, articles, and answers online.\n\nFeel free to submit tests that verify those (e.g. by creating a repo that just contains tests that reflect what those articles say, and submitting that repo to flutter/tests). That would be really useful in fact.\n\nIt shouldn't be my responsibility but either the authors of these articles/answers or some member of the Flutter team when triaging questions/issues.\n\nI'm a bit torn on whether I should be trying to find a way to avoid having this be withint he build scope.\n\nHere's a test that should fail with these changes:\nimport 'package:flutter/material.dart';\nimport 'package:flutter_test/flutter_test.dart';\nimport 'package:provider/provider.dart';\n\nvoid main() {\n  testWidgets('didChangeDependencies can modify parents', (tester) async {\n    final child = MaterialApp(home: Scaffold(body: Example()));\n\n    await tester.pumpWidget(Provider.value(value: 0, child: child));\n\n    expect(find.text('bottom-sheet'), findsNothing);\n\n    await tester.pumpWidget(Provider.value(value: 42, child: child));\n\n    expect(find.text('bottom-sheet'), findsOneWidget);\n  });\n}\n\nclass Example extends StatefulWidget {\n  @override\n  _ExampleState createState() => _ExampleState();\n}\n\nclass _ExampleState extends State<Example> {\n  int previous;\n  @override\n  void didChangeDependencies() {\n    super.didChangeDependencies();\n    final value = Provider.of<int>(context);\n    if (value != previous) {\n      previous = value;\n      if (value == 42) {\n        showBottomSheet<void>(\n          context: context,\n          builder: (context) {\n            return const Text('bottom-sheet');\n          },\n        );\n      }\n    }\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return Container();\n  }\n}",
                "createdAt": "2020-01-28T07:55:24Z"
            },
            {
                "author": "dnfield",
                "bodyText": "This test case seems really fishy to me.\nEven without these changes, it will fail if you change the order of the condition so that it's true on the first build. With these changes, it will fail on both.\nWithout these changes, I'm confused about the expected behavior of\n await tester.pumpWidget(Provider.value(value: 42, child: const SizedBox()));\n\nIt does not show the modal, and does not error (?!).\nI've tried a couple ways to disable the debug check in this case, but there's no clean way to do it so showing the modal works, because it wants to set state on other elements in the tree, and we can't figure all of that out without going through a build cycle, and by the time we know it's too late to be modifying other parts of the tree.\nAnd given that this has several ways to fail, some of which just fail silently, it seems better to have it just error now rather than have it sometimes succeed and sometimes do nothing.",
                "createdAt": "2020-01-28T09:43:57Z"
            },
            {
                "author": "rrousselGit",
                "bodyText": "Well, fishy or not that's still something that some people do.\nIt's currently the only solution to have an \"onChange\" callback for\ninherited widgets that can trigger side-effects, without relying on\naddPostFrameCallback\n\n\nIn any case, I have proper solutions for these in progress (like\nhttps://github.com/rrousselGit/flutter_portal), so I'm definitely for these\nchanges too\n\u2026\nOn Tue, Jan 28, 2020, 09:44 Dan Field ***@***.***> wrote:\n This test case seems really fishy to me.\n\n Even without these changes, it will fail if you change the order of the\n condition so that it's true on the first build. With these changes, it will\n fail on both.\n\n Without these changes, I'm confused about the expected behavior of\n\n  await tester.pumpWidget(Provider.value(value: 42, child: const SizedBox()));\n\n It does not show the modal, and does not error (?!).\n\n I've tried a couple ways to disable the debug check in this case, but\n there's no clean way to do it so this example works, because it wants to\n set state on *other elements in the tree*, and we can't figure all of\n that out without going through a build cycle, and by the time we know it's\n too late to be modifying other parts of the tree.\n\n \u2014\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n <#49527?email_source=notifications&email_token=AEZ3I3O5JLNKP3IUZATEUMLQ7746BA5CNFSM4KL4TC2KYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEKCU3CY#issuecomment-579161483>,\n or unsubscribe\n <https://github.com/notifications/unsubscribe-auth/AEZ3I3JKOCEERLSUMN74KADQ7746BANCNFSM4KL4TC2A>\n .",
                "createdAt": "2020-01-28T10:33:10Z"
            },
            {
                "author": "SpajicM",
                "bodyText": "Proper solution is using yet another library? :(",
                "createdAt": "2020-01-28T10:43:07Z"
            },
            {
                "author": "Hixie",
                "bodyText": "didChangeDependencies is just like build, in that it shouldn't have side effects like showing a dialog. I'm surprised that doesn't assert, to be honest.",
                "createdAt": "2020-01-28T17:07:15Z"
            },
            {
                "author": "dnfield",
                "bodyText": "It asserts if:\n\nIt's called on the first build\nIt's called when the element is deactivated\n\nIt does not assert if:\n\nIt's called on any non-first build where the element will stay in the tree.\n\nBut this PR will change that.\n@SpajicM\nA very simple fix would be to just wrap that code in a SchedulerBinding.instance.scheduleFrameCallback or maybe addPostFrameCallback - that's effectively what's happening when you show a dialog from a click handler.",
                "createdAt": "2020-01-28T17:34:31Z"
            },
            {
                "author": "rrousselGit",
                "bodyText": "IMO the proper fix should instead be in the line of what's done with Navigator 2.0, by making modals declarative, like I've done in https://github.com/rrousselGit/flutter_portal\nThat's off-topic though.\nShould I make an issue about potentially merging that library in Flutter as part of Navigator 2.0, or is it pointless?",
                "createdAt": "2020-01-28T17:51:09Z"
            },
            {
                "author": "dnfield",
                "bodyText": "@rrousselGit - it would probably be good to file a new issue for that, maybe tag @chunhtai",
                "createdAt": "2020-01-28T22:45:23Z"
            },
            {
                "author": "dnfield",
                "bodyText": "I've added an answer to the linked stackoverflow question indicating why the behavior isn't safe to use this way and won't work going forward, and what to do about it.  I'll also send a curteously email to flutter-announce.",
                "createdAt": "2020-01-29T20:26:12Z"
            },
            {
                "author": "rrousselGit",
                "bodyText": "After some thinking, I've realized that this PR broke flutter_hooks (not in a critical way).\nWhile the behavior change is good, I think it broke the semantics of the life-cycles.\nBefore, we had a very clear separation:\n\nStateElement.didChangeDependencies called State.didChangeDependencies\nStateElement.build called State.build\n\nBut now things got entangled in a weird way, where StateElement.build is triggering both life-cycles on State.\nThat's why it broke these two packages.\n\nMy suggestion is:\nStep 1: Revert to the old behavior of StateElement.didChangeDependencies calling State.didChangeDependencies.\nStep 2: Introduce a new method: Element.markNeedsChangeDependencies.\nStep 3: Migrate the previous didChangeDependencies call to markNeedsChangeDependencies instead.\nThis achieves the same behavior as right now, but leads to a more logical API and no longer flutter_hooks.\n(or do #49506, which is what broke in flutter_hooks \u2013 but the team sounds against it)",
                "createdAt": "2020-01-31T10:01:21Z"
            },
            {
                "author": "dnfield",
                "bodyText": "Can you share some test cases that this breaks? If we revert we should add tests showing what it breaks.",
                "createdAt": "2020-01-31T15:05:00Z"
            },
            {
                "author": "rrousselGit",
                "bodyText": "Sure thing:\ntestWidgets('can decorate StatefulElement.build', (tester) async {\n  await tester.pumpWidget(\n    Provider.value(\n      value: 0,\n      child: HookWidget(),\n    ),\n  );\n\n  // will crash inside didChangeDependencies\n  await tester.pumpWidget(\n    Provider.value(\n      value: 42,\n      child: HookWidget(),\n    ),\n  );\n});\n\nclass HookWidget extends StatefulWidget {\n  @override\n  _HookWidgetState createState() => _HookWidgetState();\n\n  @override\n  _HookElement createElement() {\n    return _HookElement(this);\n  }\n}\n\nclass _HookElement extends StatefulElement {\n  _HookElement(StatefulWidget widget) : super(widget);\n  static _HookElement _buildingElement;\n\n  @override\n  Widget build() {\n    try {\n      _buildingElement = this;\n      final res = super.build();\n      return res;\n    } finally {\n      _buildingElement = null;\n    }\n  }\n}\n\nclass _HookWidgetState extends State<HookWidget> {\n  @override\n  void didChangeDependencies() {\n    assert(_HookElement._buildingElement == null);\n    Provider.of<int>(context);\n    super.didChangeDependencies();\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    assert(_HookElement._buildingElement != null);\n    return Container();\n  }\n}\nThis breaks some health checks on flutter_hook (namely the #49506 flag I implemented myself) so nothing critical.\nThis is more about the implementation.\nIt feels off to have:\nWidget build() {\n  if (_didChangeDependencies) {\n    _didChangeDependencies = false;\n   didChangeDependencies();\n  }\n  return _state.build();\n}\nIMO it should be more something like:\nvoid performRebuild() {\n  ...\n  Widget built;\n  try {\n    if (_didChangeDependencies) {\n      _didChangeDependencies = false;\n     didChangeDependencies();\n    }\n    built = build();\n    debugWidgetBuilderValue(widget, built);\n  }\n  ...\nThis way we are not mixing build and didChangeDependencies",
                "createdAt": "2020-01-31T15:32:16Z"
            },
            {
                "author": "dnfield",
                "bodyText": "Am I understanding your test correctly by thinking it's basically the same as what you're requesting in #49505?",
                "createdAt": "2020-01-31T17:44:10Z"
            },
            {
                "author": "rrousselGit",
                "bodyText": "They are related.\nIt includes #49505, but also does extra things as it's not just a boolean, but an custom Element with a State and methods and stuff.\nBut yeah, the part that broke is the part where I use this static Element to implement a #49505",
                "createdAt": "2020-01-31T18:05:09Z"
            },
            {
                "author": "goderbauer",
                "bodyText": "@rrousselGit I would like to encourage you to contribute your flutter_hooks tests to https://github.com/flutter/tests. That way, we will treat every change that breaks one of those tests as a breaking change and will work with you to mitigate the breakage (see our breaking change policy).\nLooking at the code you posted above I don't fully understand the purpose of that test. You could just move the try/finally from _HookElement.build() to _HookWidgetState.build(), which would get you the old behavior even with this change (and as far as I can tell from the example above doesn't break anything else).\nAs it stands, I don't see any reason to revert this patch.",
                "createdAt": "2020-01-31T20:50:22Z"
            },
            {
                "author": "rrousselGit",
                "bodyText": "Actually flutter_mobx broke too \u2013 with a more important bug for this one (with basically the same test).\n\nLooking at the code you posted above I don't fully understand the purpose of that test. You could just move the try/finally from _HookElement.build() to _HookWidgetState.build(), which would get you the old behavior even with this change (and as far as I can tell from the example above doesn't break anything else).\n\nThat's impossible.\nElement is in the scope of the library, State is in the user scope.\nWe can't ask all users to include a try/finally inside their build method. And it's not feasible to refactor it into a State subclass either (and is a breaking change anyway).\nAnd these answers miss the point. What do you think of:\nvoid performRebuild() {\n  ...\n  Widget built;\n  try {\n    if (_didChangeDependencies) {\n      _didChangeDependencies = false;\n     didChangeDependencies();\n    }\n    built = build();\n    debugWidgetBuilderValue(widget, built);\n  }\n  ...",
                "createdAt": "2020-02-01T03:33:14Z"
            },
            {
                "author": "goderbauer",
                "bodyText": "Element is in the scope of the library, State is in the user scope.\n\nThat's not clear from the code you posted.\nAnyhow, it looks like you found a solution.",
                "createdAt": "2020-02-03T18:37:31Z"
            }
        ],
        "commentCount": 34
    },
    {
        "number": 67515,
        "title": "Implement Cupertino Sheet",
        "author": "Jaime Blasco",
        "state": "CLOSED",
        "closedAt": "2021-12-09T21:50:42Z",
        "createdAt": "2020-10-07T10:32:12Z",
        "comments": [
            {
                "author": "DanielEdrisian",
                "bodyText": "Hey, thanks for submitting the PR! I'm going through this and I have a quick question:\nHow can I get the scaling effect with this? This is my result right now:\n\nMy flutter code:\nCupertinoButton(\n      child: Text('Show Flutter Modal'),\n      onPressed: () {\n        showCupertinoModalBottomSheet(\n          context: context,\n          builder: (context) => Container(),\n        );\n      },\n    )\n(What you see at first is the standard iOS modal done in SwiftUI. The second one is done in Flutter.)",
                "createdAt": "2020-10-09T01:06:58Z"
            },
            {
                "author": "jamesblasco",
                "bodyText": "Hello!\nSo far I only implemented it for routes that are MaterialPageRoute. I also add support for CupertinoPageRoute, or all PageRoutes.\nWith MaterialApp it should work without adding anything. In the case of a CupertinoApp, it uses CupertinoPageRoute so now it doesn't work out of the box.\n\nWorking demo code\nvoid main() => runApp(MyApp());\n\nclass MyApp extends StatelessWidget {\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      theme: ThemeData(platform: TargetPlatform.iOS),\n      title: 'BottomSheet Modals',\n      home: Builder(\n        builder: (context) => Scaffold(\n          body: Column(\n            crossAxisAlignment: CrossAxisAlignment.stretch,\n            mainAxisSize: MainAxisSize.min,\n            children: <Widget>[\n              ListTile(\n                title: Text('Cupertino Sheet'),\n                onTap: () {\n                  showCupertinoModalBottomSheet(\n                    expand: true,\n                    context: context,\n                    builder: (context) => Container(),\n                  );\n                },\n              )\n            ],\n          ),\n        ),\n      ),\n    );\n  }\n}\n\nNote: In the original package, I could not edit MaterialPageRoute. Devs always needed to replace their routes with MaterialWithModalsPageRoute.\nNow for the PR I've created a mixin AllowsRouteWithPreviousTransitionMixin that out of the box allows transitions to routes that contain the mixin RouteWithPreviousTransitionMixin.\nEvery route that uses that last mixin will need to apply a method that defines the transition of the previous route.\nEg. MaterialPageRoutes fade in/out, but will scale and translate when a modal sheet route appears.\nCupertinoPageRoutes animate from left to right, but should scale and translate when a modal sheet route appears.",
                "createdAt": "2020-10-09T08:36:12Z"
            },
            {
                "author": "jamesblasco",
                "bodyText": "Now you should be able to use MaterialPageRoute or CupertinoPageRoute in the route before, and it will be animated.\nCupertinoApp and MaterialApp should also work by default.",
                "createdAt": "2020-10-09T09:07:49Z"
            },
            {
                "author": "DanielEdrisian",
                "bodyText": "Hey man, that's great! Will take a look.\nYou've already pointed out that this PR needs some tests before landing--perfect. We should also put in the effort to semi-extensively document the code (beyond the occasional comments.) Here's an example of what I mean.\nAfter those two are done, I have a couple of questions about the curve function that I'd like to ask.\nThanks James!",
                "createdAt": "2020-10-10T00:23:14Z"
            },
            {
                "author": "jamesblasco",
                "bodyText": "Thanks for the response @DanielEdrisian\nBefore I started to improve and document the code, I would like to get some feedback about the things I pointed out in the PR description. I think they are important. I will comment on them in the code separately.",
                "createdAt": "2020-10-11T10:47:19Z"
            },
            {
                "author": "chunhtai",
                "bodyText": "This is implemented the same as showdialog, it will be treated as pageless route and should be fine unless we want to have decorative api to show the button sheet",
                "createdAt": "2020-10-12T21:25:47Z"
            },
            {
                "author": "jamesblasco",
                "bodyText": "Before going in detail answering back all the comments. Thanks, @xster for having a deep look at my code.\nIn general, both showMaterialModalBottomSheet and showCupertinoModalBottomSheet API are heavily inspired in showModalBottomSheet (Notice it is different from Scaffold.showBottomSheet).\nshowCupertinoModalBottomSheet would correspond to the Cupertino Modal View.\nAlso, I kept showCustomModalBottomSheet to allow people to create their own easily\neg:\n\n\n\nExample\nImplementation\n\n\n\n\n  https://fluffy.es/facebook-draggable-bottom-card-modal-1/\nhttps://github.com/jamesblasco/modal_bottom_sheet/blob/master/lib/src/bottom_sheets/bar_bottom_sheet.dart\n\n\n   https://fluffy.es/facebook-draggable-bottom-card-modal-1/\nhttps://github.com/jamesblasco/modal_bottom_sheet/blob/master/example/lib/modals/circular_modal.dart\n\n\n\nAll the implementations share most of the code and only the part for the decoration is separated for each. In the case of Cupertino, there is also a different route for the z-index translation.\nIf you consider we should only add the Cupertino Modal View with another API, I could work on that. I like the flexibility this current implementation has but I also understand why it would be good to focus on the Cupertino Modal View and remove the rest.",
                "createdAt": "2020-10-12T21:55:44Z"
            },
            {
                "author": "xster",
                "bodyText": "Regarding:\n\nThis is implemented the same as showdialog, it will be treated as pageless route and should be fine unless we want to have decorative api to show the button sheet;\n\n\nIn general, both showMaterialModalBottomSheet and showCupertinoModalBottomSheet API are heavily inspired in showModalBottomSheet\n\nYa, both are very sensible. Also, I could be wrong about this given more data. I might not be making a complete observation here either. Since Apple's APIs are evolving as well, rather than freezing in Apple's current implementation, we have to map their APIs into our APIs' intents as well and some of which will be a subjective call.\nTo me, the main differentiation we need to make between the modal pop-over style APIs we have such as showModalBottomSheet, showCupertinoModalPopup etc and the \"permanent\" page style APIs such as PageRoute with CupertinoFullscreenDialogTransition is how transient, non-resting-state the page in question are.\nRegarding https://fluffy.es/facebook-draggable-bottom-card-modal-1/ and the current dialogs, Cupertino action sheets etc, despite visual similarities, I believe they serve very different purposes than iOS 13's modal sheets. Consider, for instance, this sequence of actions:\n\nWhile modal (i.e. you need to stay here or in a child page until you complete the task), they're not lightweight, ephemeral or leaf nodes in the navigation. They need to deeply integrate with the rest of our PageRoutes (seen by the horizontal style transition in the middle of the existing vertical sheet transation) #33799. An equivalent question to ask is can a dialog itself be in the middle of a sequence of navigations that subsequently lead into another fullscreen page on top of it.\nRegarding navigator 2.0, another distinguishing question we can ask ourselves is could users deep link into one of the sheet presented pages and could a sheet presented page be serialized along with the rest of the navigation stack and then restored? I think the answer for both questions are no for a dialog box or a Cupertino action sheet and yes for a modal sheet.",
                "createdAt": "2020-10-14T05:55:22Z"
            },
            {
                "author": "jamesblasco",
                "bodyText": "Yes for me it is way different from how a dialog and a modal page should behave. I agree with you that the iOS modal is not as ephemeral as the modal bottom sheet described in the material guidelines. iOS Sheet Modals should be able to display it with a deep link and allow inside-navigation. Related to the last one, I think users should use a nested Navigator or a  CupertinoTabView. On iOS, UINavigationController it is used with the same idea (ref).\nOne of my concerns is that, on iOS,  I haven't seen a case where a different 'PageRoute/UIViewController' can push from a modal page. I don't think it is possible on iOS, but it would be possible on Flutter just by pushing a new route to the Navigator.\nI implemented the same API as the showModalBottomSheet as they have a lot of similarities, but I agree that should be exposed as a Route and not as a static API.\nBut for me, there is a blurred line between the material modal bottom sheet and the iOS modal sheet page.  There are some edge examples I have been researching:\n\n Modal Sheets examples \n\n\nApple Home App. Official iOS Modal Page.\nThe same case happens on Spotify\nModal sheet don't animate the previous route\n \n\n\nApple Store App. Official iOS Modal Page. iPad Version\nThe modal page on the iPad is displayed as dialog animated from the bottom. No code changes from the iPhone modal version.\n\n\n \n\niOS Share Sheet\nCan be expanded as a full modal page. Can have nested modals.\n\n \n\n**Material Modal Bottom Sheet **\n\nThe initial vertical position is capped at 50% of the screen height.(\u274c Different)\nExpandable full screen.\nThe concept is limited to simple actions. For other uses, material recommends Expanding Bottom Sheet that animate from a view instead of from the bottom.\nhttps://material.io/develop/android/components/bottom-sheet-dialog-fragment says they are thew new version of dialogs\n \n\nFacebook App. Custom Modal Bottom Sheet.\n\nIt has nested modals. And the models can have inside the navigation.  They are expanded or custom height. Could they be deep linked?\n \n\nSlack Modal Bottom Sheet https://github.com/slackhq/PanModal\nThey can be expanded, nested, and have inside navigation. They could also be deep linked.\n\n \n\nIn the examples, for me, they share the same concepts and use different appearances to be displayed. All are animated from the bottom, can be closed by dragging, can be fit/expanded, and if there is a scroll view both scroll and drag should be sync. They can also be nested and used inside the navigation.\nMaybe the naming is not the same but the implementation is. I understand that we should prioritize the material modal_bottom_sheet concept just for actions and use another name for the rest.\nUPDATE: This is how it is used in Swift UI. Just calls it sheet\nhttps://developer.apple.com/documentation/swiftui/view-presentation\nstruct ContentView: View {\n    @State var showingDetail = false\n\n    var body: some View {\n        Button(action: {\n            self.showingDetail.toggle()\n        }) {\n            Text(\"Show Detail\")\n        }.sheet(isPresented: $showingDetail) {\n            DetailView()\n        }\n    }\n}\nSo what about calling it CupertinoSheetRoute? And it would extend SheetRoute that can be used to display these kinds of pages that appear from the bottom?\nFor Navigator 2.0 would be CupertinoSheetPage then",
                "createdAt": "2020-10-14T09:22:26Z"
            },
            {
                "author": "jamesblasco",
                "bodyText": "Sorry for the ping, @christopherfujino @Piinks. I made a rebase from master to my fork and somehow with Github Desktop, I added your lastest commits to this PR. Fixed now",
                "createdAt": "2020-10-14T12:06:01Z"
            },
            {
                "author": "xster",
                "bodyText": "Thanks for putting so much thought into it. It's definitely a gray area and the data you collected is helpful.\n\nRelated to the last one, I think users should use a nested Navigator or a CupertinoTabView. On iOS, UINavigationController it is used with the same idea (ref).\n\nYa, at a glance, I suspect that'll have to be the route we take too. Though we don't have to solve #33799 the nesting problem right now in this PR, as long as we move in the right direction.\n\nOne of my concerns is that, on iOS, I haven't seen a case where a different 'PageRoute/UIViewController' can push from a modal page.\n\nWhat do you mean? Is this related to #33799 or something else? Maybe you meant whether it's possible to push something not nested into the modal sheet but overtop it? If so I agree.\n\nApple Home App. Official iOS Modal Page.\n\nUmm weird, it does animate the bottom page for me. Might be a bug.\n\nApple Store App. Official iOS Modal Page. iPad Version\n\nThis is a great example. I was just thinking we might be able to make the optimization in case of modal sheets to turn the bottom route offscreen. This example definitely makes the case for it. While we don't currently support tablet formats (such as context menus instead of action sheets etc), we should definitely design architecturally with that in mind.\n\niOS Share Sheet\n\nGreat example too. I think the learning from that one is snapping at the 50% position will need to be something we leave room for as well. Also reinforces that the bottom route is still on-screen even for phones.\n\nI understand that we should prioritize the material modal_bottom_sheet concept just for actions and use another name for the rest.\n\nYa, that's more or less in line with what I'm thinking\n\nSo what about calling it CupertinoSheetRoute? And it would extend SheetRoute that can be used to display these kinds of pages that appear from the bottom?\n\nSo you're saying fork at the ModalRoute level and let there be a PageRoute, SheetRoute and PopupRoute as options? Without looking too deeply into the framework for existing assumptions and usages of PageRoute that are already baked into the framework, that sounds reasonable to me. @goderbauer might have some opinions on creating a branch there too (also wrt navigator 2.0).",
                "createdAt": "2020-10-14T19:18:30Z"
            },
            {
                "author": "xster",
                "bodyText": "@jamesblasco we love what you've done so far :) would you like to proceed forward with this PR? (or perhaps you're waiting for another review in its current state?)",
                "createdAt": "2020-10-22T18:11:21Z"
            },
            {
                "author": "jamesblasco",
                "bodyText": "I was waiting to see if the person you tagged would add something meaningful.\nBut I can start to make the api as we said with SheetRoute.\nThis week I tried to move this to a project as it was easier for me to try things there, but I didn\u2019t manage to build the project with the no-nullability code inside.\nI will do the work here then",
                "createdAt": "2020-10-22T20:27:55Z"
            },
            {
                "author": "xster",
                "bodyText": "@goderbauer thoughts on adding SheetRoute as a sibling to PageRoute?",
                "createdAt": "2020-10-23T04:18:25Z"
            },
            {
                "author": "jamesblasco",
                "bodyText": "I've pushed new changes and the new API would now look like this:\nNavigator.of(context).push(\n    CupertinoSheetRoute(\n       builder: (context) => Container(),\n    ),\n);\nYou can try some examples in this project: https://github.com/jamesblasco/modal_bottom_sheet_example/\n\nFor the next steps, I will try it with the new Navigator 2.0 and I will focus on the Sheet widget that is inside.\nI want to add the option that it snaps to different positions.(See the iOS Share Sheet as example)  The approach will be similar to DraggableScrollableSheet, but with different behavior. While DraggableScrollableSheet you can drag anywhere from a min to max position, this widget should auto-snap to the min, max, or somewhere in the middle position.\nWe can make this class Sheet private and use only it in SheetRoute or adapt it so it can be also used outside the route (like DraggableScrollableSheet). If the name is not descriptive enough we could be named it SnapSheet.\nIf we do that, this would allow also an easier implementation of these complex interactions:\n\nSnap sheet demos: Apple Stocks, Google Maps\n\n\n\n\nA thing that still need to be considered out: To sync a ScrollView with the Sheet you need to use the same scrollController:\nRight now there is two options to do this:\nCupertinoSheetRoute(\n   builder: (context) => SingleChildScrollView(\n      primary: true,\n      child: Container(),\n    ),\n),\nor\nCupertinoSheetRoute(\n   builder: (context) => SingleChildScrollView(\n      controller: SheetController.of(context).scrollController,\n      child: Container(),\n    ),\n),\nI prefer the first one but I think people will have problems with it because of this: #64236. Using Scaffold inside the SheetRoute would make this non-usable, eg:\nCupertinoSheetRoute(\n   builder: (context) => Scaffold(\n     body: Builder(\n       builder: (context) => SingleChildScrollView(\n           primary: true,\n           child: Container(),\n        ),\n     ),\n   ),\n),\n26/10 Update Made some progress with the snapping capability, still need to integrate it with previous features (eg. bouncing, and curves)\n\n CupertinoSheetRoute(\n       initialStop: 0.5,\n       stops: [0, 0.5, 1]\n       builder: (context) => Container(),\n ),",
                "createdAt": "2020-10-25T09:13:06Z"
            },
            {
                "author": "goderbauer",
                "bodyText": "@goderbauer thoughts on adding SheetRoute as a sibling to PageRoute?\n\nSorry for the delay in looking at this. It's the first thing in my queue now and I will take a look at this first thing tomorrow morning.",
                "createdAt": "2020-10-27T00:10:05Z"
            },
            {
                "author": "goderbauer",
                "bodyText": "Edit: Please ignore my comment here. I got some additional context from @xster. And will take another look.\n\nSo you're saying fork at the ModalRoute level and let there be a PageRoute, SheetRoute and PopupRoute as options? Without looking too deeply into the framework for existing assumptions and usages of PageRoute that are already baked into the framework, that sounds reasonable to me. @goderbauer might have some opinions on creating a branch there too (also wrt navigator 2.0).\n\nHow do PageRoute and SheetRoute interact with each other? My understanding from iOS is that once you have pushed a sheet, you can push other routes within that sheet as well. What are those routes within the sheet? Do I need a separate Navigator for those in the sheet and then push regular PageRoutes onto them? Can I just push other SheetRoutes and PageRoutes and they will show up within the sheet? While on a sheet can I push another sheet? I think to decide whether a SheetRoute makes sense as a parallel concept to PageRoute I need to better understand how those two are supposed to interact with each other.\nThese questions also extend to Navigator 2.0. If I have a CupertinoSheetPage in my list of pages and the next page is a CupertinoPage, will it fully cover the SheetPage? (is that event legal in the cupertino design language?) Or will it somehow show up within the SheetPage?\nAs general feedback: It would be good to make it a little clearer what the entry point for the API is. Reading through the code it wasn't clear to me what is part of the public API and what isn't really. Better documentation would also help with figuring out how the pieces fit together.",
                "createdAt": "2020-10-27T17:30:43Z"
            },
            {
                "author": "goderbauer",
                "bodyText": "Ok, After re-reading the comment thread and talking to @xster I have a better understanding of this subject:\nI agree that the iOS sheet should behave more like a route and less like a modal. It is more permanent than a modal and it may include other \"screens\" (see for example the calendar editing flow). Given that, I think there should be something you push actively on the Navigator to show the sheet. This could be a special SheetRoute (which my include a sub-navigator to present other PageRoutes within the sheet - we should consider whether certain SheetRoute types always add a sub-navigator to achieve this since it seems pretty common and I think it doesn't make much sense to push a full-screen PageRoute over a SheetRoute?).\nThe more interesting aspect is still how PageRoutes and SheetRoutes will interact with each other. The most difficult part here seems to be that the new route needs to tell the old route how to transition off screen. That's something our routing system doesn't currently support, AFAIK. It may make sense to design this mechanism first. I think it should be a general mechanism of Routes, that's not specific to cupertino routes.\nSo, to answer the original question:\n\nSo you're saying fork at the ModalRoute level and let there be a PageRoute, SheetRoute and PopupRoute as options? Without looking too deeply into the framework for existing assumptions and usages of PageRoute that are already baked into the framework, that sounds reasonable to me. @goderbauer might have some opinions on creating a branch there too (also wrt navigator 2.0).\n\nI am not opposed to adding a new SheetRoute route type.",
                "createdAt": "2020-10-27T18:11:41Z"
            },
            {
                "author": "xster",
                "bodyText": "@goderbauer's comment sound reasonable to me. @jamesblasco, I think the central comment in our latest round is around #67515 (comment). Generally, don't feel constrained by the current navigator implementation and feel free to shake up our transition building mechanism (see https://github.com/flutter/flutter/wiki/Style-guide-for-Flutter-repo#lazy-programming).\nSince that design is a bit more open-ended, feel free to either write a short doc (https://flutter.dev/docs/resources/design-docs) or continue to write proposal code in your PR branch to discuss the high level design. Whichever you're more comfortable with. We're happy to give you more feedback.",
                "createdAt": "2020-10-27T18:59:07Z"
            },
            {
                "author": "jamesblasco",
                "bodyText": "Thanks for all the comments both @xster and @goderbauer. I will take a detailed look at all of them one by one and fix the respective code.\nI have pushed a new version that I summary a lot of the things we have talked about.\nThe public classes would be:\n\nSnapSheet a widget similar to DraggableScrollableSheet that can snap in different anchors.\nYou can control it with SheetController( if we keep the name SnapSheet it should be named SnapSheetControlller)\nand use it anywhere in your app. I am not very confident about keeping all the configuration params inside\nSnapSheetController.\neg:\n\n\n\nThen there is SheetRoute that uses SnapSheet internally. CupertinoSheetRoute is an implementation of SheetRoute\nthat also animates the previous/bottom route.\n\n\nI've also implemented an example with Navigator 2.0. I recommend you to run the examples repository https://github.com/jamesblasco/modal_bottom_sheet_example\nThis should be the only public classes available after this PR.\nFor me the next steps would be:\n\n\nCreate another PR or design doc for the following: Routes that tell the old route how to transition off-screen.\n\n\nFix animation curves and todos. I left some todos in the code about what I need to work more\n\n\nStart adding test, if the part from above is clear I should start now with this.\n\n\nImprove docs and follow 100% style guidelines.\n\n\nI will start with the first three.",
                "createdAt": "2020-10-27T19:03:16Z"
            },
            {
                "author": "jamesblasco",
                "bodyText": "@xster I am not sure what you are talking about. I don't have access to the link you shared. What is the new Material spec? Is it public or internal for google?",
                "createdAt": "2020-10-29T22:32:14Z"
            },
            {
                "author": "xster",
                "bodyText": "Sorry, ignore my last comment. It wasn't correct.",
                "createdAt": "2020-10-30T05:28:23Z"
            },
            {
                "author": "gibahjoe",
                "bodyText": "Bump!!!",
                "createdAt": "2021-01-09T01:12:33Z"
            },
            {
                "author": "axelthat",
                "bodyText": "Any progress?",
                "createdAt": "2021-01-26T13:26:06Z"
            },
            {
                "author": "SAGARSURI",
                "bodyText": "Any progress??",
                "createdAt": "2021-03-09T09:00:56Z"
            },
            {
                "author": "tvolkert",
                "bodyText": "@xster can you recommend a good person to pick up this review?\n@jamesblasco it looks like there are some failing tests - can you please rebase and fix the tests?",
                "createdAt": "2021-05-02T06:12:18Z"
            },
            {
                "author": "jamesblasco",
                "bodyText": "Hello @tvolkert, I am keeping working on improving the modals sheet through other channels. This PR is blocked by #69669. I haven't heard back there for a while",
                "createdAt": "2021-05-02T06:33:09Z"
            },
            {
                "author": "Hixie",
                "bodyText": "@jamesblasco Well it's more than a year after you submitted a PR so I apologize about the absurd slowness of this review but I finally got around to looking at the samples and the code and wow, this is really cool. I will look more closely at the code now but at a glance you seem to be doing all the right things.",
                "createdAt": "2021-12-09T21:40:19Z"
            },
            {
                "author": "jamesblasco",
                "bodyText": "Hi @Hixie, I am not working on this PR anymore. I don't think it is a good investment of your time right now to review this",
                "createdAt": "2021-12-09T21:46:41Z"
            },
            {
                "author": "jamesblasco",
                "bodyText": "I am working on trying to push a new version of the modal_bottom_sheet package this month with lots of new updates and a better approach to it. Once it is released, get some feedback and in case you are still interested in integrating it to the framework I can create a new PR",
                "createdAt": "2021-12-09T21:49:10Z"
            },
            {
                "author": "Hixie",
                "bodyText": "@jamesblasco sounds good. sorry again that we dropped the ball on this.",
                "createdAt": "2021-12-09T21:51:29Z"
            }
        ],
        "commentCount": 31
    },
    {
        "number": 56365,
        "title": "FormField should autovalidate only if its content was changed",
        "author": "Pedro Massango",
        "state": "CLOSED",
        "closedAt": "2020-06-18T15:35:32Z",
        "createdAt": "2020-05-05T13:58:26Z",
        "comments": [
            {
                "author": "pedromassango",
                "bodyText": "@TahaTesser could you please help me figure it out why the tests are not passing? I didn't touch any file related to these tests",
                "createdAt": "2020-05-05T15:06:26Z"
            },
            {
                "author": "SpajicM",
                "bodyText": "Duplicate of #56132?",
                "createdAt": "2020-05-05T22:28:31Z"
            },
            {
                "author": "Ahmadre",
                "bodyText": "Duplicate of #56132?\n\nwait a minute \ud83e\udd14 could it be, that this PR is more up-to-date then the one you're referencing to?\nI mean this:\nhttps://github.com/pedromassango/flutter/blob/11008ee7c8b331c6ed471b2929ab8c46a0d6eb71/packages/flutter/lib/src/widgets/form.dart#L438-L439",
                "createdAt": "2020-05-05T23:28:35Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption to this rule, contact Hixie on the #hackers channel in Chat.\nReviewers: Read the Tree Hygiene page and make sure this patch meets those guidelines before LGTMing.",
                "createdAt": "2020-05-08T05:37:20Z"
            },
            {
                "author": "chunhtai",
                "bodyText": "This also needs test",
                "createdAt": "2020-05-08T17:11:01Z"
            },
            {
                "author": "goderbauer",
                "bodyText": "/cc @justinmc",
                "createdAt": "2020-05-08T18:39:40Z"
            },
            {
                "author": "pedromassango",
                "bodyText": "I'm trying to fix the tests but I come with one use-case: if the user provide a default value (lets say non-empty string) should we validate that:\n\non the first time\nonce the TextField gains focus and\n\nI think the second approach is better to fix this issue, but then we get another issue: what if the user don't even touch the TextField?!\nThis is causing this test to fail: \n  \n    \n      flutter/packages/flutter/test/material/dropdown_form_field_test.dart\n    \n    \n         Line 151\n      in\n      f865ac7\n    \n  \n  \n    \n\n        \n          \n           testWidgets('DropdownButtonFormField with autovalidation test', (WidgetTester tester) async { \n        \n    \n  \n\n\nCc @chunhtai",
                "createdAt": "2020-05-08T19:11:59Z"
            },
            {
                "author": "pedromassango",
                "bodyText": "@chunhtai Could you please inform the current state of this PR to be merged? I really need this. Sorry to bother you.",
                "createdAt": "2020-05-14T20:23:07Z"
            },
            {
                "author": "chunhtai",
                "bodyText": "I leave a similar comment on other pr,\ncan this also apply to the form.autovalidate which is doing the same thing except it only validate after the second build.",
                "createdAt": "2020-05-15T22:15:51Z"
            },
            {
                "author": "pedromassango",
                "bodyText": "I leave a similar comment on other pr,\ncan this also apply to the form.autovalidate which is doing the same thing except it only validate after the second build.\n\nI will try to reproduce the issue with the Form widget and see what I can do about it",
                "createdAt": "2020-05-15T22:27:33Z"
            },
            {
                "author": "pedromassango",
                "bodyText": "I leave a similar comment on other pr,\ncan this also apply to the form.autovalidate which is doing the same thing except it only validate after the second build.\n\n@chunhtai I wa able to reproduce this. Do you think that I must open a new issue and PR or just fix it on this one?",
                "createdAt": "2020-05-15T23:23:20Z"
            },
            {
                "author": "chunhtai",
                "bodyText": "I will suggest implement it in the same pr so that it will be easier to revert in case something goes wrong and does not end up with the form.autovalidate behaves differently from the formfield.autovalidate",
                "createdAt": "2020-05-15T23:31:38Z"
            },
            {
                "author": "pedromassango",
                "bodyText": "@chunhtai please take a look at the latest changes",
                "createdAt": "2020-05-16T09:52:29Z"
            },
            {
                "author": "pedromassango",
                "bodyText": "Since it is getting more complex, have you thought about write a design doc that summarize the new behavior so that people can quickly understand what is the expectation after this change?\n\nNo, but now that you say that, I think it need to be done.\nSorry I never did this before, can you help me on how to do that?",
                "createdAt": "2020-05-18T17:57:47Z"
            },
            {
                "author": "chunhtai",
                "bodyText": "@pedromassango\nYou can follow the steps in https://github.com/flutter/flutter/wiki/Chat#design-documents\nand then once you are done, you can share it in our #hackers discord channel so people can take a look. Feel free to ping me if you have any question.",
                "createdAt": "2020-05-18T18:13:08Z"
            },
            {
                "author": "lzhuor",
                "bodyText": "Thanks @pedromassango for making this change! This is definitely something many people would love to have. It's in high priority in my view.",
                "createdAt": "2020-05-18T18:13:38Z"
            },
            {
                "author": "pedromassango",
                "bodyText": "I've created a Breaking Change proposal file here.",
                "createdAt": "2020-05-18T22:25:21Z"
            },
            {
                "author": "SpajicM",
                "bodyText": "Hi, thanks working on this! I'd like a little clarification - for example, if there's a form, with 5 TextFormField children, does it mean the all 5 fields will \"go red\" as soon as first one is changed?",
                "createdAt": "2020-05-20T20:18:07Z"
            },
            {
                "author": "ashank96",
                "bodyText": "Hi, thanks working on this! I'd like a little clarification - for example, if there's a form, with 5 TextFormField children, does it mean the all 5 fields will \"go red\" as soon as first one is changed?\n\n@SpajicM No, only that formfield goes red whose state will change.",
                "createdAt": "2020-05-20T20:22:30Z"
            },
            {
                "author": "chunhtai",
                "bodyText": "Hi, thanks working on this! I'd like a little clarification - for example, if there's a form, with 5 TextFormField children, does it mean the all 5 fields will \"go red\" as soon as first one is changed?\n\n@pedromassango can you clarify the if this is the case? also it will be good to mention the behavior here in the design document.",
                "createdAt": "2020-05-20T20:32:46Z"
            },
            {
                "author": "pedromassango",
                "bodyText": "Hi, thanks working on this! I'd like a little clarification - for example, if there's a form, with 5 TextFormField children, does it mean the all 5 fields will \"go red\" as soon as first one is changed?\n\nRight now it will validate all the form fields. Maybe I should just validate the one that have its content updated!",
                "createdAt": "2020-05-20T20:59:01Z"
            },
            {
                "author": "pedromassango",
                "bodyText": "Hi, thanks working on this! I'd like a little clarification - for example, if there's a form, with 5 TextFormField children, does it mean the all 5 fields will \"go red\" as soon as first one is changed?\n\n@pedromassango can you clarify the if this is the case? also it will be good to mention the behavior here in the design document.\n\nSure",
                "createdAt": "2020-05-20T21:01:07Z"
            },
            {
                "author": "googlebot",
                "bodyText": "We found a Contributor License Agreement for you (the sender of this pull request), but were unable to find agreements for all the commit author(s) or Co-authors.  If you authored these, maybe you used a different email address in the git commits than was used to sign the CLA (login here to double check)?  If these were authored by someone else, then they will need to sign a CLA as well, and confirm that they're okay with these being contributed to Google.\nIn order to pass this check, please resolve this problem and then comment @googlebot I fixed it.. If the bot doesn't comment, it means it doesn't think anything has changed.\n\u2139\ufe0f Googlers: Go here for more info.",
                "createdAt": "2020-06-08T17:28:09Z"
            },
            {
                "author": "googlebot",
                "bodyText": "We found a Contributor License Agreement for you (the sender of this pull request), but were unable to find agreements for all the commit author(s) or Co-authors.  If you authored these, maybe you used a different email address in the git commits than was used to sign the CLA (login here to double check)?  If these were authored by someone else, then they will need to sign a CLA as well, and confirm that they're okay with these being contributed to Google.\nIn order to pass this check, please resolve this problem and then comment @googlebot I fixed it.. If the bot doesn't comment, it means it doesn't think anything has changed.\n\u2139\ufe0f Googlers: Go here for more info.",
                "createdAt": "2020-06-08T17:28:29Z"
            },
            {
                "author": "googlebot",
                "bodyText": "We found a Contributor License Agreement for you (the sender of this pull request), but were unable to find agreements for all the commit author(s) or Co-authors.  If you authored these, maybe you used a different email address in the git commits than was used to sign the CLA (login here to double check)?  If these were authored by someone else, then they will need to sign a CLA as well, and confirm that they're okay with these being contributed to Google.\nIn order to pass this check, please resolve this problem and then comment @googlebot I fixed it.. If the bot doesn't comment, it means it doesn't think anything has changed.\n\u2139\ufe0f Googlers: Go here for more info.",
                "createdAt": "2020-06-08T17:28:56Z"
            },
            {
                "author": "chunhtai",
                "bodyText": "@pedromassango the CLA seems unhappy, can you sign it again?",
                "createdAt": "2020-06-11T20:41:27Z"
            },
            {
                "author": "pedromassango",
                "bodyText": "@pedromassango the CLA seems unhappy, can you sign it again?\n\nWorking on this. I signed one of the PR with another email account. Now my boss need to recover it so I can sign the CLA.",
                "createdAt": "2020-06-11T20:49:18Z"
            },
            {
                "author": "pedromassango",
                "bodyText": "@googlebot  I fixed it.",
                "createdAt": "2020-06-15T18:30:42Z"
            },
            {
                "author": "pedromassango",
                "bodyText": "@googlebot I fixed it.",
                "createdAt": "2020-06-15T18:37:35Z"
            },
            {
                "author": "pedromassango",
                "bodyText": "@googlebot I fixed it.",
                "createdAt": "2020-06-15T18:39:49Z"
            },
            {
                "author": "pedromassango",
                "bodyText": "@googlebot I fixed it.",
                "createdAt": "2020-06-15T18:52:45Z"
            },
            {
                "author": "pedromassango",
                "bodyText": "Due to CLA problems I've moved this work at #59766.",
                "createdAt": "2020-06-18T14:54:50Z"
            }
        ],
        "commentCount": 32
    },
    {
        "number": 39856,
        "title": "Change isFlaky to isNew",
        "author": "Yuqian Li",
        "state": "CLOSED",
        "closedAt": "2019-10-02T22:47:56Z",
        "createdAt": "2019-09-04T23:53:17Z",
        "comments": [
            {
                "author": "liyuqian",
                "bodyText": "@flar : do you think that this would reduce the confusions?",
                "createdAt": "2019-09-05T00:07:13Z"
            },
            {
                "author": "dnfield",
                "bodyText": "An \"old\" test can become flaky. A new test might take a very long time to deflake",
                "createdAt": "2019-09-05T00:10:28Z"
            },
            {
                "author": "liyuqian",
                "bodyText": "@dnfield : that's exactly the confusion that I try to resolve. When an old test becomes flaky, setting this flag to true is not the right thing to do. Instead we should fix it right away. Rerun a flaky test until it passes seems to be better than ignoring it as flaky until someone really breaks it without anyone noticing it.\nFor example, our framework Cirrus tests are famously known to be flaky. But marking it as flaky and ignoring its result doesn't seem to be the correct thing to do. I'd rather rerun the Cirrus tests, or just fix its flakiness.",
                "createdAt": "2019-09-05T00:24:25Z"
            },
            {
                "author": "dnfield",
                "bodyText": "My understanding is that some tests should not be marked flaky even if they are.  But some tests may be worth marking flaky while we figure out how to fix them.  The age of the test isn't necessarily correlated with that.\nWe should probably make some citrus tests flaky, but right now we would have to mark all of citrus flaky to do that, which doesn't seem wise.",
                "createdAt": "2019-09-05T00:44:00Z"
            },
            {
                "author": "flar",
                "bodyText": "My understanding is that some tests should not be marked flaky even if they are. But some tests may be worth marking flaky while we figure out how to fix them. The age of the test isn't necessarily correlated with that.\n\nThis is my take on the matter. If a test is failing because we broke the product then it should be blocking. If a test is failing because it was not set up to be reliable then the problem is on the test, not on the new fixes that are trying to land while it is poorly written. Finally, if a test is flaky because the hardware or infra environment is not set up well for it - a similar evaluation to the test being wrong, but a different person responsible to fix it.\nAlso, if a test is flaky then the onus should be on the person who wants the test evaluated to fix it. Leaving it as blocking lets them be lax about getting around to diagnosing and fixing the test. Marking it as flaky means it is on them to fix it and get it back into a state where it is reasonable to expect other people to halt their work if it fails.\nI don't think a poorly written test, for example and I count a test that doesn't work well in the test environment as some form of \"poorly written\", should block work from developers who are trying to move the product forward. That's all on the test writer or owner to deal with.",
                "createdAt": "2019-09-05T22:35:35Z"
            },
            {
                "author": "Hixie",
                "bodyText": "Once a test is working, then it shouldn't become flaky again. If it does, we should fix it. It's not the test writer's job, it's all of our job. If it's so poorly written that it's not giving us a useful signal then the solution is to delete the test, not mark it flaky.\nHaving disabled tests that still run has numerous problems:\n\nIt uses very expensive resources to run uselessly. We don't have enough capacity as it is. We can't waste it on bad tests.\nIt makes the dashboard look red when it's green. This is a morale issue as well as just generally confusing.\nIt reduces confidence in tests in general.\nWorst of all, it creates a culture of ignoring tests that fail because \"just mark it flaky\".\n\nWe have had numerous tests recently fail legitimately that we just ignore because the failure is not reported 100% of the time, it's 90% failing, or 50% failing. These are not passing tests that erroneously fail, they are failing tests that erroneously pass. THEY SHOULD CLOSE THE TREE UNTIL WE FIX THEM. They should not be causing us to mark them flaky.",
                "createdAt": "2019-09-05T23:12:20Z"
            },
            {
                "author": "liyuqian",
                "bodyText": "@tvolkert : is flutter/cocoon#406 enough on the cocoon side? We don't have to change all \"flaky\" in the cocoon. Just changing the yaml parsing seems to be enough.",
                "createdAt": "2019-09-09T19:26:39Z"
            },
            {
                "author": "tvolkert",
                "bodyText": "Following on @Hixie's comment in #39856 (comment), tbh, I'd rather we get rid of the flaky marker altogether and just fix the tests, or evict them if they're not ready yet.",
                "createdAt": "2019-09-09T19:40:55Z"
            },
            {
                "author": "liyuqian",
                "bodyText": "@tvolkert : right, that's our strategy. But there still needs to be a flag for new tests though.",
                "createdAt": "2019-09-09T20:06:28Z"
            },
            {
                "author": "tvolkert",
                "bodyText": "there still needs to be a flag for new tests though\n\nWhy?",
                "createdAt": "2019-09-09T20:14:13Z"
            },
            {
                "author": "flar",
                "bodyText": "there still needs to be a flag for new tests though\n\nWhy?\n\nUntil a test runs in the devicelab for a few runs and establishes a profile we don't have any data to establish a baseline for it.\nBut, those tests should have (I think) 0's for baseline so perhaps we should consider them \"new\" if their baseline and goal are both 0. Then baselining it would establish its \"not newness\" without a flag?",
                "createdAt": "2019-09-09T21:28:06Z"
            },
            {
                "author": "liyuqian",
                "bodyText": "@tvolkert : when we write a new test, we don't want the tree to be red because of it. We only want the tree to be red when a test is proven to be working properly. One might argue to delete the new test immediately if it doesn't pass, and reland after a fix. But that seems to be too costly as a new test would usually require N tries to make it work. Requiring deletion/reverting after each failure means 2N-1 commits (and their pre-submit tests, and post-submit tests). I guess that's due to the fact that we don't have good presubmit tests to cover a device lab test. Of course, removing the flag and just let each new test immediately revert after a failure is an option. @Hixie : how do you think about the alternative?\n@flar : the new flag here is not used for baselines. The tree won't be red due to the lack of baselines. Also, not all device lab tests generate a metric that needs a baseline.",
                "createdAt": "2019-09-09T21:46:56Z"
            },
            {
                "author": "flar",
                "bodyText": "@tvolkert : when we write a new test, we don't want the tree to be red because of it. We only want the tree to be red when a test is proven to be working properly.\n\nWhy isn't the test vetted before it is pushed?",
                "createdAt": "2019-09-10T00:11:14Z"
            },
            {
                "author": "liyuqian",
                "bodyText": "Because we currently don't have a way to exercise all the scripts of the device lab locally without merging the change. It would be nice if one can change that so the test can be vetted beforehand. (Note that we do have a way to run a device lab test locally, but that doesn't involve all the scripts of reading and scheduling that test to the correct host/device via manifest.)",
                "createdAt": "2019-09-10T00:25:25Z"
            },
            {
                "author": "tvolkert",
                "bodyText": "Because we currently don't have a way to exercise all the scripts\nof the device lab locally without merging the change.\n\nWe don't have a way to locally say \"run all the devicelab tests against my change\", but we do have a way to run an individual test, which presumably would cover the case of adding a new test -- https://github.com/flutter/flutter/tree/master/dev/devicelab#running-tests-locally",
                "createdAt": "2019-09-10T00:45:30Z"
            },
            {
                "author": "flar",
                "bodyText": "So @tvolkert is pointing out a mechanism to vet a test ahead of time, but even if we didn't have that mechanism I still don't see why it would be so common for a new test to have to go through \"N tries to make it work\". Tests that don't necessarily work on all platforms should be relatively rare and it shouldn't take multiple attempts to deal with them on the off chance that one comes up.",
                "createdAt": "2019-09-10T01:13:11Z"
            },
            {
                "author": "liyuqian",
                "bodyText": "As I mentioned before:\n\n(Note that we do have a way to run a device lab test locally, but that doesn't involve all the scripts of reading and scheduling that test to the correct host/device via manifest.)\n\nAnd I've mentioned\n\nOf course, removing the flag and just let each new test immediately revert after a failure is an option. @Hixie : how do you think about the alternative?\n\nAt least, I think we all agree that changing isFlaky to isNew is an improvement. The only question is whether it's worth to further remove the flag altogether? While we're discussing the question, maybe we can first change isFlaky to isNew. And if the answer to that question is yes, we can easily just forbid that flag in our manifest parser.",
                "createdAt": "2019-09-10T17:57:48Z"
            },
            {
                "author": "tvolkert",
                "bodyText": "I don't think changing isFlaky to isNew is worth the churn.  It's still not clear to me what problem it solves.",
                "createdAt": "2019-09-10T18:28:31Z"
            },
            {
                "author": "liyuqian",
                "bodyText": "@tvolkert : how do you think about the alternative option to remove the flag altogether, and also delete the currently \"flaky\" tests run_without_leak_linux, run_without_leak_mac, and macos_chrome_dev_mode? (CC the creator of those tests: @dnfield @jonahwilliams )",
                "createdAt": "2019-09-10T22:16:12Z"
            },
            {
                "author": "tvolkert",
                "bodyText": "Those tests were already removed in #40155.  I'm supportive of removing isFlaky altogether.",
                "createdAt": "2019-09-10T22:19:59Z"
            },
            {
                "author": "dnfield",
                "bodyText": "I'm fine with removing the run_without_leaks tests.  I think we've thoroughly demonstrated that we leak processes at this point and AFAIK no one is actively working on it.",
                "createdAt": "2019-09-10T22:23:39Z"
            },
            {
                "author": "Hixie",
                "bodyText": "How do you add a new test without turning the tree red if we don't have this flag?",
                "createdAt": "2019-09-10T23:40:40Z"
            },
            {
                "author": "liyuqian",
                "bodyText": "I think @tvolkert and @flar 's suggestion is to immediately delete/revert the new test if the tree turns red because of it.",
                "createdAt": "2019-09-10T23:48:47Z"
            },
            {
                "author": "tvolkert",
                "bodyText": "I think @tvolkert and @flar 's suggestion is to immediately delete/revert the new test if the tree turns red because of it.\n\nCombined with running it locally before checking in.",
                "createdAt": "2019-09-11T00:34:33Z"
            },
            {
                "author": "Hixie",
                "bodyText": "Historically neither of those have been sufficient to avoid pain.",
                "createdAt": "2019-09-11T00:42:50Z"
            },
            {
                "author": "tvolkert",
                "bodyText": "Are there instances of tests that we expected to pass but failed upon initial check-in, that we then fixed and removed the flaky marker from?  I've seen tests that pass upon first check-in, and tests that fail upon first check-in that continue to fail after checkin.",
                "createdAt": "2019-09-11T00:57:15Z"
            },
            {
                "author": "Hixie",
                "bodyText": "Almost every test I've been involved with (either writing or working with someone who was writing it) failed on initial checkin but got fixed a few commits later, usually to fix things that a local run could not catch, such as the PATH being different, or the OS version being different, or some binary not being available on the devicelab, or the version of Xcode being different, or Xcode configuration being wrong or different, or any number of other similar issues.",
                "createdAt": "2019-09-12T03:01:05Z"
            },
            {
                "author": "tvolkert",
                "bodyText": "Then what about having a server-side isNew flag that can be flipped only 1-way (to not new)?  All new tests would be set to isNew automatically by Cocoon, and the UI would support the 1-way flip to not new...",
                "createdAt": "2019-09-12T03:25:03Z"
            },
            {
                "author": "Hixie",
                "bodyText": "We could do that. Seems a bit over-engineered though.",
                "createdAt": "2019-09-12T06:12:13Z"
            },
            {
                "author": "tvolkert",
                "bodyText": "Let's back up - what problem are we trying to solve?\nIs it to remove the temptation of developers to take a failing test and just mark it as flaky?  If so (that wasn't clear to me), then this conceptually seems fine, though it'll require a rollout that doesn't break the dashboard.  flutter/cocoon#406 would cause the GetStatus endpoint to start using the \"New\" key instead of \"Flaky\", which would break the AngularDart frontend.  The rollout should allow for an overlap where forwards-compatible changes can be made to Cocoon, then this change landed, then cleanup can be made on the Cocoon side (so we don't leave technical debt behind of referring to these as flaky in one place and new in another).  Hence my comments in #39856 (review) and #39856 (comment).\nMy thought is that there's likely to be a lot of changes made to Cocoon once we're fully migrated to Dart, since there's a lot of low hanging fruit there - and that it's better to wait until we're doing that.",
                "createdAt": "2019-09-12T15:03:28Z"
            },
            {
                "author": "liyuqian",
                "bodyText": "Close this for now as it seems that our default action is to\n\nnot use \"flaky\" field,\nrevert the new test if it's not passing.\n\nIt is a little annoying (see, e.g., the 5 commits revert/reland chain #41578), but acceptable.",
                "createdAt": "2019-10-02T22:47:56Z"
            },
            {
                "author": "Hixie",
                "bodyText": "I do not believe that should be our behaviour and it doesn't seem to be what is described in our docs last I checked.",
                "createdAt": "2019-10-04T03:04:14Z"
            },
            {
                "author": "tvolkert",
                "bodyText": "We can absolutely still use the flaky field for newly added tests.\nSee my last comment above (#39856 (comment)) -- as long as this is rolled out in a non-breaking way, I'm ok with making the change.",
                "createdAt": "2019-10-04T04:44:01Z"
            }
        ],
        "commentCount": 33
    },
    {
        "number": 31028,
        "title": "Adds support for generating projects that use AndroidX support libraries",
        "author": "Josh Burton",
        "state": "MERGED",
        "closedAt": "2019-06-01T01:33:03Z",
        "createdAt": "2019-04-14T05:01:19Z",
        "comments": [
            {
                "author": "jiechic",
                "bodyText": "Why haven't merged yet?\nIs it necessary use support library by default and Optional androidx support before code merge?",
                "createdAt": "2019-05-06T00:29:31Z"
            },
            {
                "author": "josh-burton",
                "bodyText": "@dnfield I've seen you comment about AndroidX support a few other places. Is it possible this PR may be merged or is there other internal work happening around it?",
                "createdAt": "2019-05-06T00:46:04Z"
            },
            {
                "author": "jiechic",
                "bodyText": "Why should this PR not be merged?",
                "createdAt": "2019-05-22T09:14:05Z"
            },
            {
                "author": "josh-burton",
                "bodyText": "@matthew-carroll would you be the right person to review this?",
                "createdAt": "2019-05-22T09:40:11Z"
            },
            {
                "author": "matthew-carroll",
                "bodyText": "@xster you're probably in the best position to make a call on this particular solution.",
                "createdAt": "2019-05-23T23:47:51Z"
            },
            {
                "author": "xster",
                "bodyText": "Thanks for your contribution @athornz\n@dnfield @mklim, could you guys take a pass at this?\nI'm out for a week. I'll check this wrt add-to-app when I'm back.",
                "createdAt": "2019-05-26T00:45:50Z"
            },
            {
                "author": "dnfield",
                "bodyText": "Thanks for the contribution!\nWe've had a number of issues with jetifier not working with our current gradle setup.  I'm a bit curious about how this impacts that - are you able to consume a plugin that uses the support libraries with this project structure successfully?\nMy main concern here is that it's not clear what benefit this really offers to someone developing a Flutter app at this point - unless it's helping with that issue.",
                "createdAt": "2019-05-30T05:47:09Z"
            },
            {
                "author": "josh-burton",
                "bodyText": "Hey Dan,\nWith this setup, a project will work with both AndroidX and Support dependencies.\nWithout this, I believe Flutter projects that use plugins with AndroidX dependencies need to be upgraded to AndroidX.\nI'm using this branch in a Flutter project using Jetifier and all is working well.\nSo the benefit is that new Flutter projects using AndroidX should just work with any plugin. Do you have any more information about the issues with Jetifier that you've had? I'd like to test this branch to make sure it solves those issues.",
                "createdAt": "2019-05-30T06:05:33Z"
            },
            {
                "author": "jiechic",
                "bodyText": "@athornz\nI think it should use support library as the default then androidX library is optional for old support library flutter module project update",
                "createdAt": "2019-05-30T06:25:53Z"
            },
            {
                "author": "josh-burton",
                "bodyText": "Since support library is deprecated I think AndroidX should be the default. If a Flutter project with AndroidX works with Jetifier then there is no reason to use the support libraries.\nWe should be making use of Jetifier as Google implemented as a good way to update to AndroidX and be compatible with support libraries.",
                "createdAt": "2019-05-30T06:29:26Z"
            },
            {
                "author": "mklim",
                "bodyText": "Thanks for the contribution! @athornz I agree, AndroidX with Jetifier should ideally be our default to get rid of any support issues. The problem we've run into so far is that Jetifier doesn't work with how we build Flutter apps and include plugins: #32714. You can see this by making a new template with this PR or by migrating an app manually, then depending on a an older plugin (like firebase_core: 0.1.0), then running flutter build apk.\nEven with Jetifier being broken for us @dnfield I think this is probably an improvement. At least all of flutter/plugins are migrated to AndroidX at this point, so with that it makes sense to me to have the default template be migrated too. Right now people still need to migrate manually.",
                "createdAt": "2019-05-30T16:04:33Z"
            },
            {
                "author": "josh-burton",
                "bodyText": "Thanks @dnfield and @tvolkert for the review - I think I've addressed all the comments now but let me know if there is anything else.",
                "createdAt": "2019-05-30T20:47:37Z"
            },
            {
                "author": "tvolkert",
                "bodyText": "LGTM.  Will land on green.\nThanks again!",
                "createdAt": "2019-05-30T22:23:48Z"
            },
            {
                "author": "josh-burton",
                "bodyText": "No problem, thank you!",
                "createdAt": "2019-05-30T22:30:17Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Looks like you're synced to a bad commit of master, you'll need to fetch and update",
                "createdAt": "2019-05-30T22:59:13Z"
            },
            {
                "author": "googlebot",
                "bodyText": "So there's good news and bad news.\n\ud83d\udc4d The good news is that everyone that needs to sign a CLA (the pull request submitter and all commit authors) have done so.  Everything is all good there.\n\ud83d\ude15 The bad news is that it appears that one or more commits were authored or co-authored by someone other than the pull request submitter.  We need to confirm that all authors are ok with their commits being contributed to this project.  Please have them confirm that here in the pull request.\nNote to project maintainer: This is a terminal state, meaning the cla/google commit status will not change from this state. It's up to you to confirm consent of all the commit author(s), set the cla label to yes (if enabled on your project), and then merge this pull request when appropriate.\n\u2139\ufe0f Googlers: Go here for more info.",
                "createdAt": "2019-05-30T23:05:59Z"
            },
            {
                "author": "josh-burton",
                "bodyText": "@jonahwilliams I've rebased on master now.",
                "createdAt": "2019-05-30T23:07:11Z"
            },
            {
                "author": "googlebot",
                "bodyText": "CLAs look good, thanks!\n\u2139\ufe0f Googlers: Go here for more info.",
                "createdAt": "2019-05-30T23:18:51Z"
            },
            {
                "author": "mcxinyu",
                "bodyText": "Flutter.jar is not compatible with androidX",
                "createdAt": "2019-07-09T03:01:43Z"
            },
            {
                "author": "truongsinh",
                "bodyText": "@mcxinyu\n\nFlutter.jar is not compatible with androidX\n\nCurrently I have a the app crashed:\n    java.lang.NoClassDefFoundError: Failed resolution of: Landroidx/lifecycle/DefaultLifecycleObserver;\n        at io.flutter.embedding.engine.FlutterEngine.<init>(FlutterEngine.java:149)\n\nis it related to flutter.jar? cc @athornz @dnfield @tvolkert",
                "createdAt": "2019-07-31T15:22:15Z"
            },
            {
                "author": "blasten",
                "bodyText": "That is because we are missing AndroidX transitive dependencies from the engine. We have a fix in progress. cc @matthew-carroll",
                "createdAt": "2019-07-31T15:26:30Z"
            },
            {
                "author": "blasten",
                "bodyText": "In the meanwhile, you can the dependencies manually to android/build.gradle as indicated on https://developer.android.com/jetpack/androidx/releases/lifecycle#declaring_dependencies",
                "createdAt": "2019-07-31T15:34:34Z"
            },
            {
                "author": "truongsinh",
                "bodyText": "The crash still happens even after I added the following snippet to app/build.gradle\n    // known issue https://github.com/flutter/flutter/pull/31028#issuecomment-516902006\n    def lifecycle_version = \"2.0.0\"\n    // ViewModel and LiveData\n    implementation \"androidx.lifecycle:lifecycle-extensions:$lifecycle_version\"\n    // alternatively - just ViewModel\n    implementation \"androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version\"\n    // alternatively - just LiveData\n    implementation \"androidx.lifecycle:lifecycle-livedata:$lifecycle_version\"\n    implementation \"androidx.lifecycle:lifecycle-runtime:$lifecycle_version\"\n    kapt \"androidx.lifecycle:lifecycle-compiler:$lifecycle_version\"\n    // optional - ReactiveStreams support for LiveData\n    implementation \"androidx.lifecycle:lifecycle-reactivestreams-ktx:$lifecycle_version\"\n    // optional - Test helpers for LiveData\n    testImplementation \"androidx.arch.core:core-testing:$lifecycle_version\"",
                "createdAt": "2019-08-01T01:37:52Z"
            },
            {
                "author": "blasten",
                "bodyText": "@truongsinh would you mind creating an issue with a repro test case? Thanks!",
                "createdAt": "2019-08-01T23:19:34Z"
            },
            {
                "author": "truongsinh",
                "bodyText": "@truongsinh would you mind creating an issue with a repro test case? Thanks!\n\nI might take a while, but sure.",
                "createdAt": "2019-08-02T00:25:52Z"
            },
            {
                "author": "truongsinh",
                "bodyText": "Actually, trying to reproduce the error on a sample, I encoutered a different problem (here's the code https://github.com/truongsinh/android_flutter_host/tree/built-in-androidx)\nCannot open a library at 'FileMapping(from=/Users/truongsinh/Dev/flutter/android_flutter_host/flutter_embedding/.android/Flutter/build/intermediates/flutter/debug/libs.jar, to=/Users/truongsinh/.gradle/caches/transforms-1/files-1.1/libs.jar/9a5b6ea5d0ab9a291353d9eb6a6ec26b/jetified-libs.jar)'\n\nDoctor summary (to see all details, run flutter doctor -v):\n[\u2713] Flutter (Channel unknown, v1.8.3, on Mac OS X 10.14.5 18F132, locale en-VN)\n \n[\u2713] Android toolchain - develop for Android devices (Android SDK version 28.0.3)\n[\u2713] Xcode - develop for iOS and macOS (Xcode 10.3)\n[\u2713] Android Studio (version 3.4)\n[\u2713] VS Code (version 1.36.1)\n[\u2713] Connected device (1 available)",
                "createdAt": "2019-08-02T01:26:04Z"
            },
            {
                "author": "truongsinh",
                "bodyText": "@athornz @blasten any update?",
                "createdAt": "2019-08-07T08:45:16Z"
            },
            {
                "author": "truongsinh",
                "bodyText": "update from my side,\nCannot open a library at 'FileMapping(from=/Users/truongsinh/Dev/flutter/android_flutter_host/flutter_embedding/.android/Flutter/build/intermediates/flutter/debug/libs.jar, to=/Users/truongsinh/.gradle/caches/transforms-1/files-1.1/libs.jar/9a5b6ea5d0ab9a291353d9eb6a6ec26b/jetified-libs.jar)'\n\nis solved by work around, I have to cd flutter_embedding/.android && ./gradlew assembleDebug to generate those jars file, and then I can reproduce\nE/AndroidRuntime: FATAL EXCEPTION: main\n    Process: pro.truongsinh.flutter.android_flutter_host.free, PID: 11100\n    java.lang.NoClassDefFoundError: Failed resolution of: Landroidx/lifecycle/DefaultLifecycleObserver;\n        at io.flutter.embedding.engine.FlutterEngine.<init>(FlutterEngine.java:149)\n        at pro.truongsinh.flutter.android_flutter_host.FlutterEmbeddingActivity$Companion.init(FlutterEmbeddingActivity.kt:168)\n        at pro.truongsinh.flutter.android_flutter_host.MainActivity.onCreate(MainActivity.kt:17)\n        at android.app.Activity.performCreate(Activity.java:7802)\n        at android.app.Activity.performCreate(Activity.java:7791)\n        at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1299)\n        at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:3243)\n        at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:3407)\n        at android.app.servertransaction.LaunchActivityItem.execute(LaunchActivityItem.java:83)\n        at android.app.servertransaction.TransactionExecutor.executeCallbacks(TransactionExecutor.java:135)\n        at android.app.servertransaction.TransactionExecutor.execute(TransactionExecutor.java:95)\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:2016)\n        at android.os.Handler.dispatchMessage(Handler.java:107)\n        at android.os.Looper.loop(Looper.java:214)\n        at android.app.ActivityThread.main(ActivityThread.java:7343)\n        at java.lang.reflect.Method.invoke(Native Method)\n        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:492)\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:933)\n     Caused by: java.lang.ClassNotFoundException: Didn't find class \"androidx.lifecycle.DefaultLifecycleObserver\" on path: DexPathList[[zip file \"/data/app/pro.truongsinh.flutter.android_flutter_host.free-R3e6unzzN8OPsBvhFb5V2w==/base.apk\"],nativeLibraryDirectories=[/data/app/pro.truongsinh.flutter.android_flutter_host.free-R3e6unzzN8OPsBvhFb5V2w==/lib/arm64, /data/app/pro.truongsinh.flutter.android_flutter_host.free-R3e6unzzN8OPsBvhFb5V2w==/base.apk!/lib/arm64-v8a, /system/lib64, /system/product/lib64]]\n        at dalvik.system.BaseDexClassLoader.findClass(BaseDexClassLoader.java:196)\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:379)\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:312)\n        at io.flutter.embedding.engine.FlutterEngine.<init>(FlutterEngine.java:149)\u00a0\n        at pro.truongsinh.flutter.android_flutter_host.FlutterEmbeddingActivity$Companion.init(FlutterEmbeddingActivity.kt:168)\u00a0\n        at pro.truongsinh.flutter.android_flutter_host.MainActivity.onCreate(MainActivity.kt:17)\u00a0\n        at android.app.Activity.performCreate(Activity.java:7802)\u00a0\n        at android.app.Activity.performCreate(Activity.java:7791)\u00a0\n        at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1299)\u00a0\n        at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:3243)\u00a0\n        at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:3407)\u00a0\n        at android.app.servertransaction.LaunchActivityItem.execute(LaunchActivityItem.java:83)\u00a0\n        at android.app.servertransaction.TransactionExecutor.executeCallbacks(TransactionExecutor.java:135)\u00a0\n        at android.app.servertransaction.TransactionExecutor.execute(TransactionExecutor.java:95)\u00a0\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:2016)\u00a0\n        at android.os.Handler.dispatchMessage(Handler.java:107)\u00a0\n        at android.os.Looper.loop(Looper.java:214)\u00a0\n        at android.app.ActivityThread.main(ActivityThread.java:7343)\u00a0\n        at java.lang.reflect.Method.invoke(Native Method)\u00a0\n        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:492)\u00a0\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:933)\u00a0\nDisconnected from the target VM, address: 'localhost:8606', transport: 'socket'",
                "createdAt": "2019-08-07T09:20:23Z"
            },
            {
                "author": "truongsinh",
                "bodyText": "Figured out, with performance degradation:\n\nI have to use lifecycle_version = \"1.1.1\", not 2.0.0\n\n    def lifecycle_version = \"1.1.1\"\n    implementation \"android.arch.lifecycle:common-java8:$lifecycle_version\"\n\nEven with this, my example code still crashed (something like attempt to use destroyed engine), because I use shared cached Flutter enginer, and to fix this, have to override:\n\n    override fun retainFlutterEngineAfterHostDestruction(): Boolean {\n        return true\n    }\nOne problem though, it seems the performance of transitioning between Kotlin activity and Flutter activity is much worse than before. Previously, with cached engine, it was really smooth. Even though low performance happens on debug mode only (not profile nor release), it might still be a performance degradation from previous version (1.5.4-hotfix)",
                "createdAt": "2019-08-07T10:21:45Z"
            },
            {
                "author": "xster",
                "bodyText": "It's hard for us to make sure we follow up on comments on previously merged PRs. If there are still remaining issues or inconveniences with the flows, please file a new issue with repro steps.",
                "createdAt": "2019-08-14T19:53:27Z"
            },
            {
                "author": "blasten",
                "bodyText": "@truongsinh Btw, we will start shipping Maven artifacts. As a result, these artifacts will become the source of truth for the engine dependencies such as android.arch.lifecycle:common-java8. Once this happens, there won't be more NoClassDefFoundError.",
                "createdAt": "2019-08-19T05:18:16Z"
            },
            {
                "author": "truongsinh",
                "bodyText": "@truongsinh Btw, we will start shipping Maven artifacts. As a result, these artifacts will become the source of truth for the engine dependencies such as android.arch.lifecycle:common-java8. Once this happens, there won't be more NoClassDefFoundError.\n\nDo we have a github issue or PR to track this?",
                "createdAt": "2019-08-19T06:39:15Z"
            },
            {
                "author": "blasten",
                "bodyText": "There's #11439",
                "createdAt": "2019-08-19T17:17:56Z"
            }
        ],
        "commentCount": 33
    },
    {
        "number": 18347,
        "title": "Expose Text foreground from engine",
        "author": "Dan Field",
        "state": "MERGED",
        "closedAt": "2018-06-21T00:23:51Z",
        "createdAt": "2018-06-10T19:36:11Z",
        "comments": [
            {
                "author": "dnfield",
                "bodyText": "Believe this is hitting up against dart-lang/sdk#26980\nI want the const constructor to be able to assert that one of two objects is null.  Dart doesn't like that.",
                "createdAt": "2018-06-11T00:54:47Z"
            },
            {
                "author": "dnfield",
                "bodyText": "I think this approach makes sense, but still would like some feedback.  Here's the intention of this code is to assert early if a user tries to specify both color and foreground - but ultimately, ui.TextStyle will catch this.\nMore specifically:\n\ncopyWith and merge: check that color or foreground are null on arguments; if foreground is specified in either place, ignore color and use the specified foreground.\nlerp: if color is specified on both, no change; if it is specified on only one, then a new Paint willbe created using it and lerped as in background, else both Paints are lerped as with background.\napply: foreground will dominate - if it is specified, the color argument will have no effect.",
                "createdAt": "2018-06-12T01:20:42Z"
            },
            {
                "author": "googlebot",
                "bodyText": "So there's good news and bad news.\n\ud83d\udc4d The good news is that everyone that needs to sign a CLA (the pull request submitter and all commit authors) have done so.  Everything is all good there.\n\ud83d\ude15 The bad news is that it appears that one or more commits were authored or co-authored by someone other than the pull request submitter.  We need to confirm that all authors are ok with their commits being contributed to this project.  Please have them confirm that here in the pull request.\nNote to project maintainer: This is a terminal state, meaning the cla/google commit status will not change from this state. It's up to you to confirm consent of the commit author(s) and merge this pull request when appropriate.",
                "createdAt": "2018-06-12T02:30:11Z"
            },
            {
                "author": "googlebot",
                "bodyText": "CLAs look good, thanks!",
                "createdAt": "2018-06-12T02:33:12Z"
            },
            {
                "author": "Hixie",
                "bodyText": "This is great.\nCan you add a golden test? See https://github.com/flutter/flutter/wiki/Writing-a-golden-file-test-for-package%3Aflutter",
                "createdAt": "2018-06-12T04:11:00Z"
            },
            {
                "author": "dnfield",
                "bodyText": "What did you have in mind for golden test(s) for this?  A Text widget with some different foreground paint/colors applied?\nI did write some tests (and made a couple minor tweaks from those) for merge/lerp/apply.",
                "createdAt": "2018-06-12T05:24:26Z"
            },
            {
                "author": "dnfield",
                "bodyText": "Also, WIP bot doesn't seem to want to let go of the idea that this was once marked with WIP...",
                "createdAt": "2018-06-13T14:25:13Z"
            },
            {
                "author": "Hixie",
                "bodyText": "Yeah, like a gradient or something.\nIgnore the WIP bot if it's broken. (Just add a comment here when merging acknowledging that that is red but that it's ok for it to be red.)",
                "createdAt": "2018-06-14T19:53:54Z"
            },
            {
                "author": "dnfield",
                "bodyText": "So I've added a golden test but have a couple issues -\n\nI don't have access to a Linux box at the moment to generate the goldens (but they seem to be 'good enough' from a Mac OS build here..)\nText rendering on the host build of the engine doesn't seem to be quite right.  See for example https://github.com/flutter/goldens/blob/master/packages/flutter/test/widgets/text_golden.Centered.png which is supposed to be rendering \"Hello\" - is this really valuable?  I've actually disabled similar tests in the SVG library for this reason - it seems like it doesn't find fonts.",
                "createdAt": "2018-06-15T02:34:46Z"
            },
            {
                "author": "Hixie",
                "bodyText": "Yes, the tests use a font called the \"Ahem\" font which is only squares. This is intentional; it makes the testing much more reliable because you don't have to worry about it rendering slightly differently on different hardware or operating systems.\nFeel free to generate them from macOS and upload them, if they are different on Linux we'll find out and I can generate them for you.",
                "createdAt": "2018-06-15T02:57:07Z"
            },
            {
                "author": "dnfield",
                "bodyText": "I was wrong - it's not working from macOS.  Should I revert the goldens commit?",
                "createdAt": "2018-06-15T11:25:50Z"
            },
            {
                "author": "Hixie",
                "bodyText": "Ok mark the tests as skipped and I'll look into them after you land.\nThe mac failure is a timeout which is concerning. Not sure why it would time out. I'll have to increase the timeout.",
                "createdAt": "2018-06-18T07:31:12Z"
            },
            {
                "author": "dnfield",
                "bodyText": "Tried to redo the Linux tests for fun after adding the center widget - they still fail.  I've disabled them for now with some comments that they can be re-enabled when the goldens are properly generated.\nAdded the center widget (inside a RepaintBoundary, which is how it is on the other Text goldens).  This should be good to go.",
                "createdAt": "2018-06-18T13:44:59Z"
            },
            {
                "author": "dnfield",
                "bodyText": "This seems to be failing on an unrelated test now for the nav bar...",
                "createdAt": "2018-06-18T16:12:28Z"
            },
            {
                "author": "Hixie",
                "bodyText": "yeah the navbar thing is from #18469. It's been reverted, if you point to the latest thing on the goldens repo you should be good, modulo the issues of it not matching in the first place.",
                "createdAt": "2018-06-19T20:48:36Z"
            },
            {
                "author": "dnfield",
                "bodyText": "So now it looks like there's a time out https://travis-ci.org/flutter/flutter/jobs/394338937\nI think that's the one you were mentioning @Hixie ?",
                "createdAt": "2018-06-19T23:50:50Z"
            },
            {
                "author": "sir-boformer",
                "bodyText": "One thing I noticed is that drawing text with a linear gradient behaves different than the Android canvas api.\nIn Android, the gradient shader is positioned absolutely in the canvas (based on the rect that was passed when the shader was created).\nIn Flutter, the gradient is positioned relative to the drawn paragraph. It is kind of inconsistent because for all other drawing operations the shader is positioned absolutely.\nIn my experience the relative positioning is a lot less useful than the absolute positioning.\nHere is a quick visualization:",
                "createdAt": "2018-06-20T00:55:58Z"
            },
            {
                "author": "dnfield",
                "bodyText": "@sir-boformer  can you share the code for that test on the Flutter side?",
                "createdAt": "2018-06-20T01:55:42Z"
            },
            {
                "author": "sir-boformer",
                "bodyText": "Here is the source code: https://gist.github.com/sir-boformer/3983478215f41c94a7c903542389809f",
                "createdAt": "2018-06-20T13:43:57Z"
            },
            {
                "author": "dnfield",
                "bodyText": "Looking through the AOSP, I'm not entirely sure how they're doing it so much differently than the engine does it here.  But I think this would have to be at the engine level anyway - the code in this patch doesn't really have a sense for any point in the canvas.  Can you share the android code as well?",
                "createdAt": "2018-06-20T17:45:40Z"
            },
            {
                "author": "dnfield",
                "bodyText": "The timeout resolved itself by just rekicking the job...",
                "createdAt": "2018-06-20T18:36:53Z"
            },
            {
                "author": "sir-boformer",
                "bodyText": "Like you said, it's a problem in the engine, not with the code in this PR.\nMy concern is that once this feature is shipped, changing the behavior would be a breaking change.\nBtw, the HTML5 canvas API also behaves like the android canvas API.\nThe android demonstration can be found here: https://github.com/sir-boformer/android-canvas-gradients\n(this is the relevant file).\nScreenshot:",
                "createdAt": "2018-06-20T18:50:10Z"
            },
            {
                "author": "sir-boformer",
                "bodyText": "My first guess is that drawParagraph in Flutter uses a different underlying API than Android's drawText.\nThe drawText method in Android (and HTML5 Canvas) doesn't handle line breaks and text ellipsis.\nIf my assertion is right, I would propose the exposal of this simpler text painting API in the Flutter engine (probably this skia function). Maybe it would even increase the performance for single line text. But that would be unrelated to this PR.",
                "createdAt": "2018-06-20T19:40:44Z"
            },
            {
                "author": "dnfield",
                "bodyText": "Engine uses drawTextBlob rather than just drawText, and there's a significant amount of logic for handling multiple styles and line breaking around that.  Looking at the AOSP source, that's the only notable difference I'm seeing - I was trying to come up with a Skia fiddle to prove this out but Skia fiddle keeps dying on me when I try to use drawTextBlob for some reason.\n@Hixie - do we have a sense of whether this is intended functionality in drawTextBlob as compared to drawText - i.e. is this something that is a bug in Skia?  I know for sure if I test doing this kind of thing with drawText, it works as @sir-boformer describes.\nI think exposing drawText would have to be handled as a separate issue if it really is desirable - I agree that it might be nice for cases where you don't want to do line breaking and complicated layout/style run logic.  I'd similarly like to see something for drawTextOnPath.  I don't really think it'd be a breaking change though - it would have to have its own exposed points on the Canvas api (so not drawParagraph) to avoid breaking a bunch of other things.",
                "createdAt": "2018-06-20T20:27:34Z"
            },
            {
                "author": "Hixie",
                "bodyText": "The LinearGradient class is relative to the box you're painting into, specifically the Rect passed to createShader. Try comparing with the ui.Gradient.linear class in dart:ui, which is in absolute coordinates.",
                "createdAt": "2018-06-20T21:27:22Z"
            },
            {
                "author": "sir-boformer",
                "bodyText": "@Hixie It leads to the same result. This is the code I used to create the gradient paint:\nfinal colors = [\n  Color(0xffff0000),\n  Color(0xffffff00),\n  Color(0xff00ff00),\n  Color(0xff00ffff),\n  Color(0xff0000ff),\n  Color(0xffff00ff),\n  Color(0xffff0000),\n];\n\nfinal colorStops = [0 / 6, 1 / 6, 2 / 6, 3 / 6, 4 / 6, 5 / 6, 6 / 6];\n\nfinal gradient = new ui.Gradient.linear(\n  Offset(0.0, 0.0),\n  Offset(0.0, size.height),\n  colors,\n  colorStops,\n);\n\nfinal gradientPaint = new Paint()..shader = gradient;",
                "createdAt": "2018-06-20T21:39:31Z"
            },
            {
                "author": "Hixie",
                "bodyText": "well that's more surprising.",
                "createdAt": "2018-06-20T21:41:14Z"
            },
            {
                "author": "Hixie",
                "bodyText": "Please file a bug on that.",
                "createdAt": "2018-06-20T21:41:28Z"
            },
            {
                "author": "Hixie",
                "bodyText": "",
                "createdAt": "2018-06-20T21:43:32Z"
            },
            {
                "author": "sir-boformer",
                "bodyText": "@Hixie Where would I file the bug? Flutter? Skia?",
                "createdAt": "2018-06-20T23:39:09Z"
            },
            {
                "author": "dnfield",
                "bodyText": "This is causing Travis to fail, I believe because of this line:\nhttps://github.com/flutter/flutter/blob/master/packages/flutter/test/cupertino/segmented_control_test.dart#L928\nThat should be expectLater, no?",
                "createdAt": "2018-06-21T01:08:47Z"
            },
            {
                "author": "dnfield",
                "bodyText": "Rather, Travis failed on this merge because of the above mentioned line - that wasn't part of this PR",
                "createdAt": "2018-06-21T01:10:34Z"
            },
            {
                "author": "Hixie",
                "bodyText": "@sir-boformer Let's start with Flutter.",
                "createdAt": "2018-06-21T22:25:09Z"
            }
        ],
        "commentCount": 33
    },
    {
        "number": 5689,
        "title": "Update to Dart `1.20.0-dev.1.0`.",
        "author": "Phil Quitslund",
        "state": "MERGED",
        "closedAt": "2016-09-08T20:14:08Z",
        "createdAt": "2016-08-31T21:41:53Z",
        "comments": [
            {
                "author": "Hixie",
                "bodyText": "Most of those errors are errors in the analyzer, not the code. The fifth is the only one that I think might be legit, and even that one is a bit dubious IMHO.",
                "createdAt": "2016-08-31T22:26:01Z"
            },
            {
                "author": "Hixie",
                "bodyText": "@leafpetersen help! :-)",
                "createdAt": "2016-08-31T22:43:07Z"
            },
            {
                "author": "pq",
                "bodyText": "I was just going to tag Leaf.  You beat me to it! \ud83d\ude04",
                "createdAt": "2016-08-31T22:45:22Z"
            },
            {
                "author": "leafpetersen",
                "bodyText": "Taking a look.  What version are you updating from?",
                "createdAt": "2016-08-31T23:14:49Z"
            },
            {
                "author": "pq",
                "bodyText": "Thanks!\n1.19.0-dev.5.0",
                "createdAt": "2016-08-31T23:16:34Z"
            },
            {
                "author": "leafpetersen",
                "bodyText": "Okay, I think all of these are places where strong mode errors have been integrated into the core analyzer.  We used to just issue generic STRONG_MODE_STATIC_TYPE_ERROR messages for a number of issues.  We've now integrated them into the core analyzer, so you now get the actual precise error.  So for example, for the first one, you now get a  MAP_VALUE_TYPE_NOT_ASSIGNABLE.\nUnfortunately, you guys have been filtering based on that general STRONG_MODE_STATIC_TYPE_ERROR.\nAll of these except the 5th and the last error fall under the general category of issues that we identified in the Flutter Strong Mode doc as something that we'd like to have a way to support, but we don't converged on a language level solution yet.\nFor the callback cases, you can avoid the error by making the cast local:\n     gestures: <Type, GestureRecognizerFactory>{\n        ImmediateMultiDragGestureRecognizer: (GestureRecognizer _recognizer) {\n         ImmediateMultiDragGestureRecognizer recognizer = _recognizer; \n          return (recognizer ??= new ImmediateMultiDragGestureRecognizer())\n            ..onStart = _handleOnStart;\n        }\n      },\nThis is essentially the code that we would most likely end up having the compiler generate for you if we supported this pattern.",
                "createdAt": "2016-09-01T00:12:21Z"
            },
            {
                "author": "abarth",
                "bodyText": "@leafpetersen How do you suggest we move forward here?",
                "createdAt": "2016-09-01T00:25:52Z"
            },
            {
                "author": "leafpetersen",
                "bodyText": "I don't know what options are available to you in terms of just suppressing the errors - @pq will know better there.\nIn terms of fixing the errors:\nThe fifth and last errors I don't anticipate ever being strong mode compatible.  You can put a cast in there for now, but at least the fifth one will eventually start failing when the language moves to 2.0.  Using a Map<dynamic, dynamic> where a Map<String, List<String>> is expected breaks all of the assumptions that strong mode is trying to enforce to make AOT better.\nThe second and third errors I could look into providing some experimental support for.  Not sure whether that fits your timeline for rolling, but I don't think it would take me too long to implement that.  Alternatively you can cast them, which will work for now.\nA solution for the rest of the errors are probably a bit more work, and it's not clear that a solution that we put in now will be the final solution.  @jmesserly has started experimental work on supporting covariant overrides, and I have proposed to use a similar mechanism for these cases: basically you would annotate the parameter and the compiler would automatically generate the code that I wrote above.  It's possible that we could get something out the door for you guys to prototype in a week or two, but in the meantime you would either need to work around it using the pattern that I wrote above, or else by suppressing the individual errors in some way.",
                "createdAt": "2016-09-01T00:57:06Z"
            },
            {
                "author": "abarth",
                "bodyText": "My understanding previously was that the Dart team was committed to working with us to evolving strong mode and the Flutter codebase to be compatible and that we'd made changes to each that were mutually agreeable.  With this change to the SDK, it seems like you're unilaterally forcing changes in the Flutter codebase (i.e., that are not mutually agreeable), contrary to that understanding.\nPerhaps a better path forward would be to revert whatever changes were made to the analyzer that have caused this regression and return to that agreed operating mode.",
                "createdAt": "2016-09-01T01:04:47Z"
            },
            {
                "author": "leafpetersen",
                "bodyText": "We are very committed to working with the Flutter team to make the Dart language work well for their use cases.  We, and I personally, have devoted quite a bit of time this quarter towards making this happen, and I am personally very enthusiastic about having this kind of large scale feedback on the language early on.  A couple of things we should be clear on though, to be sure that we're on the same page.\n\n\nThis is not a strong mode breaking change. This is Flutter relying on an implementation detail of the analyzer error codes in order to suppress existing error messages.  Implementation details like that are not part of the public API, and can and will change.  I am happy to work with the Flutter team to try to accommodate their needs, but we cannot maintain anything close to the kind of velocity that we need to have if we have to run any change to our implementation by the Flutter team, and revert any change that touches on Flutter.\n\n\nStrong mode has made, and will continue in the future to make, actual breaking changes as we move towards Dart 2.0.  Some of these breaking changes will affect Flutter, just as they currently affect large numbers of other users inside of google.  Sometimes those breaking changes will require changes to user code.  Sometimes the feedback we get from those breaking changes will lead us to back out of, or change our approach to, the breaking change.  None of this process is instantaneous, and if you are committed to rolling in new versions of strong mode frequently, you will certainly have to change code occasionally (hopefully usually for the better), and it is highly likely that you will sometimes need to work around issues.  The position that you should be able to roll strong mode weekly and never have to change your code is not tenable, and no commitment to such a thing has been made by, or communicated to, me.",
                "createdAt": "2016-09-01T05:15:49Z"
            },
            {
                "author": "abarth",
                "bodyText": "This is not a strong mode breaking change. This is Flutter relying on an implementation detail of the analyzer error codes in order to suppress existing error messages.\n\nI'm not sure I understand.  Are you saying that the strong_mode_static_type_error field in .analysis_options is considered an implementation detail of the analyzer?  My understanding was that the .analysis_options file was an appropriate and supported way to configure the analyzer.  For example, the .analysis_options file is discussed extensively in https://pub.dartlang.org/packages/analyzer.\n\nwe cannot maintain anything close to the kind of velocity that we need to have if we have to run any change to our implementation by the Flutter team, and revert any change that touches on Flutter.\n\nThat's not what I'm asking for.\n\nThe position that you should be able to roll strong mode weekly and never have to change your code is not tenable, and no commitment to such a thing has been made by, or communicated to, me.\n\nThat's also not my position.",
                "createdAt": "2016-09-01T05:28:04Z"
            },
            {
                "author": "leafpetersen",
                "bodyText": "I'm not sure I understand. Are you saying that the strong_mode_static_type_error field in .analysis_options is considered an implementation detail of the analyzer? My understanding was that the .analysis_options file was an appropriate and supported way to configure the analyzer. For example, the .analysis_options file is discussed extensively in https://pub.dartlang.org/packages/analyzer.\n\nThe use of that file to refer to specific error codes is, as far as I know, undocumented.  I'll defer to @pq and @bwilkerson as to whether or not that feature is considered part of the stable API or not.  I sincerely hope not, since I think it's very bad for the analyzer in general if changing an internal error code is a breaking change, but again, I'll defer to them.\nFor the specific case of strong mode, this is definitely an area that we will make changes in.   I basically don't care too much to argue over whether those changes are considered breaking or not.  To provide concrete context: the error code that you were relying on was a catch-all error code for a bunch of errors that we emitted in a separate pass that we tacked on to the analyzer. That catch-all category happened to include mostly things that you wanted to ignore (plus a small number of errors that you didn't really want to ignore and which were hence collateral damage).  That pass is in the process of going away for the sake of code health, performance, and improved user experience.  We are now emitting better, more precise error messages, and we have less duplicated code.  This is an important part of us moving strong mode forward and integrating it into the language.\nI understand that this is causing you some pain here, since you were relying on that organization of the errors for your filtering, and I'm willing to work with you to get to a good resolution.  I'm not in general ruling out temporarily reverting changes pending a resolution, but I will only do that very reluctantly - it has a very bad effect on our velocity, and our willingness to make changes in general.  This is particularly true if, as I understand is the case, Flutter is proposing to roll weekly.\nIn this particular case, I see a small number of errors, a few of which are things which you will at some point have to address (and can fix for now with casts), and the rest of which are things that we are working on at the language level.  The latter cases are, I believe, in non-API facing code where a small temporary work-around will address the issue pending a resolution.  I would suggest that the simplest and fastest solution would be to modify your code as I've suggested, with a TODO referencing the language changes.  Feel free to file a language bug and assign it to me.  I can commit to prioritizing getting you a prototype solution, but a final solution with syntax depends on buy in from the full language team.\nIt's also possible that @pq can suggest an alternative path to enabling you guys to just ignore these errors - I know there are a number of paths to doing so in the analyzer currently, but I don't know how all of these play into the Flutter story.",
                "createdAt": "2016-09-01T16:43:47Z"
            },
            {
                "author": "Hixie",
                "bodyText": "I think there was some miscommunication above. We have no problem churning the analysis file or improving the code by adding annotations or fixing bugs. The only thing we want to avoid is making the code worse, e.g. by losing type annotations we have today.\nDo you happen to know what the codes are that replaced the old code so that we can update the analysis options file to ignore the new codes instead, until there's a feature we can use to help the analyzer?\nSpecifically, these errors are IMHO not errors and we should either have annotations to help the analyzer understand they're correct code, or we should currently ignore them until such annotations or language features are available:\n[warning] The element type '(ImmediateMultiDragGestureRecognizer) \u2192 ImmediateMultiDragGestureRecognizer' cannot be assigned to the map value type 'GestureRecognizerFactory(GestureRecognizer) \u2192 GestureRecognizer' (examples/flutter_gallery/lib/demo/animation_demo.dart, line 187, col 46)\n[warning] The element type '(ImmediateMultiDragGestureRecognizer) \u2192 ImmediateMultiDragGestureRecognizer' cannot be assigned to the map value type 'GestureRecognizerFactory(GestureRecognizer) \u2192 GestureRecognizer' (examples/flutter_gallery/lib/demo/animation_demo.dart, line 353, col 46)\n[warning] The element type 'PopupMenuDivider' cannot be assigned to the list type 'PopupMenuEntry<LeaveBehindDemoAction>' (examples/flutter_gallery/lib/demo/leave_behind_demo.dart, line 146, col 15)\n[warning] The element type 'PopupMenuDivider' cannot be assigned to the list type 'PopupMenuEntry<String>' (examples/flutter_gallery/lib/demo/menu_demo.dart, line 143, col 17)\n[warning] A value of type '(PanGestureRecognizer) \u2192 PanGestureRecognizer' cannot be assigned to a variable of type 'GestureRecognizerFactory(GestureRecognizer) \u2192 GestureRecognizer' (packages/flutter/lib/src/widgets/gesture_detector.dart, line 284, col 40)\n[warning] A value of type '(ScaleGestureRecognizer) \u2192 ScaleGestureRecognizer' cannot be assigned to a variable of type 'GestureRecognizerFactory(GestureRecognizer) \u2192 GestureRecognizer' (packages/flutter/lib/src/widgets/gesture_detector.dart, line 295, col 42)\n[warning] A value of type '(HorizontalDragGestureRecognizer) \u2192 HorizontalDragGestureRecognizer' cannot be assigned to a variable of type 'GestureRecognizerFactory(GestureRecognizer) \u2192 GestureRecognizer' (packages/flutter/lib/src/widgets/gesture_detector.dart, line 269, col 51)\n[warning] A value of type '(DoubleTapGestureRecognizer) \u2192 DoubleTapGestureRecognizer' cannot be assigned to a variable of type 'GestureRecognizerFactory(GestureRecognizer) \u2192 GestureRecognizer' (packages/flutter/lib/src/widgets/gesture_detector.dart, line 236, col 46)\n[warning] A value of type '(LongPressGestureRecognizer) \u2192 LongPressGestureRecognizer' cannot be assigned to a variable of type 'GestureRecognizerFactory(GestureRecognizer) \u2192 GestureRecognizer' (packages/flutter/lib/src/widgets/gesture_detector.dart, line 243, col 46)\n[warning] A value of type '(VerticalDragGestureRecognizer) \u2192 VerticalDragGestureRecognizer' cannot be assigned to a variable of type 'GestureRecognizerFactory(GestureRecognizer) \u2192 GestureRecognizer' (packages/flutter/lib/src/widgets/gesture_detector.dart, line 254, col 49)\n[warning] A value of type '(TapGestureRecognizer) \u2192 TapGestureRecognizer' cannot be assigned to a variable of type 'GestureRecognizerFactory(GestureRecognizer) \u2192 GestureRecognizer' (packages/flutter/lib/src/widgets/gesture_detector.dart, line 226, col 40)\n[warning] The element type '(HorizontalDragGestureRecognizer) \u2192 HorizontalDragGestureRecognizer' cannot be assigned to the map value type 'GestureRecognizerFactory(GestureRecognizer) \u2192 GestureRecognizer' (packages/flutter/lib/src/widgets/scrollable.dart, line 706, col 46)\n[warning] The element type '(VerticalDragGestureRecognizer) \u2192 VerticalDragGestureRecognizer' cannot be assigned to the map value type 'GestureRecognizerFactory(GestureRecognizer) \u2192 GestureRecognizer' (packages/flutter/lib/src/widgets/scrollable.dart, line 696, col 44)\n[warning] The return type 'State<StatefulWidget>' is not a 'T', as defined by the method 'currentState'. (packages/flutter/lib/src/widgets/unique_widget.dart, line 29, col 12)\n[warning] The element type '(GetHealth) \u2192 Future<Health>' cannot be assigned to the map value type 'CommandHandlerCallback(Command) \u2192 Future<Result>' (packages/flutter_driver/lib/src/extension.dart, line 63, col 21)\n[warning] The element type '(Tap) \u2192 Future<TapResult>' cannot be assigned to the map value type 'CommandHandlerCallback(Command) \u2192 Future<Result>' (packages/flutter_driver/lib/src/extension.dart, line 64, col 14)\n[warning] The element type '(ScrollIntoView) \u2192 Future<ScrollResult>' cannot be assigned to the map value type 'CommandHandlerCallback(Command) \u2192 Future<Result>' (packages/flutter_driver/lib/src/extension.dart, line 67, col 25)\n[warning] The element type '(Scroll) \u2192 Future<ScrollResult>' cannot be assigned to the map value type 'CommandHandlerCallback(Command) \u2192 Future<Result>' (packages/flutter_driver/lib/src/extension.dart, line 66, col 17)\n[warning] The element type '(GetText) \u2192 Future<GetTextResult>' cannot be assigned to the map value type 'CommandHandlerCallback(Command) \u2192 Future<Result>' (packages/flutter_driver/lib/src/extension.dart, line 65, col 19)\n[warning] The element type '(WaitFor) \u2192 Future<WaitForResult>' cannot be assigned to the map value type 'CommandHandlerCallback(Command) \u2192 Future<Result>' (packages/flutter_driver/lib/src/extension.dart, line 70, col 18)\n[warning] The element type '(SubmitInputText) \u2192 Future<SubmitInputTextResult>' cannot be assigned to the map value type 'CommandHandlerCallback(Command) \u2192 Future<Result>' (packages/flutter_driver/lib/src/extension.dart, line 69, col 26)\n[warning] The element type '(SetInputText) \u2192 Future<SetInputTextResult>' cannot be assigned to the map value type 'CommandHandlerCallback(Command) \u2192 Future<Result>' (packages/flutter_driver/lib/src/extension.dart, line 68, col 23)\n\nFor the following error, I'm not really sure I understand what you want us to do:\n[warning] The return type 'SynchronousFuture<Map>' is not a 'Future<Map<String, List<String>>>', as defined by the method '_manifestParser'. (packages/flutter/lib/src/services/image_resolution.dart, line 147, col 12)\n\nIn this specific case, we have a JSON-encoded string which we need to convert to a Map<String, List<String>>. We want the code to throw as early as possible in checked mode if the JSON doesn't fit this pattern; in release mode behaviour can be undefined (but shouldn't allow arbitrary code execution). We want this to be efficient, so for example we don't want to have to get the dynamic->dynamic map back from JSON.decode and then copy all the data just to get the type arguments on the instances right.\nToday we're just relying on the fact that you can cast from Map<dynamic, dynamic> to Map<String, List<String>>, though we're then getting the exceptions much later than we'd like.\nAny advice you could give us here on how to improve this code so that it's both what we want and what you want would be great.",
                "createdAt": "2016-09-01T17:10:32Z"
            },
            {
                "author": "bwilkerson",
                "bodyText": "The use of that file to refer to specific error codes is, as far as I know, undocumented. I'll defer to @pq and @bwilkerson as to whether or not that feature is considered part of the stable API or not. I sincerely hope not, since I think it's very bad for the analyzer in general if changing an internal error code is a breaking change, but again, I'll defer to them.\n\nShams is, rather unfortunately, in the process of producing documentation on the analysis options file and it includes the ability to enable and disable various error codes. We ought not to be allowing errors (as opposed to warnings, hints and lints) to be disabled, but that is the current state of the world.\nAnd yes, although I fought hard against it, we are currently using the names of the error codes because we don't have any stable identifiers for the errors. Florian started working toward stable identifiers at one point, but there has been no progress for a while.\nI'd be happy to have a discussion (outside this issue) about how to clean up the mess we're in wrt error codes, ignore comments, and the analysis options file.",
                "createdAt": "2016-09-01T17:22:08Z"
            },
            {
                "author": "pq",
                "bodyText": "\ud83d\udc4d  to a higher bandwidth conversation over VC.",
                "createdAt": "2016-09-01T17:38:30Z"
            },
            {
                "author": "leafpetersen",
                "bodyText": "improving the code by adding annotations or fixing bugs. The only thing we want to avoid is making the code worse, e.g. by losing type annotations we have today.\n\nI really do appreciate that.  I do think that if you want to roll frequently you will have to accept some temporary regressions.  I understand that it's easy for temporary regressions to slip and turn into permanent regressions, and so I understand why you might want to avoid this if at all possible.\n\nDo you happen to know what the codes are that replaced the old code so that we can update the analysis options file to ignore the new codes instead, until there's a feature we can use to help the analyzer?\n\nI believe that you can get the appropriate codes by passing --machine to the analyzer and looking at the third field.  @pq would probably know better.  Unfortunately, I think this is likely to be a very bad solution for you.  The error code for\n[warning] The element type '(ImmediateMultiDragGestureRecognizer) \u2192 ImmediateMultiDragGestureRecognizer' cannot be assigned to the map value type 'GestureRecognizerFactory(GestureRecognizer) \u2192 GestureRecognizer' (examples/flutter_gallery/lib/demo/animation_demo.dart, line 187, col 46)\n\nis probably MAP_VALUE_TYPE_NOT_ASSIGNABLE .  If you disable this, you will no longer get any errors associated with maps with bad values, e.g.\nMap<int, int> m = {3 : \"world\"};\nFor the class of errors above associated with covariant callbacks, how would you feel about the following temporary workaround:\ntypedef S F<T, S>(T x);\n\nF/*<A, R>*/ covariant/*<A, R>*/( f(x)) => ((/*=A*/ x) => f(x));\n\nvoid main() {\n  Map<int, F<num, num>> m1 = {4 : covariant((int x) { return 3;})};\n}\nBasically this uses a generic top level function to wrap covariant callbacks at the target type.  This eliminates the error in the short term, and marks these locations as places where an eventual language level solution should be applied.  Thoughts?\nFor this error:\n[warning] The return type 'SynchronousFuture<Map>' is not a 'Future<Map<String, List<String>>>', as defined by the method '_manifestParser'. (packages/flutter/lib/src/services/image_resolution.dart, line 147, col 12)\n\nThe best solution is to wrap this map in a delegating map that checks the contents lazily.  The typed constructor from here is basically what you would want:\nhttps://www.dartdocs.org/documentation/collection/1.9.1/collection/DelegatingMap-class.html\nFor this error:\n[warning] The return type 'State<StatefulWidget>' is not a 'T', as defined by the method 'currentState'. (packages/flutter/lib/src/widgets/unique_widget.dart, line 29, col 12)\n\nI don't know what the intent is, so I don't immediately have a suggestion.  Why is this code right?  If I have a UniqueWidget<State<MySpecialStatefulWidget>>, why is it reasonable for .currentState to give me back a State<SomeOtherStatefulWidget>?",
                "createdAt": "2016-09-01T19:40:26Z"
            },
            {
                "author": "Hixie",
                "bodyText": "I do think that if you want to roll frequently you will have to accept some temporary regressions.\n\nI'm not sure that we really need to be rolling that frequently. I'm not familiar with the reasons for desiring the current roll, in particular. @pq, can you elaborate on what it is we need from the latest version?\n\nI understand that it's easy for temporary regressions to slip and turn into permanent regressions, and so I understand why you might want to avoid this if at all possible.\n\nThat is one concern, though not a big one. The bigger concern is that our code is intended to be used as sample code by our users. We want people to walk down the \"jump to definition\" path eagerly. We want our code to be part of the documentation. As such it has to be extremely readable and as free of hacks as possible. We can have hacks for a few days to go through a transition, but we can't have hacks in for weeks at a time.\n(This is the same reason we currently don't use dartfmt. Its output doesn't rise to a high enough quality bar.)\n\nThe error code for [...] is probably MAP_VALUE_TYPE_NOT_ASSIGNABLE .  If you disable this, you will no longer get any errors associated with maps with bad values [...]\n\nThat's probably ok for now. I'd rather do that than have to have weird incantations that people won't understand when reading the code.\n\nThe best solution is to wrap this map in a delegating map that checks the contents lazily.  The typed constructor from here is basically what you would want [...]\n\nI think this particular case points to the general need to take a Foo<dynamic> and dynamically convert it to a Foo<T> for a given T. I can imagine this being a pretty common need. Would it make sense to have some sort of language support for this? Almost like a static cast operator?\n\nWhy is this code right?  If I have a UniqueWidget<State<MySpecialStatefulWidget>>, why is it reasonable for .currentState to give me back a State<SomeOtherStatefulWidget>?\n\nBecause it's guaranteed that it will return the object it created from its createState method, which is defined to return a T.\nMaybe this code would actually already do the right thing if GlobalKey was changed to GlobalKey<T> on line 28? @pq, do you want to try that?",
                "createdAt": "2016-09-01T21:47:21Z"
            },
            {
                "author": "Hixie",
                "bodyText": "the general need to take a Foo<dynamic> and dynamically convert it to a Foo<T> for a given T\n\nFor example, consider that you have a List<num>, but you \"know\" that they're all integers, and you need a List<int>.\n  List<num> incoming = <num>[1, 2, 3];\n  // function style?\n  List<int> outgoing = cast<List<int>>(incoming);\n  // operator style?\n  List<int> outgoing = cast List<int>(incoming);\n  List<int> outgoing = cast incoming; // type implied from lhs, lhs explicit type required\nThe idea being that it would keep the same instance, somehow, but go in and change the generic type T of that instance somehow, verifying that everything was still type-correct?",
                "createdAt": "2016-09-01T21:51:18Z"
            },
            {
                "author": "pq",
                "bodyText": "I'm not sure that we really need to be rolling that frequently. I'm not familiar with the reasons for desiring the current roll, in particular. @pq, can you elaborate on what it is we need from the latest version?\n\nIn general, I prefer frequent rolls for the obvious reasons and historically it's payed off as regular integrations have allowed us to be iterative on things like language features, lints and analyses, detect performance regressions (e.g., that time VM background compilation got turned off), and reduce surprise as the platform evolves (e.g., strong-mode changes, pub tool changes, package version constraints become impossible to solve, etc).\nIn this particular case, besides general goodness an integration will unblock work on Flutter package summaries support which is key to analysis perf goals we've had in our sights for the last Q+.\n\nMaybe this code would actually already do the right thing if GlobalKey was changed to GlobalKey on line 28? @pq, do you want to try that?\n\nThat gets us a TYPE_ARGUMENT_NOT_MATCHING_BOUNDS error:\n'T' does not extend 'State<StatefulWidget>'lib/src/widgets/unique_widget.dart, line 28",
                "createdAt": "2016-09-02T13:54:20Z"
            },
            {
                "author": "Hixie",
                "bodyText": "@pq Maybe change the UniqueWidget definition to:\nabstract class UniqueWidget<T extends State<StatefulWidget>> extends StatefulWidget {\n\n...?",
                "createdAt": "2016-09-02T19:00:29Z"
            },
            {
                "author": "leafpetersen",
                "bodyText": "Following up.  Based on offline conversations with @pq and @Hixie, we will look for a different mechanism to allow Flutter to keep filtering the covariant callback related errors.  If this proves too difficult, I will look into how to temporarily re-enable the old behavior for Flutter.  I will follow up with @Hixie on some potential language proposals to support this kind of pattern.  We (@pq and I) will look into setting up some continuous integration testing of strong mode against the flutter repo so that we can provide more runway for flutter when breaking changes land, and to give us earlier visibility into unintentional breakage.",
                "createdAt": "2016-09-02T19:47:32Z"
            },
            {
                "author": "pq",
                "bodyText": "Sounds good @leafpetersen.  When you can, could you update with a rough time frame?  In particular, I'm wondering if we should wait or whether we should explore temporary local fixes in the interest of getting us integrated.  Thanks!",
                "createdAt": "2016-09-05T17:27:13Z"
            },
            {
                "author": "leafpetersen",
                "bodyText": "Here's a doc exploring some language level options for handling these kinds of patterns:\nhttps://docs.google.com/a/google.com/document/d/1RqqM-UMp3WGygYZirHqpwW-nZJpbWw9IVf1UJy6kxZc/edit?usp=sharing",
                "createdAt": "2016-09-08T00:09:02Z"
            },
            {
                "author": "leafpetersen",
                "bodyText": "@pq Do you mean a time frame for having a solution implemented?  It depends somewhat on how long it takes @Hixie and I to arrive at a mutually agreeable solution.  We may do best to find temporary fixes to let you make progress.",
                "createdAt": "2016-09-08T01:12:30Z"
            },
            {
                "author": "pq",
                "bodyText": "Thanks @leafpetersen.  I was really just trying to arrive at the short to medium term path and whether it made sense to wait for a prototype rather than commit work-arounds.  Thanks for pushing on this!",
                "createdAt": "2016-09-08T13:35:29Z"
            },
            {
                "author": "pq",
                "bodyText": "I think the short-term plan forward is to add source-level ignores with a reference to a tracking bug --- more details here: #5771.",
                "createdAt": "2016-09-08T15:33:43Z"
            },
            {
                "author": "pq",
                "bodyText": "Source is annotated and build is now green.\nIt ain't pretty obviously but I think we've got a path forward.\n@Hixie PTAL.",
                "createdAt": "2016-09-08T19:00:59Z"
            },
            {
                "author": "Hixie",
                "bodyText": "Rather than \"#5771\" I would recommend having the whole URL, as in \"https://github.com/flutter/flutter/issues/5771\". It's much harder to follow the former compared to the latter.",
                "createdAt": "2016-09-08T19:28:54Z"
            },
            {
                "author": "Hixie",
                "bodyText": "LGTM with the suggested changes.\nFor now.\nIf we end up with this code for more than a few weeks, though, we will have to revisit this.",
                "createdAt": "2016-09-08T19:51:12Z"
            },
            {
                "author": "pq",
                "bodyText": "For now.\n\n\ud83d\udc4d",
                "createdAt": "2016-09-08T19:57:28Z"
            },
            {
                "author": "pq",
                "bodyText": "/cc @scheglov -- this should get you unblocked on your summaries experiments. \ud83c\udf89",
                "createdAt": "2016-09-08T20:13:56Z"
            },
            {
                "author": "yjbanov",
                "bodyText": "FYI, this PR broke driver tests (build history, log).\nThe issue seems to be that package:test is unable to launch the test.",
                "createdAt": "2016-09-09T00:15:32Z"
            },
            {
                "author": "pq",
                "bodyText": "r'uh r'oh.  Following up via email...",
                "createdAt": "2016-09-09T02:43:34Z"
            }
        ],
        "commentCount": 33
    },
    {
        "number": 117698,
        "title": "Improve CupertinoContextMenu to match native more",
        "author": "Manuel",
        "state": "MERGED",
        "closedAt": "2023-02-15T17:37:22Z",
        "createdAt": "2022-12-27T21:52:17Z",
        "comments": [
            {
                "author": "bernaferrari",
                "bodyText": "if someone knows how to make that work, it is @gspencergoog. I really like that behavior, even Android had in a few places and macOS also allows on menu.",
                "createdAt": "2022-12-30T23:20:02Z"
            },
            {
                "author": "manuthebyte",
                "bodyText": "if someone knows how to make that work, it is @gspencergoog. I really like that behavior, even Android had in a few places and macOS also allows on menu.\n\nThat would be awesome!",
                "createdAt": "2022-12-31T17:27:35Z"
            },
            {
                "author": "MitchellGoodwin",
                "bodyText": "Also that swipe gesture sounds like a good thing to separate into it's own issue. @manuthebyte would you mind making a new issue and possibly adding an example? Conversation about that can be moved to there.",
                "createdAt": "2023-01-03T18:00:20Z"
            },
            {
                "author": "manuthebyte",
                "bodyText": "Summary of what I improved/changed/added:\n\nChange when the haptic feedback happens\nChange the type of haptic feedback\nDon't play the haptic feedback when the user aborts\nAdd test\n\nAnd lastly I improved the looks (the above is flutter, below is iOS):\n\n\n\nDarkmode\nLightmode\n\n\n\n\n\n\n\n\n\nAll in All, it now feels so near native, the last thing holding back is the swipe continue, for what I will open a new issue.",
                "createdAt": "2023-01-03T22:39:53Z"
            },
            {
                "author": "manuthebyte",
                "bodyText": "Also that swipe gesture sounds like a good thing to separate into it's own issue. @manuthebyte would you mind making a new issue and possibly adding an example? Conversation about that can be moved to there.\n\nCreated issue #117936 for that.",
                "createdAt": "2023-01-03T22:52:21Z"
            },
            {
                "author": "paldepind",
                "bodyText": "Thank you for working on this @manuthebyte. This looks great and like a huge improvement!\nJust to note, HapticFeedback.heavyImpact() is close but not the same as the native haptic feedback. But unfortunately, the native press-and-hold haptic feedback is not exposed by iOS except through the native components (as far as I can tell at least).",
                "createdAt": "2023-01-14T16:45:02Z"
            },
            {
                "author": "manuthebyte",
                "bodyText": "Thank you for working on this @manuthebyte. This looks great and like a huge improvement!\nJust to note, HapticFeedback.heavyImpact() is close but not the same as the native haptic feedback. But unfortunately, the native press-and-hold haptic feedback is not exposed by iOS except through the native components (as far as I can tell at least).\n\nTysm for your nice feedback!\nYeah so you're right, the haptic feedback is not exactly the same, but I think it's the closest we can get :)",
                "createdAt": "2023-01-14T16:54:48Z"
            },
            {
                "author": "bernaferrari",
                "bodyText": "Question: isn't it possible to just reduce the ms in the hapitic feedback?",
                "createdAt": "2023-01-15T00:41:47Z"
            },
            {
                "author": "manuthebyte",
                "bodyText": "Question: isn't it possible to just reduce the ms in the hapitic feedback?\n\nI don't think that's possible that easily because the HapticFeedback class calls native functions. But I don't know it for sure.",
                "createdAt": "2023-01-15T20:22:27Z"
            },
            {
                "author": "manuthebyte",
                "bodyText": "@MitchellGoodwin What exactly is the Google Testing check and why hasn't it started yet?",
                "createdAt": "2023-01-17T11:58:33Z"
            },
            {
                "author": "bernaferrari",
                "bodyText": "Try to rebase on top of latest master (open the fork in github and click to sync, then local and rebase to the top) and force push.",
                "createdAt": "2023-01-17T13:57:21Z"
            },
            {
                "author": "MitchellGoodwin",
                "bodyText": "@MitchellGoodwin What exactly is the Google Testing check and why hasn't it started yet?\n\nThe Google Testing is a test that runs separately against other products at google that use Flutter to make sure we aren't introducing a breaking change. As mentioned, it gets stuck sometimes, and rebasing tends to unstick it.\nI like the idea of adding the haptic feedback, even if it doesn't match native 100%, but can we make it optional? As in add a boolean to the constructor (maybe something like enableHapticFeedback?) that defaults to true so developers can opt out.",
                "createdAt": "2023-01-17T17:16:15Z"
            },
            {
                "author": "manuthebyte",
                "bodyText": "@MitchellGoodwin What exactly is the Google Testing check and why hasn't it started yet?\n\nThe Google Testing is a test that runs separately against other products at google that use Flutter to make sure we aren't introducing a breaking change. As mentioned, it gets stuck sometimes, and rebasing tends to unstick it.\nI like the idea of adding the haptic feedback, even if it doesn't match native 100%, but can we make it optional? As in add a boolean to the constructor (maybe something like enableHapticFeedback?) that defaults to true so developers can opt out.\n\nTy for the explanation :)\nYeah I think it's a great idea to make it optional! Also, now that you mention it, making the haptic feedback not optional would produce two haptic feedbacks at once at some times, because I have seen some Flutter apps already having Haptic Feedback on the context menus.",
                "createdAt": "2023-01-17T17:18:28Z"
            },
            {
                "author": "paldepind",
                "bodyText": "I like the idea of adding the haptic feedback, even if it doesn't match native 100%, but can we make it optional? As in add a boolean to the constructor (maybe something like enableHapticFeedback?) that defaults to true so developers can opt out.\n\nIs there a reason to disable the haptics? To me, it seems like the purpose of a widget like this is to replicate the native look and feel\u2014not to provide the most customizable component. Disabling the haptic would only make the component feel less native. Wouldn't it make sense to keep it simple and only have customizations that serve a purpose in the sense of achieving the native behavior?",
                "createdAt": "2023-01-19T15:03:01Z"
            },
            {
                "author": "MitchellGoodwin",
                "bodyText": "Is there a reason to disable the haptics? To me, it seems like the purpose of a widget like this is to replicate the native look and feel\u2014not to provide the most customizable component. Disabling the haptic would only make the component feel less native. Wouldn't it make sense to keep it simple and only have customizations that serve a purpose in the sense of achieving the native behavior?\n\nI think the reasons to keep it optional are:\n\nBecause the feedback is not going to be matching native 100%, I think it's good to leave open the option to disable it if a developer doesn't want one that may be jarring.\nAs mentioned, if they already have a workaround that they may prefer more we'd only be introducing a small breaking change that they can disable\n\nThough I do see your point, and it's likely that once released we find developers just leave the feedback on and we deprecate the toggle. Personally, I would like to keep it optional for now.",
                "createdAt": "2023-01-19T18:04:31Z"
            },
            {
                "author": "paldepind",
                "bodyText": "@MitchellGoodwin Thanks for your reply. That makes sense. I agree that the fact the behavior is not precisely native is a fine reason to allow the option.",
                "createdAt": "2023-01-19T20:22:47Z"
            },
            {
                "author": "delfme",
                "bodyText": "@manuthebyte do you think this will be merged anytime soon?",
                "createdAt": "2023-02-09T17:27:44Z"
            },
            {
                "author": "manuthebyte",
                "bodyText": "Sorry, for taking so long for that small of a change, had COVID :)",
                "createdAt": "2023-02-13T14:49:05Z"
            },
            {
                "author": "delfme",
                "bodyText": "Thanks for this!\nNo idea if settings are the same, but in dialog.dart I'm using _kDividerThickness = 0.25 or 0.5.",
                "createdAt": "2023-02-13T15:32:03Z"
            },
            {
                "author": "manuthebyte",
                "bodyText": "Thanks for this!\nNo idea if settings are the same, but in dialog.dart I'm using _kDividerThickness = 0.25 or 0.5.\n\nWhat do you mean by that?",
                "createdAt": "2023-02-13T16:43:45Z"
            },
            {
                "author": "delfme",
                "bodyText": "Looking at the image here, separator seems 0.25px or 0,5px thicker than native one. #117698 (comment)\nBut it might just be due to image resolution. Can you please double check it?\nI recall I edited _kDividerThickness inside dialog.dart coz separators looked a bit thicker as well",
                "createdAt": "2023-02-13T17:52:03Z"
            },
            {
                "author": "MitchellGoodwin",
                "bodyText": "To be clear, the line between actions is done here \n  \n    \n      flutter/packages/flutter/lib/src/cupertino/context_menu.dart\n    \n    \n         Line 1436\n      in\n      7bacc25\n    \n  \n  \n    \n\n        \n          \n           width: 0.5, \n        \n    \n  \n\n\nThe one in dialog.dart just controls similar looking widgets. It'd be great if we could get that divider a little closer to native, and I don't think it will take too much tinkering, but if weird issues pop up @manuthebyte and it's not that simple, put a comment in here and we can get this PR in as a win.",
                "createdAt": "2023-02-13T18:24:28Z"
            },
            {
                "author": "manuthebyte",
                "bodyText": "Should be absolutely perfect now (left iOS, right Flutter):",
                "createdAt": "2023-02-13T18:34:11Z"
            },
            {
                "author": "manuthebyte",
                "bodyText": "To be clear, the line between actions is done here\n\n  \n    \n      flutter/packages/flutter/lib/src/cupertino/context_menu.dart\n    \n    \n         Line 1436\n      in\n      7bacc25\n    \n  \n  \n    \n\n        \n          \n           width: 0.5, \n        \n    \n  \n\n\nThe one in dialog.dart just controls similar looking widgets. It'd be great if we could get that divider a little closer to native, and I don't think it will take too much tinkering, but if weird issues pop up @manuthebyte and it's not that simple, put a comment in here and we can get this PR in as a win.\n\nWould love to optimize the dialog a little bit! But I think I would prefer that we merge this PR and then I can make a seperate one :)",
                "createdAt": "2023-02-13T18:37:21Z"
            },
            {
                "author": "MitchellGoodwin",
                "bodyText": "Great! Thank you for keeping up with our nitpicks. This will be great to get in. I'm guessing the linter is not going to like the extra white spaces in the last commit, but I'll review when all the tests pass.",
                "createdAt": "2023-02-13T18:38:13Z"
            },
            {
                "author": "MitchellGoodwin",
                "bodyText": "Would love to optimize the dialog a little bit! But I think I would prefer that we merge this PR and then I can make a seperate one :)\n\nAs a warning, if you want to get the divider.dart looking perfect in the dialog file as well, that may be a bit of an undertaking for a little thing. They need to scale according to screen size, so it will have to match native on iOS, macOS, and web, and will likely break a fair amount of golden files that we will have to go through. But it would be nice to get that looking good.",
                "createdAt": "2023-02-13T18:43:23Z"
            },
            {
                "author": "manuthebyte",
                "bodyText": "Great! Thank you for keeping up with our nitpicks. This will be great to get in. I'm guessing the linter is not going to like the extra white spaces in the last commit, but I'll review when all the tests pass.\n\nRemoved them",
                "createdAt": "2023-02-13T18:46:16Z"
            },
            {
                "author": "manuthebyte",
                "bodyText": "Would love to optimize the dialog a little bit! But I think I would prefer that we merge this PR and then I can make a seperate one :)\n\nAs a warning, if you want to get the divider.dart looking perfect in the dialog file as well, that may be a bit of an undertaking for a little thing. They need to scale according to screen size, so it will have to match native on iOS, macOS, and web, and will likely break a fair amount of golden files that we will have to go through. But it would be nice to get that looking good.\n\nHmm okay. Will look into it - as you say, would be nice to have that clean as well.",
                "createdAt": "2023-02-13T18:48:22Z"
            },
            {
                "author": "delfme",
                "bodyText": "To be clear, the line between actions is done here\n\n  \n    \n      flutter/packages/flutter/lib/src/cupertino/context_menu.dart\n    \n    \n         Line 1436\n      in\n      7bacc25\n    \n  \n  \n    \n\n        \n          \n           width: 0.5, \n        \n    \n  \n\n\nThe one in dialog.dart just controls similar looking widgets. It'd be great if we could get that divider a little closer to native, and I don't think it will take too much tinkering, but if weird issues pop up @manuthebyte and it's not that simple, put a comment in here and we can get this PR in as a win.\n\nThx for the reference. If it can help, I recall I tested the 0,5px with lighten color but eventually opted for 0,25px. Fidelity is almost 100%.\nHopefully hairlines would be soon avaiable on Impelller #118947",
                "createdAt": "2023-02-13T19:41:47Z"
            },
            {
                "author": "manuthebyte",
                "bodyText": "LGTM. Thank you for the contribution and going along with my nitpicks! Let me find someone to get a secondary review for first-time contributors, and this will be ready to merge in.\n\nThank you! I am very happy with your nitpicks, because I also want it to be perfect! :)\nNow the last thing is the continuous swipe. Hoping we also can achieve that. But I'm positive about that \ud83d\udcaf",
                "createdAt": "2023-02-14T21:48:11Z"
            }
        ],
        "commentCount": 30
    },
    {
        "number": 96774,
        "title": "Fix flutter web app not respecting assets path when in non-root folder",
        "author": "nicolasvac",
        "state": "MERGED",
        "closedAt": "2022-03-10T23:50:17Z",
        "createdAt": "2022-01-18T14:45:17Z",
        "comments": [
            {
                "author": "nicolasvac",
                "bodyText": "I'm not sure where to look for writing a test or even how to, so if the PR reviewer could guide me that would help a lot.",
                "createdAt": "2022-01-18T15:37:27Z"
            },
            {
                "author": "yjbanov",
                "bodyText": "The change itself LGTM. Is there a way to write a test that would make sure we don't break it in the future?",
                "createdAt": "2022-01-20T00:18:31Z"
            },
            {
                "author": "yjbanov",
                "bodyText": "Maybe something like this? https://github.com/flutter/flutter/blob/master/dev/bots/service_worker_test.dart",
                "createdAt": "2022-01-20T00:19:36Z"
            },
            {
                "author": "nicolasvac",
                "bodyText": "@yjbanov i think a test that checks if the '/' is present at the beginning of the file names is sufficient ?",
                "createdAt": "2022-01-21T11:33:05Z"
            },
            {
                "author": "yjbanov",
                "bodyText": "Of course, since we don't have a test environment that replicates Github pages or similar, there's no guarantee that we won't break this again in the future. We won't break it on purpose though.",
                "createdAt": "2022-02-02T01:58:10Z"
            },
            {
                "author": "ditman",
                "bodyText": "(Just checked in the original issue, and the headers are not overriding service worker scopes, odd)",
                "createdAt": "2022-02-02T03:32:19Z"
            },
            {
                "author": "yjbanov",
                "bodyText": "For some reason I thought index.html was not served from the service worker in offline mode (or any mode), but maybe I'm wrong.",
                "createdAt": "2022-02-02T17:23:59Z"
            },
            {
                "author": "yjbanov",
                "bodyText": "Well, our service worker does fetch it, but maybe that's unnecessary? We don't really support offline mode very easily right now, so all this may be a little moot.",
                "createdAt": "2022-02-02T17:27:29Z"
            },
            {
                "author": "ditman",
                "bodyText": "(I think this can be merged, but it'll need revisiting when solving the issue you linked for sure @yjbanov)",
                "createdAt": "2022-02-02T18:36:23Z"
            },
            {
                "author": "christopherfujino",
                "bodyText": "@nicolasvac looks like there's a type error that the Linux web_long_running_tests_1_5 CI step is catching:\nUnhandled exception:\ntype '_InternalLinkedHashMap<dynamic, dynamic>' is not a subtype of type 'Map<Object, Object>' of 'other'\n#0      MapMixin.addAll (dart:collection/maps.dart)\n#1      addStateInfo (package:matcher/src/util.dart:29:14)\n#2      _DeepMatcher.matches (package:matcher/src/equals_matcher.dart:261:5)\n#3      expect (file:///b/s/w/ir/x/w/flutter/dev/bots/service_worker_test.dart:61:15)\n#4      runWebServiceWorkerTest.expectRequestCounts (file:///b/s/w/ir/x/w/flutter/dev/bots/service_worker_test.dart:76:5)\n#5      runWebServiceWorkerTest (file:///b/s/w/ir/x/w/flutter/dev/bots/service_worker_test.dart:137:5)\n<asynchronous suspension>\n#6      _runShardRunnerIndexOfTotalSubshard (file:///b/s/w/ir/x/w/flutter/dev/bots/test.dart:1931:5)\n<asynchronous suspension>\n#7      _runWebLongRunningTests (file:///b/s/w/ir/x/w/flutter/dev/bots/test.dart:1115:3)\n<asynchronous suspension>\n#8      _runFromList (file:///b/s/w/ir/x/w/flutter/dev/bots/test.dart:1973:5)\n<asynchronous suspension>\n#9      main (file:///b/s/w/ir/x/w/flutter/dev/bots/test.dart:200:5)\n<asynchronous suspension>\n\nhttps://logs.chromium.org/logs/flutter/buildbucket/cr-buildbucket/8824686530296893649/+/u/run_test.dart_for_web_long_running_tests_shard_and_subshard_1_5/test_stderr",
                "createdAt": "2022-02-17T22:04:06Z"
            },
            {
                "author": "nicolasvac",
                "bodyText": "@christopherfujino how is this affected by removing the first element of the list, considering it's still a list ?",
                "createdAt": "2022-02-18T23:36:26Z"
            },
            {
                "author": "christopherfujino",
                "bodyText": "@christopherfujino how is this affected by removing the first element of the list, considering it's still a list ?\n\nI didn't actually look at your PR before. Now that I did...I have no idea",
                "createdAt": "2022-02-23T01:22:13Z"
            },
            {
                "author": "christopherfujino",
                "bodyText": "I scheduled a re-run of Linux web_long_running_tests_1_5. If that also fails, I would suggest rebasing upstream, in case this was something that has already been fixed in master.",
                "createdAt": "2022-03-03T22:15:04Z"
            },
            {
                "author": "nicolasvac",
                "bodyText": "@christopherfujino merged commits",
                "createdAt": "2022-03-03T23:17:28Z"
            },
            {
                "author": "christopherfujino",
                "bodyText": "I'm stumped on this failure, gonna ask about it on the tests channel of our discord server.",
                "createdAt": "2022-03-04T00:01:52Z"
            },
            {
                "author": "christopherfujino",
                "bodyText": "Ok, narrowed it down to an bug in the test file: #99522. I will submit a patch to fix.",
                "createdAt": "2022-03-04T00:52:40Z"
            },
            {
                "author": "christopherfujino",
                "bodyText": "Fix is in #99524",
                "createdAt": "2022-03-04T17:21:53Z"
            },
            {
                "author": "christopherfujino",
                "bodyText": "Fix is in #99524\n\nFix has been merged, @nicolasvac please rebase upstream. The test will still fail because you need to update an expectation, but the failure should tell you how to fix it.",
                "createdAt": "2022-03-04T23:32:16Z"
            },
            {
                "author": "nicolasvac",
                "bodyText": "@christopherfujino i've remerged everything and waited for the tests to run,\n[CHROME STDERR]:Fontconfig warning: \"/etc/fonts/fonts.conf\", line 100: unknown element \"blank\" [CHROME STDERR]:\nStill this is not related to this merge request. I hope this can be merged now as it has been over two months for \"outside\" problems",
                "createdAt": "2022-03-07T09:34:32Z"
            },
            {
                "author": "christopherfujino",
                "bodyText": "@christopherfujino i've remerged everything and waited for the tests to run, [CHROME STDERR]:Fontconfig warning: \"/etc/fonts/fonts.conf\", line 100: unknown element \"blank\" [CHROME STDERR]:\nStill this is not related to this merge request. I hope this can be merged now as it has been over two months for \"outside\" problems\n\nPer the Flutter team's Tree Hygiene policy this change cannot be merged with failing tests.\nThe customer_testing-linux test will be fixed by rebasing (not merging) upstream. As for the web test infrastructure failure, I am not familiar with that. I would recommend joining the discord #hackers-infra channel and following up there (alternatively you can file an issue for it).",
                "createdAt": "2022-03-07T18:05:08Z"
            },
            {
                "author": "mdebbar",
                "bodyText": "The failures seem unrelated to this PR and are probably caused by the branch being stale.\n@nicolasvac could you please try rebasing your branch on top of flutter:master to see if that fixes the failures? You may need to remove the merge commits before attempting to rebase.",
                "createdAt": "2022-03-07T20:01:08Z"
            },
            {
                "author": "nicolasvac",
                "bodyText": "@mdebbar do you have a list of commands i can run ?\nI'm not familiar with rebasing from another repository",
                "createdAt": "2022-03-07T22:16:54Z"
            },
            {
                "author": "mdebbar",
                "bodyText": "@nicolasvac can you show me what you are naming your remotes? (output of git remote -v)",
                "createdAt": "2022-03-10T18:21:50Z"
            },
            {
                "author": "nicolasvac",
                "bodyText": "origin  git@github.com:nicolasvac/flutter.git (fetch)\norigin  git@github.com:nicolasvac/flutter.git (push)",
                "createdAt": "2022-03-10T18:24:39Z"
            },
            {
                "author": "mdebbar",
                "bodyText": "Ok, first thing you need to add the flutter upstream remote:\ngit remote add upstream git@github.flutter/flutter.git\n\nThen, you need to fetch the master branch from upstream:\ngit fetch upstream master\n\nNext, move your local master branch to point to your latest commit (excluding the merge commits). That would be the Update web.dart commit (sha: 419783e). The first step here is to make sure to point your HEAD somewhere else:\ngit checkout upstream/master\ngit branch -f master 419783e\n\nNow, let's rebase your local master on top of upstream:master. The number 3 is the number of commits in your branch that will be rebased:\ngit rebase --onto upstream/master master~3 master",
                "createdAt": "2022-03-10T18:41:49Z"
            },
            {
                "author": "nicolasvac",
                "bodyText": "@mdebbar git gave me some errors and i think it got messed up.\nIf you want i can just open another PR and re-create the branch",
                "createdAt": "2022-03-10T19:22:33Z"
            },
            {
                "author": "mdebbar",
                "bodyText": "@nicolasvac I would prefer to keep the same PR to maintain the comment history.\nOne thing you can do is use the same branch (nicolasvac:master), clean it up, redo your change and push it.",
                "createdAt": "2022-03-10T19:33:57Z"
            },
            {
                "author": "nicolasvac",
                "bodyText": "@mdebbar i think i've managed to solve it.\nIs it ok now ?",
                "createdAt": "2022-03-10T20:39:17Z"
            },
            {
                "author": "nicolasvac",
                "bodyText": "@mdebbar @christopherfujino All right, thank you both for your patience and assistance.",
                "createdAt": "2022-03-10T20:41:15Z"
            },
            {
                "author": "christopherfujino",
                "bodyText": "@mdebbar @christopherfujino All right, thank you both for your patience and assistance.\n\nYou never fixed the test: https://logs.chromium.org/logs/flutter/buildbucket/cr-buildbucket/8820046930680517745/+/u/run_test.dart_for_web_long_running_tests_shard_and_subshard_1_5/test_stderr\nUnhandled exception:\nhas different length and is missing map key ''\n#0      expect (file:///b/s/w/ir/x/w/flutter/dev/bots/service_worker_test.dart:67:3)\n#1      runWebServiceWorkerTest.expectRequestCounts (file:///b/s/w/ir/x/w/flutter/dev/bots/service_worker_test.dart:77:5)\n#2      runWebServiceWorkerTest (file:///b/s/w/ir/x/w/flutter/dev/bots/service_worker_test.dart:138:5)\n<asynchronous suspension>\n#3      _runShardRunnerIndexOfTotalSubshard (file:///b/s/w/ir/x/w/flutter/dev/bots/test.dart:1931:5)\n<asynchronous suspension>\n#4      _runWebLongRunningTests (file:///b/s/w/ir/x/w/flutter/dev/bots/test.dart:1115:3)\n<asynchronous suspension>\n#5      _runFromList (file:///b/s/w/ir/x/w/flutter/dev/bots/test.dart:1973:5)\n<asynchronous suspension>\n#6      main (file:///b/s/w/ir/x/w/flutter/dev/bots/test.dart:199:5)\n<asynchronous suspension>",
                "createdAt": "2022-03-10T21:26:27Z"
            },
            {
                "author": "nicolasvac",
                "bodyText": "@christopherfujino seems ok now",
                "createdAt": "2022-03-10T23:06:31Z"
            }
        ],
        "commentCount": 31
    },
    {
        "number": 96664,
        "title": "fix: BottomNavigationBarItem colors",
        "author": "Zlati Pehlivanov",
        "state": "CLOSED",
        "closedAt": "2022-07-19T12:32:33Z",
        "createdAt": "2022-01-14T17:53:38Z",
        "comments": [
            {
                "author": "talamaska",
                "bodyText": "I would love to get some feedback on the PR. I'm prepared to make any additional changes to meet the requirements.",
                "createdAt": "2022-01-20T18:26:32Z"
            },
            {
                "author": "darrenaustin",
                "bodyText": "It also appears that the analyzer is complaining about trailing spaces on the ends of some lines. (See the analyze-linux check's details)",
                "createdAt": "2022-02-15T23:24:24Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 1 new digest(s) on patchset 4.\nView them at https://flutter-gold.skia.org/cl/github/96664",
                "createdAt": "2022-02-16T12:23:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 1 new digest(s) on patchset 5.\nView them at https://flutter-gold.skia.org/cl/github/96664",
                "createdAt": "2022-02-16T12:33:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 8 new digest(s) on patchset 7.\nView them at https://flutter-gold.skia.org/cl/github/96664",
                "createdAt": "2022-02-16T13:08:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 16 new digest(s) on patchset 8.\nView them at https://flutter-gold.skia.org/cl/github/96664",
                "createdAt": "2022-02-16T13:13:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 6 new digest(s) on patchset 9.\nView them at https://flutter-gold.skia.org/cl/github/96664",
                "createdAt": "2022-02-16T13:18:05Z"
            },
            {
                "author": "talamaska",
                "bodyText": "@darrenaustin fixed everything.\nAdded more docs and removed the trailing spaces\nSeems like there is a problem with the CLA because I accepted your commit suggestions. Is that resolvable or I should reset and apply the changes myself.",
                "createdAt": "2022-02-16T13:23:14Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 18 new digest(s) on patchset 10.\nView them at https://flutter-gold.skia.org/cl/github/96664",
                "createdAt": "2022-02-16T13:28:05Z"
            },
            {
                "author": "talamaska",
                "bodyText": "reset and re-applied changes to avoid CLA issues and not waste more time on this.",
                "createdAt": "2022-02-16T15:31:50Z"
            },
            {
                "author": "darrenaustin",
                "bodyText": "@talamaska thanks for the update. It looks like the new tests are failing however. From the logs for one of the failing checks:\n00:35 +626: /b/s/w/ir/x/w/flutter/packages/flutter/test/material/bottom_navigation_bar_test.dart: label style color should override itemColor for BottomNavigationBarType.shifting                     \n\u2550\u2550\u2561 EXCEPTION CAUGHT BY FLUTTER TEST FRAMEWORK \u255e\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\nThe following TestFailure was thrown running a test:\nExpected: Color:<Color(0xffff9900)>\n  Actual: Color:<Color(0xff0004ff)>\n\nCan you take a look? Thx.",
                "createdAt": "2022-02-23T00:52:03Z"
            },
            {
                "author": "talamaska",
                "bodyText": "@darrenaustin it seems your suggestion for shortening is not working as expected.\n return (iconTheme ?? const IconThemeData()).copyWith(color: itemColor);\nI think you missed the point initially or overlooked. The thing here is that itemColor can be null and the short variant is not covering this case. In any case, if I return my code to the previous state the tests are passing.\nmy logic is copied from the _effectiveTextStyle and changed to work for icon theme and item color.\nI'm returning my way of writing, it is correct and it is following the same style as the _effectiveTextStyle.\nP.S on additional look I see another problem that I miss. iconTheme will never be null in the condition cause we just assigned a fresh IconThemData. Will try to make it better.\nP.S Also it seems that iconTheme should override not only iconColor, but also textStyle color.",
                "createdAt": "2022-02-23T12:59:28Z"
            },
            {
                "author": "talamaska",
                "bodyText": "I think it is fixed now.\nAdded more docs as well.",
                "createdAt": "2022-02-23T13:37:11Z"
            },
            {
                "author": "talamaska",
                "bodyText": "@darrenaustin is there something else that is blocking this PR?",
                "createdAt": "2022-03-15T23:34:00Z"
            },
            {
                "author": "talamaska",
                "bodyText": "@darrenaustin, hi there. I wonder, can I get a review again? It's been quite some time since I implemented the requested changes. I would really like this to be merged before starting other efforts for eventual material 3 migration, because I'm afraid the issues will end up in the new version as well. I have pinged in discord as well. If it is more convenient we can chat there.",
                "createdAt": "2022-04-18T17:37:43Z"
            },
            {
                "author": "talamaska",
                "bodyText": "@darrenaustin\nI'm also kinda confused why Shifting bottom bar is so broken and should I try to fix that as well?\n\nvs this in fixed\n\nIn the end if I'm going to implement the above suggested selected and unselected effectiveIconTheme\nfinal IconThemeData effectiveSelectedIconTheme =\n      _effectiveIconTheme(\n        widget.selectedIconTheme ?? bottomTheme.selectedIconTheme,\n        widget.selectedItemColor \n        ?? bottomTheme.selectedItemColor \n        ?? themeColor\n      );\n      \nfinal IconThemeData effectiveUnselectedIconTheme =\n      _effectiveIconTheme(\n        widget.unselectedIconTheme ?? bottomTheme.unselectedIconTheme,\n        widget.unselectedItemColor \n        ?? bottomTheme.unselectedItemColor \n        ?? themeData.unselectedWidgetColor\n      );\nand breaking that golden test, it would make sense to implement the colorTween separation as well\nThe white label and icons is partly caused by the tween for the shifting type, at least the label color\nI don't think this is correct\n\nWhy would I have themeData.colorScheme.surface for begin and end, shouldn't it be themeColor for the end?\nWhen I implement the suggested above nullish coalescing for the effectiveIconTheme the icon is colored correctly\n\nAnd this is if I change the end value for colorTween for shifting type to themeColor\n\n\nI think the right call would be to recreate the goldens with my patches in order to pass the tests. After all the policy of flutter is to make breaking changes if it is for the sake of fixing things.\nJust give me a heads up if you would like me to push all the changes I have mentioned including the colorTweens",
                "createdAt": "2022-04-26T18:38:01Z"
            },
            {
                "author": "talamaska",
                "bodyText": "@darrenaustin in the end, would it make sense to drop all those fixes if there is a material 3 rewrite going? Or is the new material 3 navigation bar will be a new widget?",
                "createdAt": "2022-04-26T18:56:50Z"
            },
            {
                "author": "TahaTesser",
                "bodyText": "I saw #96480 this morning and filed a PR for it based on Hixie's comment, which addresses selectedLabelStyle and unselectedLabelStyle.\nNow I found this PR and #64358\nJust closed new issue #96480 for a duplicate of the issue linked here #64358\n@darrenaustin\n\nfix: BottomNavigationBarItem title's color is not overriden neither by selectedLabelStyle nor unselectedLabelStyle\n\nI think my PR addressed the issue matching the Flutter docs\n\nfix: BottomNavigationBarItem icon's color is not overriden neither by selectedLabelStyle nor unselectedLabelStyle\n\nselectedLabelStyle or unselectedLabelStyle shouldn't update BottomNavigationBarItem icon's color.",
                "createdAt": "2022-04-27T21:16:58Z"
            },
            {
                "author": "talamaska",
                "bodyText": "@darrenaustin @TahaTesser if my PR is not needed anymore feel free to close. It's a shame that I was waiting for review months and @TahaTesser PR was reviewed and approved in a matter of hours. I understand that my PR was not perfect, but anyways.\nI'm happy that's resolved. Do you think the shifting bottom bar colors should be fixed in a separate PR and update it's goldens?",
                "createdAt": "2022-04-28T09:10:02Z"
            },
            {
                "author": "TahaTesser",
                "bodyText": "@talamaska\nMy PR had to be reverted #102756, I would suggest keeping this PR open and making sure to address the issues related to revert in your PR.",
                "createdAt": "2022-05-03T06:58:19Z"
            },
            {
                "author": "Hixie",
                "bodyText": "What is the status of this PR? Did we end up fixing this issue in the other PR?\n@talamaska sorry for the delays in dealing with this PR. You are welcome to come bug us on our Discord server (link in the contributing guidelines) if you would like to ask for reviews when we drop the ball. :-)",
                "createdAt": "2022-07-12T23:25:57Z"
            },
            {
                "author": "talamaska",
                "bodyText": "@Hixie Hi, well, it seems the PR is a no go, because it is breaking some golden tests. Which on my opinion just rely on a wrong behavior and in addition the reported issues are not included in the existing tests. I didn't get any feedback on the question about the shifting bottom bar styles or any other question in my comment to @darrenaustin. In the other PR #102756 that was reverted I got an explanation that this is a breaking change and there is a different process of implementing those - with temporary flags or something else that can gracefully help devs migrate to the new behavior. So I'm not sure what to do here. About the Discord channel I didn't get any response there when i was waiting for a review last time.",
                "createdAt": "2022-07-13T13:59:04Z"
            },
            {
                "author": "Hixie",
                "bodyText": "If it's breaking some customer tests then yeah, generally that means we end up putting a flag that flips between the old and new behaviours for a while, so that we can migrate the code. That's relatively straight forward; you just have a static boolean variable BottomNavigationBar.useLegacyColorScheme that defaults to true, and you implement your logic only when it's false. Then we land that, flip the flag in any customer code, make the tests pass, then we flip the default for the flag and remove the old behaviour, land that, remove the flag flip in the customer code, and then finally remove the flag. Ideally if we do this we'd also publish a migration guide, which for this kind of change would be really trivial, just telling people there's nothing to change, all we've done is make the colors better, and pointing them to the properties they can use to control the colors if they prefer the old styles.",
                "createdAt": "2022-07-13T20:03:26Z"
            },
            {
                "author": "Hixie",
                "bodyText": "Looks like the customer_testing shard is breaking because you may have done a merge instead of a rebase. I recommend squashing your commits then rebasing so that it's the last commit on your branch, that way the script knows which version of the customer tests to run.",
                "createdAt": "2022-07-13T20:30:59Z"
            },
            {
                "author": "Hixie",
                "bodyText": "I couldn't figure out what the shifting label issue was, can you elaborate on this? Where do the screenshots come from?\nFor the migration guide the documentation for doing that is in the template: https://github.com/flutter/website/blob/main/src/release/breaking-changes/template.md\nMore information about breaking changes is at: https://github.com/flutter/flutter/wiki/Tree-hygiene#handling-breaking-changes",
                "createdAt": "2022-07-13T20:34:08Z"
            },
            {
                "author": "talamaska",
                "bodyText": "I couldn't figure out what the shifting label issue was, can you elaborate on this? Where do the screenshots come from?\n\n@Hixie\nThe shifting label and icons are white (surface color) if the user doesn't set any colors or styles.\nThe screenshots are taken before v3. I'm almost sure they will be the same in master.",
                "createdAt": "2022-07-13T20:53:28Z"
            },
            {
                "author": "talamaska",
                "bodyText": "@Hixie will check the info about the breaking changes. For now the flag is implemented and all the conditional logic is there, so with the flag true, no tests are breaking and tests are testing with the flag equal to false. Thanks for sharing those with me.",
                "createdAt": "2022-07-13T20:56:22Z"
            },
            {
                "author": "talamaska",
                "bodyText": "Looks like the customer_testing shard is breaking because you may have done a merge instead of a rebase. I recommend squashing your commits then rebasing so that it's the last commit on your branch, that way the script knows which version of the customer tests to run.\n\nYes I merged from master. I didn't know I have to rebase. I'm not sure how to squash my commits and then rebase since i already merged master in my branch.",
                "createdAt": "2022-07-13T21:04:13Z"
            },
            {
                "author": "talamaska",
                "bodyText": "@Hixie Could you please elaborate on squashing and rebasing. I have like 3 merges from master thought the life of this branch. Do I need to revert from the beginning, make my changes, then rebase master into my branch? I'm sorry if this is a trivial question, but I have never rebased before and I see I can't squash commits if they include a merge in the middle. Would it be easier to just drop this PR, make a new branch from the current master, add my changes and submit a new PR?",
                "createdAt": "2022-07-14T11:05:55Z"
            },
            {
                "author": "Hixie",
                "bodyText": "Easiest way is probably to just create a new branch, then cherry-pick your commits onto it. Alternatively you might be able to do it using git rebase -i where you just select your commits and skip the merge commits (I'm not sure exactly how that works since I don't normally try to use merges). In general for Flutter we recommend using rebases, see also https://github.com/flutter/flutter/wiki/Tree-hygiene#using-git",
                "createdAt": "2022-07-14T18:20:38Z"
            },
            {
                "author": "talamaska",
                "bodyText": "@darrenaustin @Hixie closing this PR in favor of a new one #107924",
                "createdAt": "2022-07-19T12:32:32Z"
            }
        ],
        "commentCount": 31
    },
    {
        "number": 82575,
        "title": "[flutter] when primary mouse pointers don't contact a focused node, reset the focus",
        "author": "Jonah Williams",
        "state": "MERGED",
        "closedAt": "2021-06-09T00:39:06Z",
        "createdAt": "2021-05-14T21:30:23Z",
        "comments": [
            {
                "author": "jonahwilliams",
                "bodyText": "This currently only applies for keyboard events, I'd need to do more research into how touch events should behave",
                "createdAt": "2021-05-14T21:31:25Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 2 untriaged digest(s) on patchset 2.\nView them at https://flutter-gold.skia.org/cl/github/82575",
                "createdAt": "2021-05-14T21:36:18Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "adding another widget here seems to be changing the layout slightly, which is unfortunate...",
                "createdAt": "2021-05-14T21:47:46Z"
            },
            {
                "author": "MarcusWichelmann",
                "bodyText": "Just an outsiders thought:\nThis looks great and all, but should it really be necessary to add a FocusTrap widget to the widget tree just to get a behaviour which one might expect to be there by default? Of course, this is a good first step, but maybe this functionallity should also be included into other widgets like e.g. MaterialApp so programmers get the behaviour they know from the web out of the box without having to google for it and adding the FocusTrap widget theirself?",
                "createdAt": "2021-05-19T09:27:10Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "I agree, I'm not sure that this is the right solution exactly but i'm not sure how else you would do it. Widgets can't unfocus themselves if they aren't hit \ud83e\udd14",
                "createdAt": "2021-05-19T16:50:46Z"
            },
            {
                "author": "Wissperwind",
                "bodyText": "In HTML Web every element can be focused. Even if it is not editable, correct?\nCan't we make every widget fucusable? This would change the focus away from a text field if you click for example on the background scaffold or the scroll bar.\nI am not a flutter developer. So this is only an idea from outside but I wanted to post it.\nFor me it is rather important to get some working solution in the next two weeks than to get a really good solution.",
                "createdAt": "2021-05-19T21:46:26Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "An html element isn't equivalent to a flutter widget. A widget not have any UI, only configuring other widgets themselves. Even making every widget with uI focusable would make pure focus traversal painful.",
                "createdAt": "2021-05-19T22:25:09Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Based on some discussion with @gspencergoog , I've updated this to use the unfocus functionality of the modal route's FocusScopeNode. Of course, using the gesture recognizer the way that I am is breaking the world, so I'll need to find a way to make this change not compete with any other recognizers somehow...",
                "createdAt": "2021-05-20T01:00:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 3 untriaged digest(s) on patchset 4.\nView them at https://flutter-gold.skia.org/cl/github/82575",
                "createdAt": "2021-05-20T01:03:12Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "PTAL at the current approach",
                "createdAt": "2021-05-20T22:22:30Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "This should probably be widened to include all touch gestures on the web, but maybe we should study that a bit more and handle the easier desktop case first?",
                "createdAt": "2021-05-21T00:26:03Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "By conditionally attaching the focus to the text field instead of the editable text, I can drop the entire FocusArea concept.",
                "createdAt": "2021-05-27T00:08:23Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Without weird hacks, the way I think we could solve this is to slightly re-imagine how the text field decoration of editable text works. rather than wrapping the editable text, create a builder that allows the wrapping text fields to inject their decorations into the widget. That would allow the focus node to always surround all decoration without special cases for focus attachment.",
                "createdAt": "2021-05-27T21:59:09Z"
            },
            {
                "author": "chunhtai",
                "bodyText": "This seems to turn into a big refactor. cc @LongCatIsLooong who may have a better idea how to handle this",
                "createdAt": "2021-05-27T22:04:15Z"
            },
            {
                "author": "gspencergoog",
                "bodyText": "Something we should do eventually is convert the editable text to use a Focus widget instead of doing special things with a focus node and its own focus attachment. It's the only thing that uses FocusAttachment other than Focus, and it would be better if we could just say that all focus operations should use a Focus widget, in order to centralize the code for that. It will also require some reworking of things, since it'll have to discover the focus node from the Focus widget (via Focus.of(context)) and pass it down to the render object, but I think it would be a good idea. That might also help with this problem, to pull some of the focus stuff out of editable text.",
                "createdAt": "2021-05-27T22:12:21Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "How would moving the EditableText to use a FocusNode help the issue of the Focus needing to include the parent decoration?",
                "createdAt": "2021-05-27T22:17:15Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "the other approach would be to remove the text field specific work arounds for this change, let it be broken, and then prioritize a fix later.",
                "createdAt": "2021-05-27T22:18:34Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "I updated this to remove the text field specific hacks. currently investigating how to correctly \"reset\" focus so that tab still works",
                "createdAt": "2021-05-27T23:52:34Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Tab focus works now",
                "createdAt": "2021-06-04T00:43:55Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "PTAL",
                "createdAt": "2021-06-04T00:44:00Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "FYI @renyou , not sure what is up with the google testing on this PR",
                "createdAt": "2021-06-09T00:05:29Z"
            },
            {
                "author": "renyou",
                "bodyText": "It seems some google internal tests may be very slow and I am going to increase the timeout threshold. Hopefully it can resolve this.",
                "createdAt": "2021-06-09T00:20:30Z"
            },
            {
                "author": "renyou",
                "bodyText": "@jonahwilliams  Did you trigger a full test on this PR?",
                "createdAt": "2021-06-09T00:25:43Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "yes, since it is a potentially a substantial change I wanted to be sure we ran as many tests as possible...",
                "createdAt": "2021-06-09T00:30:41Z"
            },
            {
                "author": "renyou",
                "bodyText": "Yes! The tests are actually all done, just took longer to analyze all the test results. I manually set the results. Everything looks good!",
                "createdAt": "2021-06-09T00:33:24Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "\ud83c\udf8a",
                "createdAt": "2021-06-09T00:35:36Z"
            },
            {
                "author": "HansMuller",
                "bodyText": "@jonahwilliams - does this PR address #74354?",
                "createdAt": "2021-06-10T17:19:04Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "This only handles clicks via mouse on desktop and mobile web, not taps - though the PR also mentions clicks. I'm not sure if that is trying to fix the same issue as this or a different input connection based focus issue",
                "createdAt": "2021-06-10T17:33:35Z"
            },
            {
                "author": "jpnurmi",
                "bodyText": "On Linux, native GNOME/GTK apps don't reset focus when clicking outside text fields.\nThe focused render object inside TextField doesn't cover the entire TextField? Please check #85732\nIs it not possible to have buttons that don't reset focus? #76072 (comment)",
                "createdAt": "2021-07-01T22:17:34Z"
            },
            {
                "author": "Hixie",
                "bodyText": "If we want this behaviour, why not just put a Focus widget around the route?\n...but I'm not convinced we want this behaviour. It's not what happens on Windows and macOS as far as I can tell.",
                "createdAt": "2021-07-05T21:50:50Z"
            },
            {
                "author": "Hixie",
                "bodyText": "I think this is just something we want on Web, and on Web the behaviour is just that the root of the tree is itself focusable, no need to check whether a tap would have focused a node and all that.",
                "createdAt": "2021-07-05T21:52:16Z"
            }
        ],
        "commentCount": 31
    },
    {
        "number": 75027,
        "title": "[flutter_tools] switch dart defines to base64 to avoid windows control characters",
        "author": "Jonah Williams",
        "state": "MERGED",
        "closedAt": "2021-02-02T17:10:49Z",
        "createdAt": "2021-01-29T23:10:40Z",
        "comments": [
            {
                "author": "jonahwilliams",
                "bodyText": "I did also make various attempts to escape % with no success",
                "createdAt": "2021-02-01T19:01:20Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "lgtm w/ question: was it ever expected that the encoded defines would need to be human readable?\n\nNo, not in the current format. If we wanted to make an earnest attempt to support that, I think the proper way would be to allow providing a file path which contained the dart defines in a simple format (not yaml), and then having the tool read that.",
                "createdAt": "2021-02-01T19:52:23Z"
            },
            {
                "author": "shinayser",
                "bodyText": "Guys, this feature caused a lot of problems on Flutter 2.2. Many reports going out in every forum Iook of people complaining about codes breaking and stopped working on Android. Myself included: #82865\nThis is breaking change and should be reported for people that are updating to Flutter 2.2",
                "createdAt": "2021-05-19T17:49:24Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "@shinayser the gradle (or xcode) API is not considered stable and may change arbitrarily between versions. The top level flutter command --dart-define API did not change for this release",
                "createdAt": "2021-05-19T17:55:51Z"
            },
            {
                "author": "shinayser",
                "bodyText": "@shinayser the gradle (or xcode) API is not considered stable and may change arbitrarily between versions. The top level flutter command --dart-define API did not change for this release\n\nSo what is the recommended way of using this api, since it can break at any time?",
                "createdAt": "2021-05-19T17:57:28Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "I guess I don't understand your usecase,  does flutter build apk/appbundle/aar --dart-define=.. not work for you?",
                "createdAt": "2021-05-19T18:01:58Z"
            },
            {
                "author": "shinayser",
                "bodyText": "Yes, this works. Our problem is capturing the key-value pairs on the build.gradle app file.\nBefore this MR we were capuring it by using the URLDecoder and since upgrading to 2.2 it breaks totally, because now the strings are in Base86 format.\nMore details here #82865 (comment)",
                "createdAt": "2021-05-19T18:04:48Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "What is the advantage of specifying this in build.gradle?",
                "createdAt": "2021-05-19T18:05:56Z"
            },
            {
                "author": "shinayser",
                "bodyText": "We need one of the dart-define values coming from our CI and that key is required by the third-part library to be passed in the AndroidManifest.",
                "createdAt": "2021-05-19T18:09:11Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "I still don't really understand what specifying all of these defines in the build.gradle buys you though. Whatever automation you're using to get these values could handle the android manifest and the flutter build command separately",
                "createdAt": "2021-05-19T18:11:34Z"
            },
            {
                "author": "shinayser",
                "bodyText": "We capture the keys of the Faster (the third-aprt library) in the build.gradle and add them to the manifestPlaceholders:\ndef dartEnvironmentVariables = [];\n\nif (project.hasProperty('dart-defines')) {\n\tdartEnvironmentVariables = project.property('dart-defines')\n\t\t\t.split(',')\n\t\t\t.collectEntries { entry ->\n\t\t\t\tdef byteArray = Base64.getDecoder().decode(entry)\n\t\t\t\tdef decodedString = new String(byteArray)\n\t\t\t\tdef pair = decodedString.split('=')\n\t\t\t\t[(pair.first()): pair.last()]\n\t\t\t}\n}\n\n\n\n....\n\n\n\n\n   defaultConfig {\n        manifestPlaceholders = [FASTER_APP_KEY_ANDROID: dartEnvironmentVariables.FASTER_APP_KEY_ANDROID,\n                                FASTER_APP_SECRET_ANDROID: dartEnvironmentVariables.FASTER_APP_SECRET_ANDROID\n        ]\n    }\n\nThen, we add them to the manifest:\n  <meta-data\n                android:name=\"com.movile.faster.sdk.application_key\"\n                android:value=\"${FASTER_APP_KEY_ANDROID}\" />\n\n        <meta-data\n                android:name=\"com.movile.faster.sdk.application_secret\"\n                android:value=\"${FASTER_APP_SECRET_ANDROID}\" />\n\nI don't understand your suggestiong but we are very open to hear a better strategy you could share with us",
                "createdAt": "2021-05-19T18:14:57Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "So you are using flutter to build the app, but then you have some additional steps in gradle to grab some of the defines and  stick them elsewhere in your build?",
                "createdAt": "2021-05-19T18:34:53Z"
            },
            {
                "author": "shinayser",
                "bodyText": "Exactly. The app is fully written in Flutter, but we have a plugin that needs those setups in the AndroidManifest.",
                "createdAt": "2021-05-19T18:40:25Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "what if we provided an easy way to pass project configuration through the gradle? You might have to specify the value twice, but then you'd have an exact project key and wouldn't need to parse anything from defines?",
                "createdAt": "2021-05-19T18:41:47Z"
            },
            {
                "author": "shinayser",
                "bodyText": "Interesting and sounds good! Just curious about the \"specify value twice\". What you mean by that? Got any idea in mind?",
                "createdAt": "2021-05-19T18:46:48Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "suppose you had a key=value pair, and you wanted to use it both as a dart-define and in your build.gradle:\nflutter build apk --dart-define=key=value --gradle-project=key=value (flag name TBD)\nthen in your build.gradle:\ndef valueINeed;\n\nif (project.hasProperty('key')) {\n\tvalueINeed = project. property('key').somethingAsStringIMAfkRightNow()\n\t...",
                "createdAt": "2021-05-19T18:49:49Z"
            },
            {
                "author": "shinayser",
                "bodyText": "Humm... this would workd but I am afraid that this duplication can be bad if a project has multiple other defines. There isn't a way to accessing the dart-defines just like you proposed?",
                "createdAt": "2021-05-19T18:53:13Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "The defines are only available in the gradle project as a pass through, and need to be encoded to account for escaping issues. I guess we could move the encoding to the invocation of the flutter task? That would leave them as plain text in the project config.",
                "createdAt": "2021-05-19T18:55:43Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "TBH I don't really like that solution because it wouldn't match the other platforms. We're definitely not going to move the encoding to the xcode project file",
                "createdAt": "2021-05-19T18:57:03Z"
            },
            {
                "author": "shinayser",
                "bodyText": "TBH I don't really like that solution because it wouldn't match the other platforms. We're definitely not going to move the encoding to the xcode project file\n\nYes definetly. To be honest, the way it is workign right now is working fine, but the problem is the change caused apps to break by simply upgrading to flutter 2.2. A clearer documentation of this is enough since it is a more rare case.",
                "createdAt": "2021-05-19T19:08:58Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "For your specific use-case, I think you should consider the --gradle-project feature. Yes it would be bad for 1000s of defines, but if you only need one or two...",
                "createdAt": "2021-05-19T19:11:25Z"
            },
            {
                "author": "shinayser",
                "bodyText": "For your specific use-case, I think you should consider the --gradle-project feature. Yes it would be bad for 1000s of defines, but if you only need one or two...\n\nSure, in my usecase it works fine. I am just wondering for other projects. And  just like you said, this could scale porly for multiple platforms. like:\nflutter build apk --dart-define=key=value --gradle-project=key=value --windows-project=key=value --linux-project=key=value  --futurePlatformNonExistentIn2021=key=value",
                "createdAt": "2021-05-19T19:14:10Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "OK, lets not worry about other projects that may or may not exist then \ud83d\ude04",
                "createdAt": "2021-05-19T19:15:07Z"
            },
            {
                "author": "shinayser",
                "bodyText": "Sure thing! My point is just that we already have a \"generic way\" of passing the arguments to all the platforms, via dart-defines.  I personally prefer things the scale well vs others that do not.",
                "createdAt": "2021-05-19T19:24:20Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "But again, dart-defines is not a generic way to do this, its just a way to set environment constants in dart.",
                "createdAt": "2021-05-19T19:26:39Z"
            },
            {
                "author": "shinayser",
                "bodyText": "Humm... you saying that the dart-defines can't be accessed directly on all the platforms?\nIf so, them the task should not be creating new sub commands for the flutter build command, but instead 'Create a way of accessing the dart-defines in every platform'",
                "createdAt": "2021-05-19T19:43:28Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "are you having problems passing configuration on the other platforms, or just on android?",
                "createdAt": "2021-05-19T19:47:35Z"
            },
            {
                "author": "shinayser",
                "bodyText": "Nope! Only Android for now.",
                "createdAt": "2021-05-19T20:02:11Z"
            },
            {
                "author": "shinayser",
                "bodyText": "Like I said, I am very satisfied with the current way of accessing them. Just had this fflutter 2.2 problem that caused us some headache since yesterday to find the root of the problem xD",
                "createdAt": "2021-05-19T20:03:03Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "then I don't really understand what your concern is with the solution I presented above is. I'm interested in helping find a better solution here, but you need to understand that the way you are using them isn't really supported and may arbitrarily break in the future.",
                "createdAt": "2021-05-19T20:03:46Z"
            },
            {
                "author": "shinayser",
                "bodyText": "My concern was just the scalability of the proposal. But you have more knowledge of this subject than me, so if you think it is the best soluttion then I am fine with it too.",
                "createdAt": "2021-05-19T20:09:12Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "implemented in #82941",
                "createdAt": "2021-05-19T20:37:07Z"
            }
        ],
        "commentCount": 32
    },
    {
        "number": 74469,
        "title": "Implement dartPluginClass support for plugins",
        "author": "Emmanuel Garcia",
        "state": "MERGED",
        "closedAt": "2021-02-19T17:22:46Z",
        "createdAt": "2021-01-22T06:14:01Z",
        "comments": [
            {
                "author": "blasten",
                "bodyText": "@jonahwilliams what do you think of this approach?  It supports hot-reload, etc...  If it makes sense, I will still need to get the metadata from pubspec.yaml, which I don't think it's accessible at this point.",
                "createdAt": "2021-01-22T06:15:52Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "IIRC this won't work as is without more changes in the resident_runner or the hot reload pipeline. The development compiler needs to be given the same entrypoint to compile as the app was built with - otherwise I don't believe hot reloads will work until a hot restart - and in this case that hot restart would blow away the plugin callback.\nThis will also require some special casing for g3, since they'll likely generate that file in a different way.",
                "createdAt": "2021-01-22T17:23:27Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Because this change affects the hot reload/restart development cycle, its critical that we also get some integration tests running it with actual dart plugins wired up - perhaps synthetic to reduce dependencies.\nThis could either be done in the devicelab hostonly, or you could add an affordance for wiring up dart plugins for the flutter tester device and run in the tools integration shard",
                "createdAt": "2021-01-26T19:04:17Z"
            },
            {
                "author": "blasten",
                "bodyText": "@jonahwilliams are there any flutter run e2e test for desktop?",
                "createdAt": "2021-01-26T19:12:49Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "I believe the standard hot reload/hot restart tests run on all platforms now (@stuartmorgan ?) but they do not have plugins.",
                "createdAt": "2021-01-26T19:14:17Z"
            },
            {
                "author": "stuartmorgan",
                "bodyText": "I believe the standard hot reload/hot restart tests run on all platforms now (@stuartmorgan ?) but they do not have plugins.\n\nIt runs for macOS, I'm very close on Windows, Linux is currently blocked on some infra help getting the headless VMs to be able to launch Flutter apps. (The test case I'm working on is the devicelab hot reload test that you brought up for macOS a while back; currently we don't have any devicelab tests for Windows and Linux).",
                "createdAt": "2021-01-26T19:25:08Z"
            },
            {
                "author": "stuartmorgan",
                "bodyText": "We could get it running for macOS now though, and then bring Windows and Linux up soon once the desktop devicelab infrastructure is in place, assuming it's mostly cross-platform code.",
                "createdAt": "2021-01-26T19:26:26Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Something else that needs to be considered - suppose a plugin incorrectly implements this sort of registerWith functionality (typo or otherwise). Are we just going to spit out a compilation error (in a file most users will not know about)? Do we have any publishing validation that these interfaces are implemented? Maybe we could do more runtime checks in a \"debug\" mode so that these errors could be handled?",
                "createdAt": "2021-01-27T18:10:06Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Also, if the engine is going to invoke this method - where do the errors go?",
                "createdAt": "2021-01-27T18:10:33Z"
            },
            {
                "author": "blasten",
                "bodyText": "Something else that needs to be considered - suppose a plugin incorrectly implements this sort of registerWith functionality (typo or otherwise)\n\n@jonahwilliams how is it different than Android & iOS in regard to consuming a 3P dependency?",
                "createdAt": "2021-01-27T18:12:24Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Today if someone adds a dependency on a bad plugin for iOS/android what happens?",
                "createdAt": "2021-01-27T18:14:43Z"
            },
            {
                "author": "blasten",
                "bodyText": "If there's an error in the static registerWith method, it shows the stacktrace that includes the generated registry file.\nIn the case of a Dart registry, this is what the error looks like:\nE/flutter ( 9432): #0      _registerPlugins (.../.dart_tool/flutter_build/generated_main.dart:14:3)\nE/flutter ( 9432): #1      _runMainZoned.<anonymous closure>.<anonymous closure> (dart:ui/hooks.dart:135:29)\nE/flutter ( 9432): #2      _rootRun (dart:async/zone.dart:1354:13)\nE/flutter ( 9432): #3      _CustomZone.run (dart:async/zone.dart:1258:19)\nE/flutter ( 9432): #4      _runZoned (dart:async/zone.dart:1788:10)\nE/flutter ( 9432): #5      runZonedGuarded (dart:async/zone.dart:1776:12)\nE/flutter ( 9432): #6      _runMainZoned.<anonymous closure> (dart:ui/hooks.dart:133:5)\nE/flutter ( 9432): #7      _delayEntrypointInvocation.<anonymous closure> (dart:isolate-patch/isolate_patch.dart:283:19)\nE/flutter ( 9432): #8      _RawReceivePortImpl._handleMessage (dart:isolate-patch/isolate_patch.dart:184:12)",
                "createdAt": "2021-01-27T18:19:59Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Have you thought about how this is going to work with existing error reporting solutions like crashlytics or other Zone based error handlers?",
                "createdAt": "2021-01-27T18:21:07Z"
            },
            {
                "author": "blasten",
                "bodyText": "I'd expect errors of this kind to be very uncommon, and only possible if a plugin author didn't bother testing the example app. Even more unlikely would be to see such plugin gaining usage.",
                "createdAt": "2021-01-27T18:25:40Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "to handle the case of static errors, in debug mode you could wrap the whole thing in a try catch that caught a NSM, and then used some additional info to point users to offending plugins.",
                "createdAt": "2021-01-27T18:26:50Z"
            },
            {
                "author": "blasten",
                "bodyText": "Somehow:\ntry {\n  /// something\n } on NoSuchMethodError catch(error) {\n    print('Dart plugins had an error: \\${error}');\n}\n\ndidn't work. Is this correct?",
                "createdAt": "2021-01-27T19:40:10Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "For debug mode you could catch everything instead, but this should be easy to simulate locally to get something working (i.e. in dart pad)",
                "createdAt": "2021-01-27T19:49:37Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Oh right, it will be a compile error if the method is missing/misspelled",
                "createdAt": "2021-01-27T19:56:14Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "so there isn't anything to catch",
                "createdAt": "2021-01-27T19:56:23Z"
            },
            {
                "author": "blasten",
                "bodyText": "I added the e2e test. The test needs to be checked in prior to enabling it on LUCI. PTAL",
                "createdAt": "2021-01-28T02:30:16Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Shipping initial support for this and losing the ability to remove plugins from a pubspec doesn't seem like a reasonable tradeoff to me. I don't really have the full picture on how important this feature is, so I'd let @zanderso make a call as to whether that is reasonable",
                "createdAt": "2021-01-29T18:38:47Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "The way that I would implement correct rebuilding of the registrant is to hoist the generation into a new Target instance, make the inputs the pubspec.yaml, the output the generated file. Then make KernelSnapshot depend on it.\nYou could re-use the same rule in the resident runner, with the localizations as an example of how to hook it up. Then all of the existing invalidation logic would work with it",
                "createdAt": "2021-01-29T20:08:32Z"
            },
            {
                "author": "blasten",
                "bodyText": "I'd really like to merge this PR this week. I initially sent a small patch 453c320 to get feedback,  and make everyone's review easier.  Please let me know how you'd like to proceed.",
                "createdAt": "2021-02-02T02:48:26Z"
            },
            {
                "author": "blasten",
                "bodyText": "As long as this PR doesn't introduce a tool crash on a reload with an added/removed plugin, I'm okay with handling in a follow-up PR. Please file an issue and note it in a TODO(blasten).\n\nAdding or removing the plugin from pubspec.yaml doesn't trigger a crash as Hot restart doesn't fetch new dependencies.\nThe following sequence causes an error, but no crash:\n\nadd plugin to pubspec.yaml\nflutter run\nremove plugin from pubspec.yaml\nflutter pub get\nTrigger hot restart\n\nError: Could not resolve the package 'url_launcher_linux' in 'package:url_launcher_linux/url_launcher_linux.dart'.\nError: Could not resolve the package 'url_launcher_macos' in 'package:url_launcher_macos/url_launcher_macos.dart'.\n.dart_tool/flutter_build/generated_main.dart:9:8: Error: Not found: 'package:url_launcher_linux/url_launcher_linux.dart'\nimport 'package:url_launcher_linux/url_launcher_linux.dart';\n       ^\n.dart_tool/flutter_build/generated_main.dart:10:8: Error: Not found: 'package:url_launcher_macos/url_launcher_macos.dart'\nimport 'package:url_launcher_macos/url_launcher_macos.dart';\n       ^\n.dart_tool/flutter_build/generated_main.dart:15:7: Error: Getter not found: 'UrlLauncherPlugin'.\n      UrlLauncherPlugin.registerWith();\n      ^^^^^^^^^^^^^^^^^\n.dart_tool/flutter_build/generated_main.dart:17:7: Error: Getter not found: 'UrlLauncherPlugin'.\n      UrlLauncherPlugin.registerWith();\n      ^^^^^^^^^^^^^^^^^\nPerforming hot restart...                                              \u28feError: Could not resolve the package 'url_launcher_linux' in 'package:url_launcher_linux/url_launcher_linux.dart'.\nError: Could not resolve the package 'url_launcher_macos' in 'package:url_launcher_macos/url_launcher_macos.dart'.\n.dart_tool/flutter_build/generated_main.dart:9:8: Error: Not found: 'package:url_launcher_linux/url_launcher_linux.dart'\nimport 'package:url_launcher_linux/url_launcher_linux.dart';\n       ^\n.dart_tool/flutter_build/generated_main.dart:10:8: Error: Not found: 'package:url_launcher_macos/url_launcher_macos.dart'\nimport 'package:url_launcher_macos/url_launcher_macos.dart';\n       ^\n.dart_tool/flutter_build/generated_main.dart:15:7: Error: Getter not found: 'UrlLauncherPlugin'.\n      UrlLauncherPlugin.registerWith();\n      ^^^^^^^^^^^^^^^^^\n.dart_tool/flutter_build/generated_main.dart:17:7: Error: Getter not found: 'UrlLauncherPlugin'.\n      UrlLauncherPlugin.registerWith();\n      ^^^^^^^^^^^^^^^^^",
                "createdAt": "2021-02-03T02:32:48Z"
            },
            {
                "author": "zanderso",
                "bodyText": "@blasten Thanks for checking =) The only open items on my side are adding the TODO and the question about yaml validation.",
                "createdAt": "2021-02-03T18:01:09Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "I don't really agree. The tool may not be crashing, but the user has no way of fixing that error without quitting and restarting - it might as well be a crash. If you think that change would be better done as a follow up because of the scope/size, I'm open to it, but we can't ship another stable without that implemented.",
                "createdAt": "2021-02-03T21:29:19Z"
            },
            {
                "author": "blasten",
                "bodyText": "I don't really agree. The tool may not be crashing, but the user has no way of fixing that error without quitting and restarting - it might as well be a crash.\n\nI think this is currently true for a plugin that supports iOS and/or Android. For example, if you remove a plugin that provides implementation for a method channel,  then wouldn't that cause an exception if the platform implementation tries to reach the Dart code that no longer exists?\nRegenerating the main dart file on hot restart isn't hard, I implemented that originally. But I removed it after your comment #74469 (comment) as doing it without changing those tests involve additional changes, and therefore expands the scope of this PR.",
                "createdAt": "2021-02-03T22:22:00Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "From offline discussion, we can move forward with this PR as is, provided that the plugin removal issue is addressed as a release blocker",
                "createdAt": "2021-02-04T18:30:35Z"
            },
            {
                "author": "zanderso",
                "bodyText": "From the PR review meeting: I think this one is still waiting on some of the items in #74469 (review). Please correct me if I'm mistaken!",
                "createdAt": "2021-02-11T21:35:42Z"
            },
            {
                "author": "jmagman",
                "bodyText": "Re: test failures\nI added url_launcher: and url_launcher_macos: to a project pubspec.  Before this change, .flutter-plugins-dependencies looks like:\n  \"plugins\": {\n    \"ios\": [\n      {\n        \"name\": \"url_launcher\",\n        \"path\": \"{path}\",\n        \"dependencies\": []\n      }\n    ],\n    \"android\": [\n      {\n        \"name\": \"url_launcher\",\n        \"path\": \"{path}\",\n        \"dependencies\": []\n      }\n    ],\n    \"macos\": [\n      {\n        \"name\": \"url_launcher_macos\",\n        \"path\": \"{path}\",\n        \"dependencies\": []\n      }\n    ],\n    \"linux\": [\n      {\n        \"name\": \"url_launcher_linux\",\n        \"path\": \"{path}\",\n        \"dependencies\": []\n      }\n    ],\n    \"windows\": [\n      {\n        \"name\": \"url_launcher_windows\",\n        \"path\": \"{path}\",\n        \"dependencies\": []\n      }\n    ],\n    \"web\": [\n      {\n        \"name\": \"url_launcher_web\",\n        \"path\": \"{path}\",\n        \"dependencies\": []\n      }\n    ]\n  },\n\nOn this PR url_launcher is listed as a plugin for Windows, Linux, and macOS, with the platform-specific variant as a dependency.\n  \"plugins\": {\n    \"ios\": [\n      {\n        \"name\": \"url_launcher\",\n        \"path\": \"{path}\",\n        \"dependencies\": []\n      }\n    ],\n    \"android\": [\n      {\n        \"name\": \"url_launcher\",\n        \"path\": \"{path}\",\n        \"dependencies\": []\n      }\n    ],\n    \"macos\": [\n      {\n        \"name\": \"url_launcher\",\n        \"path\": \"{path}\",\n        \"dependencies\": [\n          \"url_launcher_macos\"\n        ]\n      },\n      {\n        \"name\": \"url_launcher_macos\",\n        \"path\": \"{path}\",\n        \"dependencies\": []\n      }\n    ],\n    \"linux\": [\n      {\n        \"name\": \"url_launcher\",\n        \"path\": \"{path}\",\n        \"dependencies\": [\n          \"url_launcher_linux\"\n        ]\n      },\n      {\n        \"name\": \"url_launcher_linux\",\n        \"path\": \"{path}\",\n        \"dependencies\": []\n      }\n    ],\n    \"windows\": [\n      {\n        \"name\": \"url_launcher\",\n        \"path\": \"{path}\",\n        \"dependencies\": [\n          \"url_launcher_windows\"\n        ]\n      },\n      {\n        \"name\": \"url_launcher_windows\",\n        \"path\": \"{path}\",\n        \"dependencies\": []\n      }\n    ],\n    \"web\": [\n      {\n        \"name\": \"url_launcher_web\",\n        \"path\": \"{path}\",\n        \"dependencies\": []\n      }\n    ]\n  },\n\nIf that's the intended behavior of this PR, those tests should be updated.",
                "createdAt": "2021-02-18T01:04:41Z"
            },
            {
                "author": "blasten",
                "bodyText": "Thanks @jmagman. That seems correct based on my changes. (which I had to review again :))",
                "createdAt": "2021-02-18T01:11:36Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux flutter_plugins has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2021-02-18T04:26:03Z"
            }
        ],
        "commentCount": 32
    },
    {
        "number": 70747,
        "title": "Roll Engine from 35a0b9fe6827 to 4b859cee939a (4 revisions)",
        "author": "engine-flutter-autoroll",
        "state": "CLOSED",
        "closedAt": "2020-11-19T17:51:34Z",
        "createdAt": "2020-11-18T07:45:41Z",
        "comments": [
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-18T08:48:03Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-18T09:53:03Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-18T10:58:04Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-18T12:03:02Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-18T13:08:02Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-18T14:13:04Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-18T15:18:03Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-18T16:23:04Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-18T17:28:04Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-18T18:33:04Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-18T19:38:03Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-18T20:43:04Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-18T21:48:04Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-18T22:53:02Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-18T23:58:04Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-19T01:03:04Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-19T02:08:04Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-19T03:13:04Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-19T04:18:05Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-19T05:23:04Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-19T06:28:04Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-19T07:33:05Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-19T08:38:04Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-19T09:43:05Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-19T10:48:04Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-19T11:53:06Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-19T12:58:04Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-19T14:03:05Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-19T15:08:04Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-19T16:13:05Z"
            },
            {
                "author": "fluttergithubbot",
                "bodyText": "This pull request is not suitable for automatic merging in its current state.\n\nThe status or check suite Linux web_tool_tests has failed. Please fix the issues identified (or deflake) before re-applying this label.",
                "createdAt": "2020-11-19T17:18:05Z"
            },
            {
                "author": "engine-flutter-autoroll",
                "bodyText": "Commit queue failed; closing this roll.",
                "createdAt": "2020-11-19T17:51:33Z"
            }
        ],
        "commentCount": 32
    },
    {
        "number": 48223,
        "title": "Add HeroMode widget",
        "author": "najeira",
        "state": "MERGED",
        "closedAt": "2020-10-31T04:23:03Z",
        "createdAt": "2020-01-06T02:44:32Z",
        "comments": [
            {
                "author": "justinmc",
                "bodyText": "@najeira Are you still available to help finish up this PR?",
                "createdAt": "2020-02-28T00:08:51Z"
            },
            {
                "author": "najeira",
                "bodyText": "Yes! Thanks for the review. Sorry for noticing late.\nI will update.",
                "createdAt": "2020-02-28T01:50:09Z"
            },
            {
                "author": "justinmc",
                "bodyText": "Cool, no problem!  Thanks for taking a look at my review.",
                "createdAt": "2020-02-28T16:24:56Z"
            },
            {
                "author": "najeira",
                "bodyText": "Some CI tests have failed.\n|   error \u2022 The getter 'subtitle1' isn't defined for the class 'TextTheme' \u2022 lib/src/views/seamail.dart:196:104 \u2022 undefined_getter\n|   error \u2022 The argument type 'dynamic' can't be assigned to the parameter type 'TextStyle' \u2022 lib/src/views/seamail.dart:199:35 \u2022 argument_type_not_assignable\n|   error \u2022 The getter 'bodyText1' isn't defined for the class 'TextTheme' \u2022 lib/src/views/seamail.dart:199:58 \u2022 undefined_getter\n|   error \u2022 The argument type 'dynamic' can't be assigned to the parameter type 'TextStyle' \u2022 lib/src/views/seamail.dart:467:23 \u2022 argument_type_not_assignable\n\n...\n\n\nShould I rebase?",
                "createdAt": "2020-03-03T06:06:09Z"
            },
            {
                "author": "justinmc",
                "bodyText": "@najeira Yes, it looks like that's not caused by your changes.  Rebase with master (or merge master) and hopefully it will go away.  And let me know if you're ready for me to review again.  Thanks!",
                "createdAt": "2020-03-05T23:41:09Z"
            },
            {
                "author": "chunhtai",
                "bodyText": "I cannot reproduce the original error, and #28042 seems to be fixed.\nWhat is this pr aim to fix?",
                "createdAt": "2020-03-26T17:40:27Z"
            },
            {
                "author": "najeira",
                "bodyText": "Explanation of reproduction procedure was not enough.\nTry:\n\nlaunch app\nshow heart tab\npush \"Next out tab\"\n\nError:\n\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550 Exception caught by scheduler library \u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\nThe following assertion was thrown during a scheduler callback:\nThere are multiple heroes that share the same tag within a subtree.\n\nWithin each subtree for which heroes are to be animated (i.e. a PageRoute subtree), each Hero must have a unique non-null tag.\nIn this case, multiple heroes had the following tag: hero tag\n\nHere is the subtree for one of the offending heroes: Hero\n  tag: hero tag\n  dependencies: [_ModalScopeStatus]\n  state: _HeroState#b2991\nWhen the exception was thrown, this was the stack: \n#0      Hero._allHeroesFor.inviteHero.<anonymous closure> (package:flutter/src/widgets/heroes.dart:266:11)\n#1      Hero._allHeroesFor.inviteHero (package:flutter/src/widgets/heroes.dart:277:8)\n#2      Hero._allHeroesFor.visitor (package:flutter/src/widgets/heroes.dart:305:23)\n#3      MultiChildRenderObjectElement.visitChildren (package:flutter/src/widgets/framework.dart:5929:16)\n#4      Hero._allHeroesFor.visitor (package:flutter/src/widgets/heroes.dart:309:15)\n...\n\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550",
                "createdAt": "2020-03-27T02:31:52Z"
            },
            {
                "author": "goderbauer",
                "bodyText": "@chunhtai can you reproduce this with the additional steps?",
                "createdAt": "2020-03-27T17:28:47Z"
            },
            {
                "author": "justinmc",
                "bodyText": "I got a crash when I followed those steps on the iOS simulator, and I confirmed that this PR fixes it.",
                "createdAt": "2020-03-27T18:05:28Z"
            },
            {
                "author": "chunhtai",
                "bodyText": "I see, yes i can reproduce it now. Can you open a new issue about this? It is fixing a different problem from  #28042",
                "createdAt": "2020-03-27T19:12:05Z"
            },
            {
                "author": "najeira",
                "bodyText": "Thanks for the review!\nI'm not good at English. I'm not sure how to fix any documentation issues.\nI will check and respond to issues regarding the implementation.",
                "createdAt": "2020-03-28T01:01:59Z"
            },
            {
                "author": "justinmc",
                "bodyText": "@najeira How's it going with these last few comments?  Let me know if anything isn't clear about the documentation and I can help out by writing the English.",
                "createdAt": "2020-04-10T21:30:00Z"
            },
            {
                "author": "najeira",
                "bodyText": "updated comments",
                "createdAt": "2020-04-27T05:45:52Z"
            },
            {
                "author": "najeira",
                "bodyText": "@chunhtai Try reloading.\nThen you can see this:",
                "createdAt": "2020-04-28T01:32:27Z"
            },
            {
                "author": "chunhtai",
                "bodyText": "@chunhtai Try reloading.\nThen you can see this:\n\n\nWe were discussing about using ProxyWidget instead of StatelessWidget",
                "createdAt": "2020-05-01T22:32:14Z"
            },
            {
                "author": "najeira",
                "bodyText": "Sorry for late. I will update it!",
                "createdAt": "2020-05-25T02:54:33Z"
            },
            {
                "author": "filipproch",
                "bodyText": "Hi @najeira , are you still working on this? I am interested in this functionality",
                "createdAt": "2020-08-22T08:02:03Z"
            },
            {
                "author": "najeira",
                "bodyText": "Sorry, I have no time to update now.\nIs ProxyWidget is suitable as a parent of HeroMode? In Flutter, there are few widgets having ProxyWidget as a parent. Similar TickerMode have StatelessWidget as their parent.\nOr is InheritedWidget appropriate for parent?\n@chunhtai",
                "createdAt": "2020-08-22T09:18:53Z"
            },
            {
                "author": "najeira",
                "bodyText": "I updated HeroMode to extends InheritedWidget.",
                "createdAt": "2020-09-15T08:03:16Z"
            },
            {
                "author": "najeira",
                "bodyText": "Could anybody show me an example using ProxyWidget and ProxyElement?",
                "createdAt": "2020-10-02T15:29:35Z"
            },
            {
                "author": "chunhtai",
                "bodyText": "Could anybody show me an example using ProxyWidget and ProxyElement?\n\nThe ProxyElement is for inheritedElement that it implement extra logic",
                "createdAt": "2020-10-02T16:22:20Z"
            },
            {
                "author": "najeira",
                "bodyText": "Could anybody show me an example using ProxyWidget and ComponentElement?",
                "createdAt": "2020-10-03T03:40:06Z"
            },
            {
                "author": "najeira",
                "bodyText": "Is Widget build(BuildContext context) => child; a heavy process to avoid?",
                "createdAt": "2020-10-03T03:42:12Z"
            },
            {
                "author": "najeira",
                "bodyText": "In my understanding, implementing HeroModeElement skips the call HeroMode.build.\nextends StatelessWidget:\n\nStatelessElement.build\nHeroMode.build\nreturned child widget is used\n\nextends ProxyWidget and impelement HeroModeElement:\n\nHeroModeElement.build\nreturned child widget is used\n\nIs this all? Please let me know if there are any other processes that affect performance.",
                "createdAt": "2020-10-03T03:51:46Z"
            },
            {
                "author": "chunhtai",
                "bodyText": "In my understanding, implementing HeroModeElement skips the call HeroMode.build.\nextends StatelessWidget:\n\nStatelessElement.build\nHeroMode.build\nreturned child widget is used\n\nextends ProxyWidget and impelement HeroModeElement:\n\nHeroModeElement.build\nreturned child widget is used\n\nIs this all? Please let me know if there are any other processes that affect performance.\n\nyes that is all as far as I know\n\nIs Widget build(BuildContext context) => child; a heavy process to avoid?\n\nIt is not a heavy process, but we can improve it by implementing the HeroModeElement which is not too much work.",
                "createdAt": "2020-10-05T16:19:14Z"
            },
            {
                "author": "najeira",
                "bodyText": "Widget build(BuildContext context) => child; is very very small task,  it is hard to find even in performance measurement. It does not allocate any widgets, just returns variable. I think that implementing the HeroModeElement is too much work to avoid its micro task. I'd rather keep the code simple than avoid performance issues that are too small to find.\nIf we should optimize it, it is better to do it in another PR together with the following classes:\n\nNotificationListener\nKeyedSubtree\nPageStorage\nPreferredSize\n\nThese widgets inherit StatelessWidget and do Widget build(BuildContext context) => child;, not inherit ProxyWidget. They are the same as this case.\nAdditionally: what do you think of this comment?\n\nStatelessElement uses Element._dirty, HeroModeElement can not use the variable because it class is in the outside. And it is not good to implement HeroModeElement in widgets/framework.dart.\n\n\nI want you to comment on which is preferable.\nCC: @justinmc @goderbauer",
                "createdAt": "2020-10-06T02:31:50Z"
            },
            {
                "author": "najeira",
                "bodyText": "diff: najeira/flutter@70815c7...a76023b",
                "createdAt": "2020-10-12T03:26:42Z"
            },
            {
                "author": "chunhtai",
                "bodyText": "@najeira it seems like this branch is outdated, can you try to rebase off latest master and see if you can fix the cirrus?",
                "createdAt": "2020-10-12T16:31:12Z"
            },
            {
                "author": "najeira",
                "bodyText": "I rebased this branch.",
                "createdAt": "2020-10-28T01:44:39Z"
            },
            {
                "author": "chunhtai",
                "bodyText": "@najeira\nI am not sure what is going on with the presubmit, but we have some infra change in the last couple of days. Can you rebase off the latest master again and see if it makes cirrus happy?",
                "createdAt": "2020-10-30T19:09:56Z"
            },
            {
                "author": "najeira",
                "bodyText": "I am very grateful for the long discussions and for helping me with my poor English. Thank you all.",
                "createdAt": "2020-11-01T11:31:31Z"
            },
            {
                "author": "justinmc",
                "bodyText": "Just saw that this was merged, thank you @najeira!",
                "createdAt": "2020-11-02T16:18:21Z"
            }
        ],
        "commentCount": 32
    },
    {
        "number": 29809,
        "title": "Fix text selection toolbar appearing under obstructions",
        "author": "yaheng",
        "state": "MERGED",
        "closedAt": "2019-05-06T18:18:10Z",
        "createdAt": "2019-03-22T18:38:37Z",
        "comments": [
            {
                "author": "googlebot",
                "bodyText": "Thanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\ud83d\udcdd Please visit https://cla.developers.google.com/ to sign.\nOnce you've signed (or fixed any issues), please reply here (e.g. I signed it!) and we'll verify it.\n\nWhat to do if you already signed the CLA\nIndividual signers\n\nIt's possible we don't have your GitHub username or you're using a different email address on your commit. Check your existing CLA data and verify that your email is set on your git commits.\n\nCorporate signers\n\nYour company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the Google project maintainer to go/cla#troubleshoot (Public version).\nThe email used to register you as an authorized contributor must be the email used for the Git commit. Check your existing CLA data and verify that your email is set on your git commits.\nThe email used to register you as an authorized contributor must also be attached to your GitHub account.\n\n\u2139\ufe0f Googlers: Go here for more info.",
                "createdAt": "2019-03-22T18:38:40Z"
            },
            {
                "author": "xster",
                "bodyText": "@justinmc could you take a first pass at this?",
                "createdAt": "2019-04-08T19:48:24Z"
            },
            {
                "author": "googlebot",
                "bodyText": "CLAs look good, thanks!\n\u2139\ufe0f Googlers: Go here for more info.",
                "createdAt": "2019-04-09T04:31:59Z"
            },
            {
                "author": "justinmc",
                "bodyText": "@jiisd Check out the failures under the \"analyze\" check when you get a chance.  There are some small linter failures to fix.",
                "createdAt": "2019-04-09T15:20:00Z"
            },
            {
                "author": "jiisd",
                "bodyText": "@jiisd Check out the failures under the \"analyze\" check when you get a chance. There are some small linter failures to fix.\n\n\ud83d\ude42 already fixed.",
                "createdAt": "2019-04-09T16:43:15Z"
            },
            {
                "author": "justinmc",
                "bodyText": "Thank you!\nOne more thing that I forgot to mention, sorry.  This will definitely need tests.\nThere are similar tests for the selection menu in https://github.com/flutter/flutter/blob/master/packages/flutter/test/material/text_field_test.dart#L887.  You can reuse some of that code to get the selection menu to appear in your test.  Then get its location with something like tester.getTopLeft(find.text('SELECT ALL')) and expect it to be above the TextField when it's not near the top of the screen and below the TextField when it is near the top of the screen.",
                "createdAt": "2019-04-09T17:27:17Z"
            },
            {
                "author": "matthew-carroll",
                "bodyText": "CC @xster @LongCatIsLooong we should check the native iOS behavior, and then pull down this branch and compare.",
                "createdAt": "2019-04-09T21:58:54Z"
            },
            {
                "author": "jiisd",
                "bodyText": "Thank you!\nOne more thing that I forgot to mention, sorry. This will definitely need tests.\nThere are similar tests for the selection menu in https://github.com/flutter/flutter/blob/master/packages/flutter/test/material/text_field_test.dart#L887. You can reuse some of that code to get the selection menu to appear in your test. Then get its location with something like tester.getTopLeft(find.text('SELECT ALL')) and expect it to be above the TextField when it's not near the top of the screen and below the TextField when it is near the top of the screen.\n\nThanks for your reminder!\nThe corresponding regression test logic has been added(this commit).\n\n\u279c  flutter git:(fix/issues_29808) \u2717 flutter test /Users/yaheng/.flutter_lib/packages/flutter/test/material/text_field_test.dart\n00:10 +130: All tests passed!",
                "createdAt": "2019-04-10T13:06:29Z"
            },
            {
                "author": "justinmc",
                "bodyText": "@jiisd The test looks good, thanks.  I confirmed that it fails without this fix.\nHow do you feel about increasing the distance from the input to the menu in Android so that the selection handles are visible?  It looks like native Android positions the menu so that the handles are visible.\nAndroid (native):\n\niOS looks fine I think, except problems unrelated to this PR like the position of the arrow.\niOS (native):\n\niOS (Flutter, this branch):",
                "createdAt": "2019-04-10T16:52:32Z"
            },
            {
                "author": "jiisd",
                "bodyText": "@justinmc Yep, on android, I think your idea of increasing distance is very appropriate and can make the user experience better.\nOn iOS, I have tried to make the arrow to adjust the left and right position dynamically before, but I haven't found an elegant solution. If I progress, I will submit the relevant PR again.",
                "createdAt": "2019-04-10T17:36:37Z"
            },
            {
                "author": "justinmc",
                "bodyText": "Thanks.  This is the issue about the arrow position FYI: #22576",
                "createdAt": "2019-04-10T17:45:15Z"
            },
            {
                "author": "xster",
                "bodyText": "The iOS arrow can be done in a separate PR (if you'd like to keep sending us PR :D)\nIt's tracked in #11274",
                "createdAt": "2019-04-10T22:37:28Z"
            },
            {
                "author": "jiisd",
                "bodyText": "How do you feel about increasing the distance from the input to the menu in Android so that the selection handles are visible? It looks like native Android positions the menu so that the handles are visible.\n\n@justinmc  This problem has been solved.\nAndroid (Flutter, this branch):",
                "createdAt": "2019-04-11T17:46:25Z"
            },
            {
                "author": "justinmc",
                "bodyText": "Thanks, the position looks good now!",
                "createdAt": "2019-04-11T22:04:36Z"
            },
            {
                "author": "justinmc",
                "bodyText": "Someone just opened a related issue: #31238\nWill this PR handle the menu overlapping the app bar?",
                "createdAt": "2019-04-18T16:26:55Z"
            },
            {
                "author": "jiisd",
                "bodyText": "@justinmc\nUnfortunately, our latest solution using dynamic computing is not yet effective in solving this problem, because I don't know how to get the display state of the top navigation bar and its height inside the input box.\nBut using the first way 3af06dd , which is comparing the input box to the top of the screen is less than a certain constant, can help to temporarily circumvent this problem.",
                "createdAt": "2019-04-20T16:57:43Z"
            },
            {
                "author": "jiisd",
                "bodyText": "@xster Thanks!\n[Breaking Change] The public interface of the abstract class TextSelectionControls\nDescription\nWhen repairing the problem of #29808, it found that the interface is no longer sufficient. In order to get a more accurate anchor point for the toolbar, some parameters are added to the relevant interface. You can get more details form #29809.\nThe path of the change class lib/src/widgets/text_selection.dart line:90.\nPrevious interface definition:\n  /// Builds a toolbar near a text selection.\n  ///\n  /// Typically displays buttons for copying and pasting text.\n  Widget buildToolbar(BuildContext context, Rect globalEditableRegion, Offset position, TextSelectionDelegate delegate);\n\nCurrent interface definition:\n  /// Builds a toolbar near a text selection.\n  ///\n  /// Typically displays buttons for copying and pasting text.\n  ///\n  /// [globalEditableRegion] is the TextField size of the global coordinate system\n  /// in logical pixels.\n  ///\n  /// The [position] is a general calculation midpoint parameter of the toolbar.\n  /// If you want more detailed position information, can use [endpoints]\n  /// to calculate it.\n  Widget buildToolbar(\n    BuildContext context,\n    Rect globalEditableRegion,\n    Offset position,\n    List<TextSelectionPoint> endpoints,\n    TextSelectionDelegate delegate,\n  );\nHow to update\nIf you have already used this interface, you should update it to the latest version and add the endpoints parameter.\nWe keep the position parameter because we think it's probably already used in subclasses.",
                "createdAt": "2019-04-30T11:41:35Z"
            },
            {
                "author": "justinmc",
                "bodyText": "@xster Any idea on the test failure? It seems unrelated. Something about gradle.",
                "createdAt": "2019-04-30T17:02:33Z"
            },
            {
                "author": "justinmc",
                "bodyText": "The failure went green after a rerun. I think this is ready to merge.",
                "createdAt": "2019-05-01T22:21:13Z"
            },
            {
                "author": "xster",
                "bodyText": "Yup, LGTM\nI copy edited the message a bit. @jiisd if you're ok with the edit, I'll send it out and give the community a day to give feedback. Thanks again for the fix.\n[Breaking Change] TextSelectionControls.buildToolbar signature adds another 'endpoint' argument\nIf you don't implement your own TextSelectionControls subclass, you can stop reading.\nDescription\nWhile fixing the problem of #29808, it was found that the TextSelectionControls.buildToolbar interface is no longer sufficient to adequately replicate the native behavior. In order to get a more accurate anchor point for the text selection toolbar, the selection's start and end positions are added to the function signature. You can get more details form #29809.\nIn lib/src/widgets/text_selection.dart:\nPrevious interface definition\n  /// Builds a toolbar near a text selection.\n  ///\n  /// Typically displays buttons for copying and pasting text.\n  Widget buildToolbar(\n    BuildContext context, \n    Rect globalEditableRegion, \n    Offset position, \n    TextSelectionDelegate delegate,\n  );\nbecomes\n  /// Builds a toolbar near a text selection.\n  ///\n  /// Typically displays buttons for copying and pasting text.\n  ///\n  /// [globalEditableRegion] is the TextField size of the global coordinate system\n  /// in logical pixels.\n  ///\n  /// The [position] is a general calculation midpoint parameter of the toolbar.\n  /// If you want more detailed position information, can use [endpoints]\n  /// to calculate it.\n  Widget buildToolbar(\n    BuildContext context,\n    Rect globalEditableRegion,\n    Offset position,\n    List<TextSelectionPoint> endpoints,\n    TextSelectionDelegate delegate,\n  );\nSpecifically List<TextSelectionPoint> endpoints was added.\nHow to update\nIf you currently implement this interface, you should update its signature to the latest version and add the endpoints parameter.\nFor backward compatibility, the position parameter (which is the midpoint between the 2 endpoint positions) was preserved.",
                "createdAt": "2019-05-01T22:35:09Z"
            },
            {
                "author": "jiisd",
                "bodyText": "@xster  Awesome thanks!",
                "createdAt": "2019-05-02T00:38:13Z"
            },
            {
                "author": "xster",
                "bodyText": "Actually on second thought, I sent you an invite to join our flutter-announce google group (to your 163.com). You can send the breaking change announcement yourself once you accept the invitation.",
                "createdAt": "2019-05-02T00:45:51Z"
            },
            {
                "author": "jiisd",
                "bodyText": "@xster The email from 163.com was rejected. Can you invite another account(gmail.com)?\nThanks!",
                "createdAt": "2019-05-02T05:49:13Z"
            },
            {
                "author": "xster",
                "bodyText": "Thanks, sent",
                "createdAt": "2019-05-02T06:01:23Z"
            },
            {
                "author": "jiisd",
                "bodyText": "Still failing, is the target email address of flutter-announce@googlegroups.com incorrectly?",
                "createdAt": "2019-05-02T06:20:34Z"
            },
            {
                "author": "xster",
                "bodyText": "Sorry, one of the permission settings wasn't set correctly. Your gmail address should have posting rights now.",
                "createdAt": "2019-05-02T06:26:08Z"
            },
            {
                "author": "jiisd",
                "bodyText": "It works!\nThanks.",
                "createdAt": "2019-05-02T06:34:03Z"
            },
            {
                "author": "dkwingsmt",
                "bodyText": "Since we\u2019re breaking the API, is it better to make parameters into a Details object (as in here) so that we can add more information in the future without breaking the code again and without having too many parameters?",
                "createdAt": "2019-05-02T16:53:07Z"
            },
            {
                "author": "xster",
                "bodyText": "I think it's mostly ok. The gesture events is a highly public API used by callback implementers everywhere.\nSince we might change the arguments in any signature in the future, the argument can be generally applied to all functions having a single data class as argument so it's non-breaking-modifiable :D\nSo we'd have to draw the line somewhere and for subclass overrides, I think it's ok.",
                "createdAt": "2019-05-03T18:50:27Z"
            },
            {
                "author": "justinmc",
                "bodyText": "Thanks so much for fixing this @jiisd!",
                "createdAt": "2019-05-06T18:36:03Z"
            },
            {
                "author": "FrankYan09",
                "bodyText": "we use Flutter 1.7.8+hotfix.4, still have this issue.",
                "createdAt": "2019-08-02T17:37:23Z"
            },
            {
                "author": "LongCatIsLooong",
                "bodyText": "@FrankYan09 could you create a new issue here https://github.com/flutter/flutter/issues/new/choose, preferably with screenshots and code to reproduce the issue so we would be able to identify the problem quickly?",
                "createdAt": "2019-08-02T17:53:26Z"
            }
        ],
        "commentCount": 32
    },
    {
        "number": 5295,
        "title": "Update Dart SDK to `1.19.0-dev.4.0`.",
        "author": "Phil Quitslund",
        "state": "CLOSED",
        "closedAt": "2016-08-10T23:00:14Z",
        "createdAt": "2016-08-08T22:32:35Z",
        "comments": [
            {
                "author": "abarth",
                "bodyText": "",
                "createdAt": "2016-08-08T22:45:26Z"
            },
            {
                "author": "abarth",
                "bodyText": "/home/travis/build/flutter/flutter/bin/cache/dart-sdk/bin/dart: /lib/x86_64-linux-gnu/libc.so.6: version GLIBC_2.16' not found (required by /home/travis/build/flutter/flutter/bin/cache/dart-sdk/bin/dart)`",
                "createdAt": "2016-08-08T22:45:56Z"
            },
            {
                "author": "abarth",
                "bodyText": "Looks like this version of dart requires a GLIBC that Travis doesn't have.",
                "createdAt": "2016-08-08T22:46:20Z"
            },
            {
                "author": "pq",
                "bodyText": "Yeah.  I'm tracking this down.  The dev compiler folks hit the same snag...",
                "createdAt": "2016-08-08T22:58:31Z"
            },
            {
                "author": "abarth",
                "bodyText": "Before landing this patch, we should make sure we understand the new OS requirements being introduced and update our documentation to reflect it.",
                "createdAt": "2016-08-08T23:07:22Z"
            },
            {
                "author": "pq",
                "bodyText": "Some details on the trusty build env: https://docs.travis-ci.com/user/trusty-ci-environment.\nLooking into other considerations...",
                "createdAt": "2016-08-08T23:23:55Z"
            },
            {
                "author": "Hixie",
                "bodyText": "Requiring sudo has implications that I think we tried to get out of before. Does \"trusty\" not work without it?",
                "createdAt": "2016-08-08T23:27:14Z"
            },
            {
                "author": "pq",
                "bodyText": "I believe sudo is required...  Maybe @whesse knows more?",
                "createdAt": "2016-08-08T23:29:34Z"
            },
            {
                "author": "abarth",
                "bodyText": "I don't think we need to require sudo.",
                "createdAt": "2016-08-08T23:38:13Z"
            },
            {
                "author": "pq",
                "bodyText": "I don't think we need to require sudo.\n\nI'm pretty sure that this build failed when I didn't have it set.\nhttps://travis-ci.org/flutter/flutter/builds/150783951\nHappy to roll it back and try again?",
                "createdAt": "2016-08-08T23:43:18Z"
            },
            {
                "author": "abarth",
                "bodyText": "I would expect that error to be generated when not using trusty rather than when not using sudo.",
                "createdAt": "2016-08-09T00:00:23Z"
            },
            {
                "author": "abarth",
                "bodyText": "I see. https://docs.travis-ci.com/user/trusty-ci-environment/\nThe trusty environment requires containers.",
                "createdAt": "2016-08-09T00:01:25Z"
            },
            {
                "author": "abarth",
                "bodyText": "Sorry.  requires sudo.",
                "createdAt": "2016-08-09T00:01:40Z"
            },
            {
                "author": "pq",
                "bodyText": "Yeah.  Unfortunate.  Now the question is whether there's any other alternative.  I'll do some more poking around.",
                "createdAt": "2016-08-09T00:03:24Z"
            },
            {
                "author": "abarth",
                "bodyText": "I'm not sure we want to require Trusty to use Flutter.  For example, requiring trusty prevents our customers from using a production Travis environment (Trusty support in Travis is in beta).  Our customers also lose support for Containers in Travis, which is recommend by Travis for reducing cycle times and unlocks several useful features in Travis that they use as carrots to get folks onto Containers.",
                "createdAt": "2016-08-09T00:07:23Z"
            },
            {
                "author": "eseidelGoogle",
                "bodyText": "Is this libc dependency change due to the borringssl role by chance? @zanderso",
                "createdAt": "2016-08-09T01:23:46Z"
            },
            {
                "author": "abarth",
                "bodyText": "There shouldn't be any connection between using C++11 features and which libc ABI you use.  For example, we use C++11 in sky_snapshot but it runs on old versions of Ubuntu.",
                "createdAt": "2016-08-09T02:03:42Z"
            },
            {
                "author": "zanderso",
                "bodyText": "Yes, this is due to the BoringSSL roll. Our SDK builders are now using trusty.",
                "createdAt": "2016-08-09T02:12:12Z"
            },
            {
                "author": "abarth",
                "bodyText": "Looks like we build sky_snapshot on 14.04 but we're still able to run it on pre-trusty.",
                "createdAt": "2016-08-09T02:15:09Z"
            },
            {
                "author": "whesse",
                "bodyText": "Dart can be built on earlier versions of linux, and/or with earlier glibc\nversions.  The sdk we are building and releasing uses trusty because that\nis the first release including a gcc with C++11.  It requires glibc 2.16\nbecause the libc on trusty is 2.19, and the linker ends up using some 2.16\nfunctions.\nAnyone can build differently, using a sysroot or other Linux\ndistribution, and get the libc version requirement to 2.11 or less again.\nClank builds also solve the C++11 problem.\nSince flutter does its own builds, I don't think it affects our\ndistribution of the prebuilt SDK built on trusty, does it?\nThe C++11 requirement does come from BoringSSL, but we may also start using\nit in Dart VM code.\nOn Aug 9, 2016 04:15, \"Adam Barth\" notifications@github.com wrote:\n\nLooks like we build sky_snapshot on 14.04 but we're still able to run it\non pre-trusty.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\n#5295 (comment), or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AErap7iEHB0R68glkBn-gsS52r4hWbj0ks5qd-K3gaJpZM4Jfiww\n.",
                "createdAt": "2016-08-09T08:05:52Z"
            },
            {
                "author": "a14n",
                "bodyText": "See travis-ci/travis-ci#6415\nYou can not use Trusty on container based jobs until travis-ci/travis-ci#5695 is fixed. Regarding https://docs.travis-ci.com/user/ci-environment#Virtualization-environments the main drawback of the current Trusty support is the boot time that will be larger (there's also an issue with content_shell but flutter doesn't matter).",
                "createdAt": "2016-08-09T13:16:22Z"
            },
            {
                "author": "zanderso",
                "bodyText": "@whesse If we build the SDK on trusty using clang instead of gcc, would that also require the newer glibc?",
                "createdAt": "2016-08-09T14:45:56Z"
            },
            {
                "author": "whesse",
                "bodyText": "Nothing requires the glibc, just if you compile using it (which is 2.19),\nyou get a linker requirement for 2.16 in the resulting executable.  You\nneed to specify a different glibc to link with, which I think is easiest\nwith a sysroot.  Or if you compile on precise, it only has 2.15, and you\nend up with a executable requiring only 2.11.  So clang is only better\nbecause clang works in precise, which has 2.15.\nOn Tue, Aug 9, 2016 at 4:46 PM, Zachary Anderson notifications@github.com\nwrote:\n\n@whesse https://github.com/whesse If we build the SDK on trusty using\nclang instead of gcc, would that also require the newer glibc?\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\n#5295 (comment), or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AErap-cyjkP2Ec0REh0het9r42eOo8i4ks5qeJKugaJpZM4Jfiww\n.\n\n\nWilliam Hesse",
                "createdAt": "2016-08-09T15:00:33Z"
            },
            {
                "author": "zanderso",
                "bodyText": "Sorry, I was trying to ask if the clang we pull down uses the system sysroot, or its own sysroot. That is, would a binary built with the clang we pull down also ask for glibc 2.16.",
                "createdAt": "2016-08-09T15:03:52Z"
            },
            {
                "author": "whesse",
                "bodyText": "Probably.  Run ldd -v dart\non the dart executable, and it shows the libc version requirements.\nThe CLANG settiings, which should be all you need, are\nCC: third_party/clang/linux/bin/clang\nCC_host: third_party/clang/linux/bin/clang\nCHROME_HEADLESS: 1\nCPLUS_INCLUDE_PATH: third_party/clang/linux/lib/clang/3.4/include/\nCXX: third_party/clang/linux/bin/clang++ -fsanitize=address -fPIC\nCXX_host: third_party/clang/linux/bin/clang++\nC_INCLUDE_PATH: third_party/clang/linux/lib/clang/3.4/include/\nOn Tue, Aug 9, 2016 at 5:04 PM, Zachary Anderson notifications@github.com\nwrote:\n\nSorry, I was trying to ask if the clang we pull down uses the system\nsysroot, or its own sysroot. That is, would a binary built with the clang\nwe pull down also ask for glibc 2.16.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\n#5295 (comment), or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AErap_v02cXNkwmzhdsEyEAugtWtPW7eks5qeJbjgaJpZM4Jfiww\n.\n\n\nWilliam Hesse",
                "createdAt": "2016-08-09T15:08:04Z"
            },
            {
                "author": "abarth",
                "bodyText": "Since flutter does its own builds, I don't think it affects our distribution of the prebuilt SDK built on trusty, does it?\n\nFlutter uses the dart-sdk distributed by the Dart team in our end-developer workflow.  We use it to execute Dart code on the host system (e.g., the flutter command line tool and pub).  If we upgrade to this version of the dart-sdk, our end-developers will no longer be able to use older versions of Ubuntu.",
                "createdAt": "2016-08-09T15:51:51Z"
            },
            {
                "author": "whesse",
                "bodyText": "We can change our builders to build a dart sdk that doesn't require glibc\n2.16.  I've had the contingency plan that we can change our SDK builders to\nuse a sysroot, and compile against an earlier glibc, if major customers\nrequired it.  It sounds like that is what you (and perhaps other customers)\nwant, so I'll plan to make this change tomorrow, and get out a new dev\nversion 1.19.0-dev.5.0 that should work for you.  I'll send out an email to\ndart-core-dev proposing that.\nOn Tue, Aug 9, 2016 at 5:52 PM, Adam Barth notifications@github.com wrote:\n\nSince flutter does its own builds, I don't think it affects our\ndistribution of the prebuilt SDK built on trusty, does it?\nFlutter uses the dart-sdk distributed by the Dart team in our\nend-developer workflow. We use it to execute Dart code on the host system\n(e.g., the flutter command line tool and pub). If we upgrade to this\nversion of the dart-sdk, our end-developers will no longer be able to use\nolder versions of Ubuntu.\n\u2014\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub\n#5295 (comment), or mute\nthe thread\nhttps://github.com/notifications/unsubscribe-auth/AErap8F5e5o3R8XbqbQ4JHVQeUSvwTgRks5qeKIhgaJpZM4Jfiww\n.\n\n\nWilliam Hesse",
                "createdAt": "2016-08-09T15:56:46Z"
            },
            {
                "author": "abarth",
                "bodyText": "Thanks so much!",
                "createdAt": "2016-08-09T15:57:48Z"
            },
            {
                "author": "pq",
                "bodyText": "Yay.  Thanks Bill!",
                "createdAt": "2016-08-09T16:08:56Z"
            },
            {
                "author": "pq",
                "bodyText": "Regarding this PR, I'll hold off on landing it in favor of one integrating 1.19.0-dev.5.0 when it's cooked.",
                "createdAt": "2016-08-09T16:27:17Z"
            },
            {
                "author": "mit-mit",
                "bodyText": "We have a fix for this, and @whesse is creating a new dev build.",
                "createdAt": "2016-08-10T17:15:27Z"
            },
            {
                "author": "pq",
                "bodyText": "Closing in favor of 1.19.0-dev.5.0: #5329",
                "createdAt": "2016-08-10T23:00:14Z"
            }
        ],
        "commentCount": 32
    },
    {
        "number": 112149,
        "title": "Revert file naming convention of .aar files to support fuzzy matching in build.gradle",
        "author": "\u6797\u519b\u534e",
        "state": "MERGED",
        "closedAt": "2022-10-04T03:37:23Z",
        "createdAt": "2022-09-22T06:40:23Z",
        "comments": [
            {
                "author": "JunhuaLin",
                "bodyText": "build result:",
                "createdAt": "2022-09-22T07:41:53Z"
            },
            {
                "author": "JunhuaLin",
                "bodyText": "",
                "createdAt": "2022-09-22T07:42:55Z"
            },
            {
                "author": "Jasguerrero",
                "bodyText": "Could you take a look? @GaryQian",
                "createdAt": "2022-09-22T20:27:23Z"
            },
            {
                "author": "JunhuaLin",
                "bodyText": "Could you take a look? @GaryQian",
                "createdAt": "2022-09-24T09:10:15Z"
            },
            {
                "author": "JunhuaLin",
                "bodyText": "This PR seems to be missing some of the testing code removed in the original PR. Can you make sure this PR fully reverts the original PR? Tests that have comments \"mimic the AGP plugin\" seem to be missing. Things like the JDK bump can stay unless it causes incompatibility issues. This way we have more guarantees we are not introducing new bugs.\n\nThis PR is not intended to restore all the original PR1 changes\nThis PR modifies the use of Maven-Publish to produce the correct AAR based on #101276\nThe Maven-Publish  part of the code has been tested in #101276\nThis PR ensures that the code is correct without having to adjust the Maven-Publish-related test code",
                "createdAt": "2022-09-25T12:59:40Z"
            },
            {
                "author": "JunhuaLin",
                "bodyText": "This PR seems to be missing some of the testing code removed in the original PR. Can you make sure this PR fully reverts the original PR? Tests that have comments \"mimic the AGP plugin\" seem to be missing. Things like the JDK bump can stay unless it causes incompatibility issues. This way we have more guarantees we are not introducing new bugs.\n\nThe JDK version configuration in the CI file is not concerned, the latest flutter:master branch has been adjusted",
                "createdAt": "2022-09-27T02:26:38Z"
            },
            {
                "author": "JunhuaLin",
                "bodyText": "@GaryQian\nWhen can this PR be merged to the master branch\uff1f",
                "createdAt": "2022-09-27T06:26:34Z"
            },
            {
                "author": "GaryQian",
                "bodyText": "This still needs one more review to be landable! I've tagged a few others.",
                "createdAt": "2022-09-27T06:54:10Z"
            },
            {
                "author": "JunhuaLin",
                "bodyText": "auto label is removed for flutter/flutter, pr: 112149, due to Validations Fail.\n\n\n\n\nThis still needs one more review to be landable! I've tagged a few others.\n\nThere seems to be a need for approving comments LGTM",
                "createdAt": "2022-09-27T07:26:37Z"
            },
            {
                "author": "JunhuaLin",
                "bodyText": "Could you take a look? @christopherfujino @stuartmorgan @camsim99",
                "createdAt": "2022-09-28T01:48:56Z"
            },
            {
                "author": "JunhuaLin",
                "bodyText": "Hope to deal with as soon as possible, affect the upgrade to the latest version\uff01\nWe don't want to stay at 3.0.5 for too long\uff01\nThis problem is holding up the build flutter.",
                "createdAt": "2022-09-28T07:10:24Z"
            },
            {
                "author": "christopherfujino",
                "bodyText": "@JunhuaLin it looks like you have a test failure, however:\n02:08 +13 -1: test\\integration.shard\\gradle_non_android_plugin_test.dart: Flutter app that depends on a non-Android plugin can still build for Android [E]\n  Expected: a file system entity that exists\n    Actual: LocalFile:<LocalFile: 'C:\\b\\s\\w\\ir\\x\\t\\flutter_flutter_plugin_test.5951ddc1\\ios_only\\example\\build\\app\\outputs\\apk\\release\\app-release.apk'>\n     Which: does not exist\n  \n  package:test_api                                                 expect\n  test\\integration.shard\\gradle_non_android_plugin_test.dart 90:5  main.<fn>\n  dart:async                                                       runZoned\n  test\\src\\common.dart 197:14                                      testWithoutContext.<fn>\n  test\\src\\common.dart 166:18                                      test.<fn>",
                "createdAt": "2022-09-28T16:54:13Z"
            },
            {
                "author": "JunhuaLin",
                "bodyText": "@JunhuaLin it looks like you have a test failure, however:\n02:08 +13 -1: test\\integration.shard\\gradle_non_android_plugin_test.dart: Flutter app that depends on a non-Android plugin can still build for Android [E]\n  Expected: a file system entity that exists\n    Actual: LocalFile:<LocalFile: 'C:\\b\\s\\w\\ir\\x\\t\\flutter_flutter_plugin_test.5951ddc1\\ios_only\\example\\build\\app\\outputs\\apk\\release\\app-release.apk'>\n     Which: does not exist\n  \n  package:test_api                                                 expect\n  test\\integration.shard\\gradle_non_android_plugin_test.dart 90:5  main.<fn>\n  dart:async                                                       runZoned\n  test\\src\\common.dart 197:14                                      testWithoutContext.<fn>\n  test\\src\\common.dart 166:18                                      test.<fn>\n\n\nThis test failure has nothing to do with my PR\nLet me merge the flutter:master code again",
                "createdAt": "2022-09-29T03:09:33Z"
            },
            {
                "author": "JunhuaLin",
                "bodyText": "Should I not merge the master code\uff1f\nShould I just keep my commit\uff1f",
                "createdAt": "2022-09-29T03:14:28Z"
            },
            {
                "author": "JunhuaLin",
                "bodyText": "Now\uff0cit\u2018s fine~\n@christopherfujino @GaryQian",
                "createdAt": "2022-09-29T03:46:09Z"
            },
            {
                "author": "AesSedai101",
                "bodyText": "this change is going to cause add to app modules with multiple native dependencies to fail because of how gradle 7 does dependency resolution. Please test that case as well",
                "createdAt": "2022-09-29T07:03:24Z"
            },
            {
                "author": "JunhuaLin",
                "bodyText": "this change is going to cause add to app modules with multiple native dependencies to fail because of how gradle 7 does dependency resolution. Please test that case as well\n\nCan you give a detailed description demo\uff1f\nOR\nDoes this mean that there are multiple flutter plugin dependencies?\nthis case\uff1ait's ok\nmodule dependency\uff1a\napp --> module_test --> flutterboost\n                 |\n                  --> shared_preferences_android\n\nbuild aar file tree:\n\nflutter build aar --no-debug --no-profile --build-number 1.0.0\n\n\u2514\u2500\u2500 host\n    \u2514\u2500\u2500 outputs\n        \u2514\u2500\u2500 repo\n            \u251c\u2500\u2500 com\n            \u2502\u00a0\u00a0 \u251c\u2500\u2500 example\n            \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 module_test\n            \u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 flutter_release\n            \u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u251c\u2500\u2500 1.0.0\n            \u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_release-1.0.0.aar\n            \u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_release-1.0.0.aar.md5\n            \u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_release-1.0.0.aar.sha1\n            \u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_release-1.0.0.aar.sha256\n            \u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_release-1.0.0.aar.sha512\n            \u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_release-1.0.0.module\n            \u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_release-1.0.0.module.md5\n            \u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_release-1.0.0.module.sha1\n            \u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_release-1.0.0.module.sha256\n            \u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_release-1.0.0.module.sha512\n            \u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_release-1.0.0.pom\n            \u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_release-1.0.0.pom.md5\n            \u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_release-1.0.0.pom.sha1\n            \u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_release-1.0.0.pom.sha256\n            \u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u2514\u2500\u2500 flutter_release-1.0.0.pom.sha512\n            \u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u251c\u2500\u2500 maven-metadata.xml\n            \u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u251c\u2500\u2500 maven-metadata.xml.md5\n            \u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u251c\u2500\u2500 maven-metadata.xml.sha1\n            \u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u251c\u2500\u2500 maven-metadata.xml.sha256\n            \u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u2514\u2500\u2500 maven-metadata.xml.sha512\n            \u2502\u00a0\u00a0 \u2514\u2500\u2500 idlefish\n            \u2502\u00a0\u00a0     \u2514\u2500\u2500 flutterboost\n            \u2502\u00a0\u00a0         \u2514\u2500\u2500 flutter_boost_release\n            \u2502\u00a0\u00a0             \u251c\u2500\u2500 1.0.0\n            \u2502\u00a0\u00a0             \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_boost_release-1.0.0.aar\n            \u2502\u00a0\u00a0             \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_boost_release-1.0.0.aar.md5\n            \u2502\u00a0\u00a0             \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_boost_release-1.0.0.aar.sha1\n            \u2502\u00a0\u00a0             \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_boost_release-1.0.0.aar.sha256\n            \u2502\u00a0\u00a0             \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_boost_release-1.0.0.aar.sha512\n            \u2502\u00a0\u00a0             \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_boost_release-1.0.0.module\n            \u2502\u00a0\u00a0             \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_boost_release-1.0.0.module.md5\n            \u2502\u00a0\u00a0             \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_boost_release-1.0.0.module.sha1\n            \u2502\u00a0\u00a0             \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_boost_release-1.0.0.module.sha256\n            \u2502\u00a0\u00a0             \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_boost_release-1.0.0.module.sha512\n            \u2502\u00a0\u00a0             \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_boost_release-1.0.0.pom\n            \u2502\u00a0\u00a0             \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_boost_release-1.0.0.pom.md5\n            \u2502\u00a0\u00a0             \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_boost_release-1.0.0.pom.sha1\n            \u2502\u00a0\u00a0             \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_boost_release-1.0.0.pom.sha256\n            \u2502\u00a0\u00a0             \u2502\u00a0\u00a0 \u2514\u2500\u2500 flutter_boost_release-1.0.0.pom.sha512\n            \u2502\u00a0\u00a0             \u251c\u2500\u2500 maven-metadata.xml\n            \u2502\u00a0\u00a0             \u251c\u2500\u2500 maven-metadata.xml.md5\n            \u2502\u00a0\u00a0             \u251c\u2500\u2500 maven-metadata.xml.sha1\n            \u2502\u00a0\u00a0             \u251c\u2500\u2500 maven-metadata.xml.sha256\n            \u2502\u00a0\u00a0             \u2514\u2500\u2500 maven-metadata.xml.sha512\n            \u2514\u2500\u2500 io\n                \u2514\u2500\u2500 flutter\n                    \u2514\u2500\u2500 plugins\n                        \u2514\u2500\u2500 sharedpreferences\n                            \u2514\u2500\u2500 shared_preferences_android_release\n                                \u251c\u2500\u2500 1.0.0\n                                \u2502\u00a0\u00a0 \u251c\u2500\u2500 shared_preferences_android_release-1.0.0.aar\n                                \u2502\u00a0\u00a0 \u251c\u2500\u2500 shared_preferences_android_release-1.0.0.aar.md5\n                                \u2502\u00a0\u00a0 \u251c\u2500\u2500 shared_preferences_android_release-1.0.0.aar.sha1\n                                \u2502\u00a0\u00a0 \u251c\u2500\u2500 shared_preferences_android_release-1.0.0.aar.sha256\n                                \u2502\u00a0\u00a0 \u251c\u2500\u2500 shared_preferences_android_release-1.0.0.aar.sha512\n                                \u2502\u00a0\u00a0 \u251c\u2500\u2500 shared_preferences_android_release-1.0.0.module\n                                \u2502\u00a0\u00a0 \u251c\u2500\u2500 shared_preferences_android_release-1.0.0.module.md5\n                                \u2502\u00a0\u00a0 \u251c\u2500\u2500 shared_preferences_android_release-1.0.0.module.sha1\n                                \u2502\u00a0\u00a0 \u251c\u2500\u2500 shared_preferences_android_release-1.0.0.module.sha256\n                                \u2502\u00a0\u00a0 \u251c\u2500\u2500 shared_preferences_android_release-1.0.0.module.sha512\n                                \u2502\u00a0\u00a0 \u251c\u2500\u2500 shared_preferences_android_release-1.0.0.pom\n                                \u2502\u00a0\u00a0 \u251c\u2500\u2500 shared_preferences_android_release-1.0.0.pom.md5\n                                \u2502\u00a0\u00a0 \u251c\u2500\u2500 shared_preferences_android_release-1.0.0.pom.sha1\n                                \u2502\u00a0\u00a0 \u251c\u2500\u2500 shared_preferences_android_release-1.0.0.pom.sha256\n                                \u2502\u00a0\u00a0 \u2514\u2500\u2500 shared_preferences_android_release-1.0.0.pom.sha512\n                                \u251c\u2500\u2500 maven-metadata.xml\n                                \u251c\u2500\u2500 maven-metadata.xml.md5\n                                \u251c\u2500\u2500 maven-metadata.xml.sha1\n                                \u251c\u2500\u2500 maven-metadata.xml.sha256\n                                \u2514\u2500\u2500 maven-metadata.xml.sha512\n\n\npom dependencies:\nmodule_test pom file:\n<project ...>\n  <modelVersion>4.0.0</modelVersion>\n  <groupId>com.example.module_test</groupId>\n  <artifactId>flutter_release</artifactId>\n  <version>1.0.0</version>\n  <packaging>aar</packaging>\n\n  <dependencies>\n    <dependency>\n      <groupId>io.flutter</groupId>\n      <artifactId>flutter_embedding_release</artifactId>\n      <version>1.0.0-4b591e17d288447f118300754073c9f1d9a4393a</version>\n      <scope>compile</scope>\n    </dependency>\n  \n ......\n\n    <dependency>\n      <groupId>io.flutter.plugins.sharedpreferences</groupId>\n      <artifactId>shared_preferences_android_release</artifactId>\n      <version>1.0.0</version>\n      <scope>compile</scope>\n    </dependency>\n\n    <dependency>\n      <groupId>com.idlefish.flutterboost</groupId>\n      <artifactId>flutter_boost_release</artifactId>\n      <version>1.0.0</version>\n      <scope>compile</scope>\n    </dependency>\n  </dependencies>\n</project>\n\nflutterboost pom file:\n<project ...>\n  <modelVersion>4.0.0</modelVersion>\n  <groupId>com.idlefish.flutterboost</groupId>\n  <artifactId>flutter_boost_release</artifactId>\n  <version>1.0.0</version>\n  <packaging>aar</packaging>\n  <dependencies>\n    <dependency>\n      <groupId>io.flutter</groupId>\n      <artifactId>flutter_embedding_release</artifactId>\n      <version>1.0.0-4b591e17d288447f118300754073c9f1d9a4393a</version>\n      <scope>compile</scope>\n    </dependency>\n  </dependencies>\n</project>\n\nshared_preferences_android pom file:\n<project ...>\n  <modelVersion>4.0.0</modelVersion>\n  <groupId>io.flutter.plugins.sharedpreferences</groupId>\n  <artifactId>shared_preferences_android_release</artifactId>\n  <version>1.0.0</version>\n  <packaging>aar</packaging>\n  <dependencies>\n    <dependency>\n      <groupId>io.flutter</groupId>\n      <artifactId>flutter_embedding_release</artifactId>\n      <version>1.0.0-4b591e17d288447f118300754073c9f1d9a4393a</version>\n      <scope>compile</scope>\n    </dependency>\n  </dependencies>\n</project>\n\n\nThe dependencies in the POM are complete",
                "createdAt": "2022-09-29T08:47:17Z"
            },
            {
                "author": "AesSedai101",
                "bodyText": "If you have your add to app project depending on another plugin with a native dependency (in your case, flutterboost depending on shared_preferences) via the pubspec, the dependencies in the POM uses the new classifier mechanism.\nFor example., in my main add to app module, I use logging_to_logcat, which gets included like this:\n   <dependency>\n      <groupId>com.logger.logging_to_logcat</groupId>\n      <artifactId>logging_to_logcat</artifactId>\n      <version>1.0.0</version>\n      <scope>compile</scope>\n    </dependency>\n\nwith the -debug and -release classifiers mapping to the flavours.\nso, if you don't publish the artifacts in the new way with the classifiers, you will need to declare all Flutter dependencies with a native component manually in the gradle file of your native project.",
                "createdAt": "2022-09-29T10:01:50Z"
            },
            {
                "author": "JunhuaLin",
                "bodyText": "If you have your add to app project depending on another plugin with a native dependency (in your case, flutterboost depending on shared_preferences) via the pubspec, the dependencies in the POM uses the new classifier mechanism.\nFor example., in my main add to app module, I use logging_to_logcat, which gets included like this:\n   <dependency>\n      <groupId>com.logger.logging_to_logcat</groupId>\n      <artifactId>logging_to_logcat</artifactId>\n      <version>1.0.0</version>\n      <scope>compile</scope>\n    </dependency>\n\nwith the -debug and -release classifiers mapping to the flavours.\nso, if you don't publish the artifacts in the new way with the classifiers, you will need to declare all Flutter dependencies with a native component manually in the gradle file of your native project.\n\nI created the following dependency structure\uff1a\napp --> module_test --> flutterboost --> okhttp\n                             |\n                              --> logging_to_logcat\n\nflutterboost depending on logging_to_logcat and okhttp\nflutterboost  pubspec file:\nname: flutter_boost\ndescription: A next-generation Flutter-Native hybrid solution. FlutterBoost is a Flutter plugin which enables hybrid integration of Flutter for your existing native apps with minimum efforts.\nversion: 3.0.0\n\nhomepage: https://github.com/alibaba/flutter_boost\n\nenvironment:\n  sdk: '>=2.12.0 <3.0.0'\n\ndependencies:\n  flutter:\n    sdk: flutter\n  collection: ^1.16.0\n  logging_to_logcat: ^0.1.1               <---- plugin\n\ndev_dependencies:\n  flutter_lints: ^2.0.1\n  flutter_test:\n    sdk: flutter\n  pigeon: ^3.2.9\n\nflutter:\n  plugin:\n    platforms:\n      android:\n        package: com.idlefish.flutterboost\n        pluginClass: FlutterBoostPlugin\n      ios:\n        pluginClass: FlutterBoostPlugin\n\n\nflutterboost  gradle file:\ngroup 'com.idlefish.flutterboost'\nversion '1.0-SNAPSHOT'\n\nbuildscript {\n    repositories {\n        google()\n        jcenter()\n    }\n\n    dependencies {\n        classpath 'com.android.tools.build:gradle:7.0.4'\n    }\n}\n\nrootProject.allprojects {\n    repositories {\n        google()\n        jcenter()\n    }\n}\n\napply plugin: 'com.android.library'\n\nandroid {\n    compileSdkVersion 31\n    buildToolsVersion '30.0.2'\n    defaultConfig {\n        minSdkVersion 16\n        targetSdkVersion 31\n        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'\n    }\n    lintOptions {\n        disable 'InvalidPackage'\n        abortOnError false\n    }\n\n    compileOptions {\n        sourceCompatibility JavaVersion.VERSION_1_8\n        targetCompatibility JavaVersion.VERSION_1_8\n    }\n}\n\ndependencies {\n    compileOnly 'com.google.android.material:material:1.0.0'\n    compileOnly 'com.alibaba:fastjson:1.2.41'\n    implementation 'com.squareup.okhttp3:okhttp:3.5.0'                  <------ native\n}\n\next {\n    groupId = 'com.taobao.fleamarket'\n    artifactId = \"FlutterBoost\"\n}\n\n\n\n.flutter-plugins-dependencies file:Plugin dependent plugins also compile normally\uff0clook this:\n\nbuild aar file tree:\n\u2514\u2500\u2500 host\n    \u2514\u2500\u2500 outputs\n        \u2514\u2500\u2500 repo\n            \u2514\u2500\u2500 com\n                \u251c\u2500\u2500 example\n                \u2502\u00a0\u00a0 \u2514\u2500\u2500 module_test\n                \u2502\u00a0\u00a0     \u2514\u2500\u2500 flutter_release\n                \u2502\u00a0\u00a0         \u251c\u2500\u2500 1.0\n                \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_release-1.0.aar\n                \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_release-1.0.aar.md5\n                \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_release-1.0.aar.sha1\n                \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_release-1.0.pom\n                \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_release-1.0.pom.md5\n                \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u2514\u2500\u2500 flutter_release-1.0.pom.sha1\n                \u2502\u00a0\u00a0         \u251c\u2500\u2500 maven-metadata.xml\n                \u2502\u00a0\u00a0         \u251c\u2500\u2500 maven-metadata.xml.md5\n                \u2502\u00a0\u00a0         \u2514\u2500\u2500 maven-metadata.xml.sha1\n                \u251c\u2500\u2500 idlefish\n                \u2502\u00a0\u00a0 \u2514\u2500\u2500 flutterboost\n                \u2502\u00a0\u00a0     \u2514\u2500\u2500 flutter_boost_release\n                \u2502\u00a0\u00a0         \u251c\u2500\u2500 1.0\n                \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_boost_release-1.0.aar\n                \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_boost_release-1.0.aar.md5\n                \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_boost_release-1.0.aar.sha1\n                \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_boost_release-1.0.pom\n                \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u251c\u2500\u2500 flutter_boost_release-1.0.pom.md5\n                \u2502\u00a0\u00a0         \u2502\u00a0\u00a0 \u2514\u2500\u2500 flutter_boost_release-1.0.pom.sha1\n                \u2502\u00a0\u00a0         \u251c\u2500\u2500 maven-metadata.xml\n                \u2502\u00a0\u00a0         \u251c\u2500\u2500 maven-metadata.xml.md5\n                \u2502\u00a0\u00a0         \u2514\u2500\u2500 maven-metadata.xml.sha1\n                \u2514\u2500\u2500 logger\n                    \u2514\u2500\u2500 logging_to_logcat\n                        \u2514\u2500\u2500 logging_to_logcat_release\n                            \u251c\u2500\u2500 1.0\n                            \u2502\u00a0\u00a0 \u251c\u2500\u2500 logging_to_logcat_release-1.0.aar\n                            \u2502\u00a0\u00a0 \u251c\u2500\u2500 logging_to_logcat_release-1.0.aar.md5\n                            \u2502\u00a0\u00a0 \u251c\u2500\u2500 logging_to_logcat_release-1.0.aar.sha1\n                            \u2502\u00a0\u00a0 \u251c\u2500\u2500 logging_to_logcat_release-1.0.pom\n                            \u2502\u00a0\u00a0 \u251c\u2500\u2500 logging_to_logcat_release-1.0.pom.md5\n                            \u2502\u00a0\u00a0 \u2514\u2500\u2500 logging_to_logcat_release-1.0.pom.sha1\n                            \u251c\u2500\u2500 maven-metadata.xml\n                            \u251c\u2500\u2500 maven-metadata.xml.md5\n                            \u2514\u2500\u2500 maven-metadata.xml.sha1\n\n\nmodule_test pom file:\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\" xmlns=\"http://maven.apache.org/POM/4.0.0\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n  <modelVersion>4.0.0</modelVersion>\n  <groupId>com.example.module_test</groupId>\n  <artifactId>flutter_release</artifactId>\n  <version>1.0</version>\n  <packaging>aar</packaging>\n  <dependencies>\n    <dependency>\n      <groupId>com.logger.logging_to_logcat</groupId>\n      <artifactId>logging_to_logcat_release</artifactId>\n      <version>1.0</version>\n      <scope>compile</scope>\n    </dependency>\n    <dependency>\n      <groupId>com.idlefish.flutterboost</groupId>\n      <artifactId>flutter_boost_release</artifactId>\n      <version>1.0</version>\n      <scope>compile</scope>\n    </dependency>\n    <dependency>\n      <groupId>io.flutter</groupId>\n      <artifactId>flutter_embedding_release</artifactId>\n      <version>1.0.0-d3ea636dc5d16b56819f3266241e1f708979c233</version>\n      <scope>compile</scope>\n    </dependency>\n    <dependency>\n      <groupId>io.flutter</groupId>\n      <artifactId>armeabi_v7a_release</artifactId>\n      <version>1.0.0-d3ea636dc5d16b56819f3266241e1f708979c233</version>\n      <scope>compile</scope>\n    </dependency>\n    <dependency>\n      <groupId>io.flutter</groupId>\n      <artifactId>arm64_v8a_release</artifactId>\n      <version>1.0.0-d3ea636dc5d16b56819f3266241e1f708979c233</version>\n      <scope>compile</scope>\n    </dependency>\n    <dependency>\n      <groupId>io.flutter</groupId>\n      <artifactId>x86_64_release</artifactId>\n      <version>1.0.0-d3ea636dc5d16b56819f3266241e1f708979c233</version>\n      <scope>compile</scope>\n    </dependency>\n  </dependencies>\n</project>\n\n\nflutterboost pom file:\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\" xmlns=\"http://maven.apache.org/POM/4.0.0\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n  <!-- This module was also published with a richer model, Gradle metadata,  -->\n  <!-- which should be used instead. Do not delete the following line which  -->\n  <!-- is to indicate to Gradle or any Gradle module metadata file consumer  -->\n  <!-- that they should prefer consuming it instead. -->\n  <!-- do_not_remove: published-with-gradle-metadata -->\n  <modelVersion>4.0.0</modelVersion>\n  <groupId>com.idlefish.flutterboost</groupId>\n  <artifactId>flutter_boost_release</artifactId>\n  <version>1.0</version>\n  <packaging>aar</packaging>\n  <dependencies>\n    <dependency>\n      <groupId>io.flutter</groupId>\n      <artifactId>flutter_embedding_release</artifactId>\n      <version>1.0.0-4b591e17d288447f118300754073c9f1d9a4393a</version>\n      <scope>compile</scope>\n    </dependency>\n    <dependency>\n      <groupId>com.squareup.okhttp3</groupId>\n      <artifactId>okhttp</artifactId>\n      <version>3.5.0</version>\n      <scope>runtime</scope>\n    </dependency>\n    <dependency>\n      <groupId>com.logger.logging_to_logcat</groupId>\n      <artifactId>logging_to_logcat_release</artifactId>\n      <version>1.0</version>\n      <scope>runtime</scope>\n    </dependency>\n  </dependencies>\n</project>\n\n\nlogging_to_logcat pom file:\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\" xmlns=\"http://maven.apache.org/POM/4.0.0\"\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n  <!-- This module was also published with a richer model, Gradle metadata,  -->\n  <!-- which should be used instead. Do not delete the following line which  -->\n  <!-- is to indicate to Gradle or any Gradle module metadata file consumer  -->\n  <!-- that they should prefer consuming it instead. -->\n  <!-- do_not_remove: published-with-gradle-metadata -->\n  <modelVersion>4.0.0</modelVersion>\n  <groupId>com.logger.logging_to_logcat</groupId>\n  <artifactId>logging_to_logcat_release</artifactId>\n  <version>1.0</version>\n  <packaging>aar</packaging>\n  <dependencies>\n    <dependency>\n      <groupId>io.flutter</groupId>\n      <artifactId>flutter_embedding_release</artifactId>\n      <version>1.0.0-4b591e17d288447f118300754073c9f1d9a4393a</version>\n      <scope>compile</scope>\n    </dependency>\n    <dependency>\n      <groupId>org.jetbrains.kotlin</groupId>\n      <artifactId>kotlin-stdlib-jdk7</artifactId>\n      <version>1.6.10</version>\n      <scope>runtime</scope>\n    </dependency>\n  </dependencies>\n</project>\n\n\nThis case is fine~",
                "createdAt": "2022-09-29T16:45:36Z"
            },
            {
                "author": "GaryQian",
                "bodyText": "@AesSedai101 Can you confirm that @JunhuaLin 's explanation here resolves your concern?",
                "createdAt": "2022-09-30T00:18:28Z"
            },
            {
                "author": "JunhuaLin",
                "bodyText": "Why tree is currently broken?\nI shouldn't merge the master, I should use Rebase, right?",
                "createdAt": "2022-09-30T01:56:13Z"
            },
            {
                "author": "GaryQian",
                "bodyText": "Yes, you should use rebase, but don't worry about the tree being broken, it is not your fault, it should become green again soon (it is green now). That check simply reflects the build status of tip-of-tree.",
                "createdAt": "2022-09-30T02:34:35Z"
            },
            {
                "author": "JunhuaLin",
                "bodyText": "Yes, you should use rebase, but don't worry about the tree being broken, it is not your fault, it should become green again soon (it is green now). That check simply reflects the build status of tip-of-tree.\n\nOk, I see~\nCan my PR be merged in this case?\nWe want to use the latest version as soon as possible",
                "createdAt": "2022-09-30T03:25:08Z"
            },
            {
                "author": "AesSedai101",
                "bodyText": "Can you confirm that @JunhuaLin 's explanation here resolves your concern?\n\nThat is not the behaviour I saw on my side, but it's possible that my environment is in a broken state",
                "createdAt": "2022-09-30T07:07:59Z"
            },
            {
                "author": "JunhuaLin",
                "bodyText": "Can you confirm that @JunhuaLin 's explanation here resolves your concern?\n\nThat is not the behaviour I saw on my side, but it's possible that my environment is in a broken state\n\nI'm not sure I understand your situation.\nMy changes are consistent with 3.0.5 and earlier features for build aar\uff0cso there should be no negative effect\uff01\nYou can use my branch master version to verify your problem\nor\uff1a\nCan you reproduce your problem in 3.0.5 or earlier?\nCan you provide a complete minimum reproducible code example \uff1f",
                "createdAt": "2022-09-30T07:31:28Z"
            },
            {
                "author": "GaryQian",
                "bodyText": "@AesSedai101 Ping on @JunhuaLin 's questions",
                "createdAt": "2022-10-02T16:20:12Z"
            },
            {
                "author": "JunhuaLin",
                "bodyText": "Can my PR be released with 3.4.0 @GaryQian",
                "createdAt": "2022-10-04T03:27:40Z"
            }
        ],
        "commentCount": 27
    },
    {
        "number": 110052,
        "title": "Add support for image insertion on Android",
        "author": "Tanay Neotia",
        "state": "MERGED",
        "closedAt": "2023-01-31T19:46:19Z",
        "createdAt": "2022-08-23T00:43:55Z",
        "comments": [
            {
                "author": "tneotia",
                "bodyText": "@justinmc what can I do about this ci.yaml validation? It says required but is failing.... I didn't change anything for any ci.yaml stuff\nFollowing the instructions and merging upstream did the trick \ud83d\ude04",
                "createdAt": "2022-08-23T15:50:33Z"
            },
            {
                "author": "tneotia",
                "bodyText": "@justinmc I got all checks to pass, this should be ready for a review now :)",
                "createdAt": "2022-08-24T14:29:05Z"
            },
            {
                "author": "codecov-commenter",
                "bodyText": "Codecov Report\n\nMerging #110052 (8815f60) into master (6d67fbb) will increase coverage by 0.00%.\nThe diff coverage is 100.00%.\n\n\n\u2757 Current head 8815f60 differs from pull request most recent head 22ae682. Consider uploading reports for the commit 22ae682 to get more accurate results\n\n@@           Coverage Diff            @@\n##           master   #110052   +/-   ##\n========================================\n  Coverage   91.45%    91.45%           \n========================================\n  Files         523       523           \n  Lines       94649     94649           \n========================================\n+ Hits        86561     86565    +4     \n+ Misses       8088      8084    -4     \n\n\n\nImpacted Files\nCoverage \u0394\n\n\n\n\n\n...ib/src/material/animated_icons/animated_icons.dart\n90.47% <\u00f8> (\u00f8)\n\n\n\n...c/material/animated_icons/animated_icons_data.dart\n100.00% <\u00f8> (\u00f8)\n\n\n\npackages/flutter/lib/src/material/icons.dart\n41.93% <\u00f8> (\u00f8)\n\n\n\npackages/flutter/lib/src/material/scrollbar.dart\n99.31% <100.00%> (\u00f8)\n\n\n\n...ages/flutter/lib/src/material/scrollbar_theme.dart\n97.67% <0.00%> (+4.65%)\n\u2b06\ufe0f\n\n\n\n\ud83d\udce3 We\u2019re building smart automated test selection to slash your CI/CD build times. Learn more",
                "createdAt": "2022-10-19T18:46:15Z"
            },
            {
                "author": "tneotia",
                "bodyText": "@justinmc what is next to get this moving forward? The only potential blocker I see right now is that test you wanted me to write, which I talked about in your most recent review.",
                "createdAt": "2022-11-02T19:15:02Z"
            },
            {
                "author": "justinmc",
                "bodyText": "@tneotia I just commented with an idea about the test, let me know if that helps or if you still can't get it going!",
                "createdAt": "2022-11-07T20:28:39Z"
            },
            {
                "author": "tneotia",
                "bodyText": "@tneotia I just commented with an idea about the test, let me know if that helps or if you still can't get it going!\n\nCan't believe I was missing such a small detail \ud83d\ude05 - it works now!!",
                "createdAt": "2022-11-07T22:33:40Z"
            },
            {
                "author": "tneotia",
                "bodyText": "@justinmc do you know why the bot thinks this PR affects goldens?",
                "createdAt": "2022-11-17T20:22:54Z"
            },
            {
                "author": "justinmc",
                "bodyText": "It seems to be ok, the goldens comment above appears out of date and doesn't show any broken goldens.  I've removed the \"will affect goldens\" label.",
                "createdAt": "2022-11-17T21:34:08Z"
            },
            {
                "author": "tneotia",
                "bodyText": "@justinmc what else is left here? Do I need to add anything further before this can be merged? I think the only thing we discussed is:\n\nGoogle testing needs fixing\nMigration guide PR (which is complete from my side)",
                "createdAt": "2022-12-01T16:03:22Z"
            },
            {
                "author": "justinmc",
                "bodyText": "This looks good to go except for the Google testing failure.  I'm actually struggling to see what the problem is there.  I'm asking around about it and will post back.",
                "createdAt": "2022-12-02T18:03:17Z"
            },
            {
                "author": "LongCatIsLooong",
                "bodyText": "The google testing is failing because it's introducing a new method to the TextInputClient interface which some of the internal classes implement so unfortunately I think this is a breaking change.  @tneotia would you mind adding a migration guide (and maybe a dartfix) following these steps in the wiki? https://github.com/flutter/flutter/wiki/Tree-hygiene#3-prepare-your-change",
                "createdAt": "2022-12-03T01:00:30Z"
            },
            {
                "author": "tneotia",
                "bodyText": "@LongCatIsLooong there is already a migration PR created at flutter/website#7692 by request from @justinmc :)",
                "createdAt": "2022-12-03T01:11:26Z"
            },
            {
                "author": "LongCatIsLooong",
                "bodyText": "Ah good to know. I'll start migrating the internal clients once the migration guide PR is merged.",
                "createdAt": "2022-12-03T01:15:58Z"
            },
            {
                "author": "tneotia",
                "bodyText": "@LongCatIsLooong should I mark that migration PR as ready to review then? Or leave it as draft?",
                "createdAt": "2022-12-03T01:17:44Z"
            },
            {
                "author": "CaseyHillers",
                "bodyText": "@tneotia can you rebase this PR with tip of tree? It's 50 commits behind which is causing issues with the Google testing infra.",
                "createdAt": "2022-12-05T18:59:38Z"
            },
            {
                "author": "tneotia",
                "bodyText": "@CaseyHillers done, although Google testing is likely broken due to the breaking change on TextInputClient",
                "createdAt": "2022-12-05T20:07:01Z"
            },
            {
                "author": "gnprice",
                "bodyText": "Ah good to know. I'll start migrating the internal clients once the migration guide PR is merged.\n\nIt looks like the migration guide PR flutter/website#7692 won't be merged until this PR lands (because the migration guide needs to say when the implementation landed.)\nFortunately, from the latest review flutter/website#7692 (review) on that migration guide PR, it seems like it's ready except for minor nits and that information about when this PR landed.\nSo: @LongCatIsLooong, perhaps that draft is ready for you to use to start migrating the Google-internal clients?",
                "createdAt": "2023-01-28T20:30:32Z"
            },
            {
                "author": "tneotia",
                "bodyText": "fwiw, we've been using the merged engine code in our production app with Flutter 3.7 and this PR cherry-picked in (as per #20796 (comment)). Still working great and would be absolutely amazing to have this merged in officially!",
                "createdAt": "2023-01-28T20:39:37Z"
            },
            {
                "author": "LongCatIsLooong",
                "bodyText": "The analyzer check is failing, likely because of dart 3.0 nnbd changes. Could you take a look?",
                "createdAt": "2023-01-30T02:47:55Z"
            },
            {
                "author": "tneotia",
                "bodyText": "The analyzer check is failing, likely because of dart 3.0 nnbd changes. Could you take a look?\n\nShould be good now :)",
                "createdAt": "2023-01-30T03:50:23Z"
            },
            {
                "author": "CaseyHillers",
                "bodyText": "@justinmc or @LongCatIsLooong the Google Testing failures have several breakages. Can you prep the internal patch before landing this PR?",
                "createdAt": "2023-01-30T14:11:26Z"
            },
            {
                "author": "justinmc",
                "bodyText": "@CaseyHillers Done, pinging you the CL.\n@tneotia I think the 2 other failures are infra flakes, but I'm not able to rerun them... Maybe push a merge commit?",
                "createdAt": "2023-01-30T21:09:57Z"
            },
            {
                "author": "tneotia",
                "bodyText": "@justinmc looks like all tests are a go now (apart from Google testing, not sure if that is already fixed or not)",
                "createdAt": "2023-01-30T21:52:35Z"
            },
            {
                "author": "justinmc",
                "bodyText": "Awesome, thank you!  The google tests should be fixed on our side soon if not already.  We might have to manually set it to passing.",
                "createdAt": "2023-01-30T21:56:25Z"
            },
            {
                "author": "LongCatIsLooong",
                "bodyText": "@tneotia Could you sync this to the tip of the tree?",
                "createdAt": "2023-01-31T19:08:41Z"
            },
            {
                "author": "tneotia",
                "bodyText": "@LongCatIsLooong done :)",
                "createdAt": "2023-01-31T19:10:15Z"
            },
            {
                "author": "justinmc",
                "bodyText": "Thanks @tneotia for your persistence with this PR!  A lot of people are going to appreciate this work.",
                "createdAt": "2023-01-31T19:51:08Z"
            },
            {
                "author": "tneotia",
                "bodyText": "No problem. Glad we could contribute this feature to Flutter, definitely a must-have for chat apps!\nHoepfully someone can pick up the torch and add iOS / Web / Desktop support to this API (right now we use the pasteboard package for web & desktop).\nRegardless, thanks for sticking with us as well for this! Super excited for this to land. When should I reopen the migration guide PR?",
                "createdAt": "2023-01-31T20:17:35Z"
            },
            {
                "author": "justinmc",
                "bodyText": "@tneotia Ah good call, I'll reopen it now.",
                "createdAt": "2023-02-02T19:05:38Z"
            }
        ],
        "commentCount": 29
    },
    {
        "number": 102687,
        "title": "[framework] remove forced compositing from opacity",
        "author": "Jonah Williams",
        "state": "CLOSED",
        "closedAt": "2022-05-26T02:00:42Z",
        "createdAt": "2022-04-27T20:47:34Z",
        "comments": [
            {
                "author": "jonahwilliams",
                "bodyText": "actually the goldens I'm seeing are making me think this isn't working correctly, investigating",
                "createdAt": "2022-04-27T21:24:20Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "running a few of these locally on windows and chrome they look identical",
                "createdAt": "2022-04-27T21:30:54Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Also skip saveLayer at 255 alpha",
                "createdAt": "2022-04-28T20:00:33Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "I'm going to do a g3 run to see what those scubas do",
                "createdAt": "2022-04-28T20:01:03Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Running google3 goldens I don't see any issues, its like opacity doesn't work but only on skia gold",
                "createdAt": "2022-04-29T01:09:07Z"
            },
            {
                "author": "flar",
                "bodyText": "I agree that we only want the forced compositing and isolated children on animating things. Some apps might drive opacity animations directly themselves using an Opacity widget, but they should look to use an animated widget instead for multiple reasons (for one thing, fewer rebuilds of their tree).",
                "createdAt": "2022-04-29T03:00:36Z"
            },
            {
                "author": "goderbauer",
                "bodyText": "I agree that we only want the forced compositing and isolated children on animating things. Some apps might drive opacity animations directly themselves using an Opacity widget, but they should look to use an animated widget instead for multiple reasons (for one thing, fewer rebuilds of their tree).\n\nAgreed. The docs already push people strongly away from Opacity if they want to animate.",
                "createdAt": "2022-04-29T16:10:42Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Yeah, use an animated opacity widget instead of opacity to animate is fairly straightforward advice",
                "createdAt": "2022-04-29T18:27:19Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "So I reproduced the skia gold issues locally. This is due to #48417\nTo make this landable I will force compositing only on the web",
                "createdAt": "2022-04-29T19:40:15Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Not sure what we should do about naming vs breaking. i'd lean towards not breaking, and I adjusted the name to pushOpacityValue which is at least not misleading if we don't push a layer. We could change the name to pushAlpha, since it accepts an int and not a double",
                "createdAt": "2022-04-29T22:30:44Z"
            },
            {
                "author": "flar",
                "bodyText": "The animations produce a double, though. I'm leaning toward breaking change depending on how wide your search was.\nCC @dnfield @Hixie",
                "createdAt": "2022-04-29T22:59:30Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "The OpacityLayer also takes an alpha: \n  \n    \n      flutter/packages/flutter/lib/src/rendering/layer.dart\n    \n    \n         Line 1751\n      in\n      fba9214\n    \n  \n  \n    \n\n        \n          \n           set alpha(int? value) { \n        \n    \n  \n\n\nI can certainly do the breaking change. We have a lot of headroom before the next release",
                "createdAt": "2022-04-29T23:01:23Z"
            },
            {
                "author": "flar",
                "bodyText": "The OpacityLayer also takes an alpha:\n\n  \n    \n      flutter/packages/flutter/lib/src/rendering/layer.dart\n    \n    \n         Line 1751\n      in\n      fba9214\n    \n  \n  \n    \n\n        \n          \n           set alpha(int? value) { \n        \n    \n  \n\n\nI can certainly do the breaking change. We have a lot of headroom before the next release\n\nWe can and should fix that. The graphics libraries can take double, so we shouldn't restrict the higher level interfaces to a lower precision (though in practice, the final results are an 8-bit pixel component, there are calculations before you get there that can happen in floating point and carry more precision until the final round to store the value in the framebuffer).\nAlso, it could take both types of value with a comment/assert to use only one of them.",
                "createdAt": "2022-04-29T23:07:51Z"
            },
            {
                "author": "flar",
                "bodyText": "It looks like phones are already embracing 10-bit per component technology.\nhttps://ledstrain.org/d/1358-phones-with-true-10-bit-display",
                "createdAt": "2022-04-29T23:14:00Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "If we can make the engine accept a double, we can certainly always provide a double. We won't always get to take advantage of the extra resolution though, since the Color class can only store an alpha, and the Paint object only accepts a color.",
                "createdAt": "2022-04-29T23:41:00Z"
            },
            {
                "author": "flar",
                "bodyText": "If we can make the engine accept a double, we can certainly always provide a double. We won't always get to take advantage of the extra resolution though, since the Color class can only store an alpha, and the Paint object only accepts a color.\n\nWe can have the ui.Paint object accept an alpha or an opacity on top of the color.\nCan we expand the ui.Color class to store higher precision in a backward compatible way? Skia has Color and something like Color4f and the SkPaint takes an alpha(int) or an alphaf(SkScalar).\nStuff we're going to have to consider at some point, but we can start with making new APIs take doubles, and can even have them take an int? or double? for both options.",
                "createdAt": "2022-04-29T23:54:59Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Makes sense, will update. I do sort of wonder if we should also use a small epsilon for comparison too...",
                "createdAt": "2022-04-30T00:16:42Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "RE: colors and opacity, we can definitely add new color objects/paint types. It would be good to evaluate what we need to move towards in the next few years so we can coordinate all the required changes",
                "createdAt": "2022-04-30T00:25:43Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Filled a bug for us to discuss next week: #102888\nI had a thought that this might be something we can use dart fix with.",
                "createdAt": "2022-05-01T02:25:46Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Since I looked again and found no use of these APIs outside of the flutter code base, I'm thinking we should just do the breaking change",
                "createdAt": "2022-05-02T15:34:06Z"
            },
            {
                "author": "flar",
                "bodyText": "@goderbauer do the other parts LGTY?",
                "createdAt": "2022-05-02T18:58:51Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "I believe that I've addressed all feedback and will plan on landing this on green CI assuming no other problems....",
                "createdAt": "2022-05-06T01:22:38Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Based on our experience trying to update the physical model layer, I'm going to make this one opt in",
                "createdAt": "2022-05-11T17:23:17Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "I'm currently waiting on a g3 frob run to confirm this has a smaller number of breakages",
                "createdAt": "2022-05-11T20:33:05Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "this has gotten stale, will reopen once we've resolved the scuba issues",
                "createdAt": "2022-05-26T02:00:42Z"
            }
        ],
        "commentCount": 25
    },
    {
        "number": 91496,
        "title": "[Stepper] Add Alternative Label on horizontal-type Stepper",
        "author": "Jiun Kim",
        "state": "MERGED",
        "closedAt": "2022-06-06T21:43:10Z",
        "createdAt": "2021-10-08T16:07:10Z",
        "comments": [
            {
                "author": "KKimj",
                "bodyText": "I will add new tests to check this PR",
                "createdAt": "2021-10-08T16:37:22Z"
            },
            {
                "author": "craiglabenz",
                "bodyText": "Thanks for the confirmation on tests, @KKimj. If you're new to widget tests, the existing Stepper widget tests contain many great examples of meaningful tests :)",
                "createdAt": "2021-10-08T23:43:48Z"
            },
            {
                "author": "KKimj",
                "bodyText": "@craiglabenz\nHello, I add new test for lable ( Alternative Label ) with stepper.\nPlease check, and give me some comments.\nThanks, HAGW!",
                "createdAt": "2021-10-09T09:29:25Z"
            },
            {
                "author": "KKimj",
                "bodyText": "@craiglabenz\nHello\nCan you please comment on my PR?\nThank you.",
                "createdAt": "2021-10-17T23:46:08Z"
            },
            {
                "author": "KKimj",
                "bodyText": "@craiglabenz\nHello, how are you doing?\nCan you give me a new feedback?\nThank you.",
                "createdAt": "2021-11-13T16:22:15Z"
            },
            {
                "author": "craiglabenz",
                "bodyText": "@KKimj\nI am So. So. sorry for disappearing for so long. Somehow, the alert for this PR snuck past me and I never caught it.\nIn my last comment, I wrote \"it would be nice to add another one that confirms the styling logic you've written is behaving as anticipated\", which I now realize was a little unclear. The key function I would like to see tested is _labelStyle, since it accepts an index and merges that with the user's progress through the stepper and the Dark Mode / Light Mode status before ultimately yielding a TextStyle. The internals of that function are pretty complicated, so I think we should have tests to verify that a Stepper with X steps, and currently at step Y, is rendering each label correctly. There are a few scenarios to cover there - steps before, on, and after the active step; in both light mode and dark mode.\nDoes all of that make sense?\nPS - I promise not to disappear this time!",
                "createdAt": "2022-01-26T22:25:24Z"
            },
            {
                "author": "KKimj",
                "bodyText": "Hello!! LTNS!!\nI understand what you say.\nI will update test-codes soon.\nSomething like below.\n\nLet, X := currentStepIndex, Y := arbitraryStepIndex (except current)\n\n\nset X = 0.\nCheck Styles of X and Y.\nset X = 1.\nInvoke setState().\nCheck Styles of X and Y.\n\nP.S\nHappy New Year!",
                "createdAt": "2022-01-31T03:47:20Z"
            },
            {
                "author": "craiglabenz",
                "bodyText": "Yes, that looks like the right pseudocode. Thanks so much and \ud83c\udf14 Happy New Year \ud83c\udf14 to you, too!",
                "createdAt": "2022-01-31T04:06:52Z"
            },
            {
                "author": "Hixie",
                "bodyText": "@KKimj Is this a PR you are interested in doing further work on? It's perfectly understandable if you don't have time right now, and if that's the case we can save what you've done so far and put it aside so that if someone else wants to work on this they can start from your PR. But if you do have the time to work on this, that would be great!",
                "createdAt": "2022-04-19T23:10:37Z"
            },
            {
                "author": "KKimj",
                "bodyText": "@Hixie\nHello!\nI always had it in mind. I want to finish all the work within April. How does that sound?",
                "createdAt": "2022-04-19T23:15:24Z"
            },
            {
                "author": "KKimj",
                "bodyText": "@craiglabenz\nHello..! It's been so long. How have you been?\nI pushed a commit for test about TextStyles of Label Widget.\nPlease Review my commit.\nThanks!",
                "createdAt": "2022-04-21T09:23:50Z"
            },
            {
                "author": "craiglabenz",
                "bodyText": "That test looks good, @KKimj. However, I just tested the code myself directly, and the padding / alignment issue does still seem to be in play. Is this something you're also looking to address?",
                "createdAt": "2022-04-22T16:25:16Z"
            },
            {
                "author": "KKimj",
                "bodyText": "@craiglabenz\nHello!\nNow I realize again that there is no alternative label in the Vertical type, StepperType.vertical.\n\nhttps://material.io/archive/guidelines/components/steppers.html#steppers-types-of-steppers\n\n\nAnyway, I found a way to solve the padding / alignment issue.\nThe method is to modify the function '_buildVerticalHeader', forcing width to 24.0, according to the Material Guide.\n\nCode diff here, (It was not pushed.)\n\n\n\nAn example UI can be similar to the following.\n\n\nBut it's too cramped, and as I said above, it's dubious because `alternative label` is not in the Vertical type. I'd like to ask for advice on how to do it.\nThanks, Have a good day!",
                "createdAt": "2022-04-25T15:41:43Z"
            },
            {
                "author": "craiglabenz",
                "bodyText": "Oh dear, we're running out of pixels below the circle. To be honest, I'm not sure that it makes sense to put anything in this spot, given the screenshots you shared and how cramped the area is. The fact that only such short strings will fit is a bit of a problem, in my opinion.\nTaking a step back - what informed your desire to land this change? Is there possibly another way that need could be satisfied?",
                "createdAt": "2022-04-25T16:10:14Z"
            },
            {
                "author": "KKimj",
                "bodyText": "@craiglabenz\nI was motivated for the horizontal type.\nIs it right to exclude it from the vertical type?\nOr is it right to include even more width?\nBut this would violate the width or margin value of the Material design.",
                "createdAt": "2022-04-25T16:53:06Z"
            },
            {
                "author": "craiglabenz",
                "bodyText": "I think it's probably fair to have this be horizontal-only, and to spell that out in the relevant docstrings.",
                "createdAt": "2022-04-25T16:55:05Z"
            },
            {
                "author": "KKimj",
                "bodyText": "Thank you!\nThen, when the label attribute is given in the vertical type, how should I handle it?\nShould I use an asset or something?",
                "createdAt": "2022-04-25T16:59:12Z"
            },
            {
                "author": "craiglabenz",
                "bodyText": "My ideal solution would simply be to do nothing in the vertical case. Have the new attribute's docstring mention that it is only honored in the horizontal alignment and then make no changes to the vertical build methods.",
                "createdAt": "2022-04-25T17:04:27Z"
            },
            {
                "author": "KKimj",
                "bodyText": "Thank you for letting me know about your Insight!\nI just did some new push.\nPlease check. Thank you!",
                "createdAt": "2022-04-25T17:17:31Z"
            },
            {
                "author": "craiglabenz",
                "bodyText": "I like that this is currently horizontal-only, but I'm also seeing a spacing issue there. Note that before adding a label, everything is appropriately centered:\n\nBut then after adding a label, the horizontal connectors shift and are no-longer centered. fwiw, I think this is largely the core challenge of this PR - you can no longer as easily predict the heights of each component to know how to keep the horizontal connectors centered within the circle.\n\nThe horizontal connectors look centered within the entire column of circle-and-label, but my hunch is that it should remain centered within the circle.",
                "createdAt": "2022-04-25T18:16:42Z"
            },
            {
                "author": "KKimj",
                "bodyText": "@craiglabenz\nThis is what you're expecting, right?",
                "createdAt": "2022-04-25T19:01:50Z"
            },
            {
                "author": "craiglabenz",
                "bodyText": "That centering looks good! I forget, is the elevation coming from the Stepper itself, or have you wrapped it in something in this demo? If it comes from the Stepper itself, then some padding below the label would help.",
                "createdAt": "2022-04-25T19:10:11Z"
            },
            {
                "author": "KKimj",
                "bodyText": "@craiglabenz\nFirst, padding and size will follow the following.\nlink\n\n\nAnd the elevation is coming from the Stepper itself.",
                "createdAt": "2022-04-25T19:16:08Z"
            },
            {
                "author": "KKimj",
                "bodyText": "@craiglabenz\nHello!!\nI Pushed some commits.\nPlease review!",
                "createdAt": "2022-04-25T20:20:07Z"
            },
            {
                "author": "KKimj",
                "bodyText": "And also, Please check out these corner cases, which are related to fontSize.",
                "createdAt": "2022-04-25T20:31:32Z"
            },
            {
                "author": "KKimj",
                "bodyText": "@craiglabenz\nCould you give me some comments?\nThanks!",
                "createdAt": "2022-05-02T14:47:42Z"
            },
            {
                "author": "KKimj",
                "bodyText": "@craiglabenz\nWow, thank you.\nIs there anything I need to do for customer_testing-linux, CI that has failed?",
                "createdAt": "2022-06-03T09:00:32Z"
            },
            {
                "author": "craiglabenz",
                "bodyText": "I strongly suspect that failure is a false-negative, but we'll have to see if it happens again.",
                "createdAt": "2022-06-03T09:53:34Z"
            },
            {
                "author": "craiglabenz",
                "bodyText": "I've been told that to clear the false-negative, we'll need to rebase this branch against master (vs merging in master like you currently did). Feel free to squash these commits to make the rebase easier, and then force push - and I think that should do it.",
                "createdAt": "2022-06-06T15:41:33Z"
            },
            {
                "author": "KKimj",
                "bodyText": "@craiglabenz\nThanks!\nIt works!",
                "createdAt": "2022-06-06T16:57:07Z"
            }
        ],
        "commentCount": 30
    },
    {
        "number": 83530,
        "title": "Add a more complete app template for Flutter (skeleton)",
        "author": "Filip Hracek",
        "state": "MERGED",
        "closedAt": "2021-06-28T22:26:05Z",
        "createdAt": "2021-05-28T00:23:02Z",
        "comments": [
            {
                "author": "filiph",
                "bodyText": "This is ready for re-review. Some notes:\n\nThis is an updated version of #76519, which already got LGTM from @goderbauer, @zanderso, @Hixie, @csells.\nStill, I'd like someone to go over the final product, including my changes:\n\nThe template is now null safe\nThe change is rebased to latest Flutter (~3 months of development)\n\n\nThe change will fail CI until I also land flutter/packages#366. In the original PR, @stuartmorgan asks not to land the flutter/packages change until this one is fully approved and ready to land.\n\nAlso, @brianegan, can I ask you to  reply @googlebot I consent. here, please?",
                "createdAt": "2021-06-01T23:33:30Z"
            },
            {
                "author": "csells",
                "bodyText": "lgtm",
                "createdAt": "2021-06-02T13:52:15Z"
            },
            {
                "author": "HansMuller",
                "bodyText": "Maybe Dummy isn't the best prefix. Stub or proxy might be better.",
                "createdAt": "2021-06-02T17:48:53Z"
            },
            {
                "author": "filiph",
                "bodyText": "Renamed Dummy* to Sample*. Thanks for the naming idea, @Hixie, I really like it.",
                "createdAt": "2021-06-03T19:13:21Z"
            },
            {
                "author": "brianegan",
                "bodyText": "@googlebot I consent.",
                "createdAt": "2021-06-04T10:51:34Z"
            },
            {
                "author": "brianegan",
                "bodyText": "Looking good, glad to see this one moving forward :) Also, I like the change from Dummy to Sample as well \ud83d\udc4d",
                "createdAt": "2021-06-04T10:52:12Z"
            },
            {
                "author": "filiph",
                "bodyText": "One complication that I only realized as I'm testing locally is the fact that adding generated localization from the very start invalidates our flutter create steps.\nObserve:\n$ flutter create -t skeleton my_test\nCreating project my_test...\n  [...]\nWrote 133 files.\n\nAll done!\nIn order to run your application, type:\n\n  $ cd my_test\n  $ flutter run\n\nYour application code is in my_test/lib/main.dart.\n\nIf you try to follow the instructions above, you get an error:\n$ cd my_test\n$ flutter run\nLaunching lib/main.dart on Pixel 2 XL in debug mode...\nError: Couldn't resolve the package 'flutter_gen' in 'package:flutter_gen/gen_l10n/app_localizations.dart'.\nlib/src/app.dart:2:8: Error: Not found: 'package:flutter_gen/gen_l10n/app_localizations.dart'\nimport 'package:flutter_gen/gen_l10n/app_localizations.dart';\n       ^\n[...]\n\nException: Gradle task assembleDebug failed with exit code 1\n\nWhat you need to do at that point is:\n$ flutter pub get\n\nAfter that, flutter run works. This is confusing, since some version of flutter pub get is called after flutter create, as far as I know. I guess it's running too soon?\n@jonahwilliams and I quickly chatted about this on Discord because the same issue happens in testing. It's easy enough to run flutter pub get --offline in automated tests, but it's harder to ask users to remember to do that.\nNow, I wonder if we want to fix the flutter create output (easier but uglier) or to start automatically doing flutter pub get --offline after create.\nWe never had this issue because no template had source generation in it from the very beginning.",
                "createdAt": "2021-06-07T19:34:30Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Now, I wonder if we want to fix the flutter create output (easier but uglier) or to start automatically doing flutter pub get --offline after create.\n\nI think this sounds like a reasonable approach, it will be fast and we could always hide the output from that step too.",
                "createdAt": "2021-06-07T19:36:09Z"
            },
            {
                "author": "filiph",
                "bodyText": "Ok, I'll add that to the CL, then.",
                "createdAt": "2021-06-07T19:39:44Z"
            },
            {
                "author": "zanderso",
                "bodyText": "Ok, I'll add that to the CL, then.\n\nShould it go in a separate CL? This CL is already pretty big.",
                "createdAt": "2021-06-07T19:44:17Z"
            },
            {
                "author": "filiph",
                "bodyText": "I'll be more than happy to do it in a separate one!",
                "createdAt": "2021-06-07T20:49:08Z"
            },
            {
                "author": "filiph",
                "bodyText": "I filed the issue for the flutter create fix: #84150.\nI consider this PR ready to go, so I asked @stuartmorgan for a review & merge of flutter/packages#366, which should make the tests here go green.\nUPDATE Stuart correctly notes that two of the reviewers here have only commented so far and haven't actually approved. My bad, I somehow thought everyone here approved in a comment.\n@Hixie, @HansMuller: does the change look good to you now?",
                "createdAt": "2021-06-07T21:01:15Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "All you need to do is set this line to true: https://github.com/flutter/flutter/blob/master/packages/flutter_tools/lib/src/commands/create_base.dart#L427",
                "createdAt": "2021-06-07T22:08:46Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Sorry, totally slipped my mind",
                "createdAt": "2021-06-07T22:08:54Z"
            },
            {
                "author": "filiph",
                "bodyText": "Sweet! Thanks @jonahwilliams, I made the change here.\nFixes #84150.",
                "createdAt": "2021-06-08T02:24:51Z"
            },
            {
                "author": "frankhasen",
                "bodyText": "I would be very happy if the template would implement the Navigator 2.",
                "createdAt": "2021-09-10T11:01:26Z"
            },
            {
                "author": "Add00w",
                "bodyText": "I would be very happy if the template would implement the Navigator 2.\n\nwith bottom navigation too.",
                "createdAt": "2022-07-26T13:31:24Z"
            },
            {
                "author": "stuartmorgan",
                "bodyText": "This PR has been closed since last year; the place to file new enhancement requests is the issue tracker.",
                "createdAt": "2022-07-26T13:44:15Z"
            }
        ],
        "commentCount": 18
    },
    {
        "number": 62330,
        "title": "Use a LinkedList to improve the performances of ChangeNotifier",
        "author": "Remi Rousselet",
        "state": "MERGED",
        "closedAt": "2020-08-26T18:34:03Z",
        "createdAt": "2020-07-27T11:19:34Z",
        "comments": [
            {
                "author": "fluttergithubbot",
                "bodyText": "It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption to this rule, contact Hixie on the #hackers channel in Chat.\nReviewers: Read the Tree Hygiene page and make sure this patch meets those guidelines before LGTMing.",
                "createdAt": "2020-07-27T11:19:37Z"
            },
            {
                "author": "goderbauer",
                "bodyText": "It would probably be best to submit the benchmark fist to https://github.com/flutter/flutter/tree/master/dev/benchmarks/microbenchmarks so we can collect a couple of numbers with the current implementation and then see how this PR changes the numbers when it gets submitted.\nThe benchmark should probably also track the performance of the other relevant operations (adding/removing listeners).",
                "createdAt": "2020-07-27T20:34:25Z"
            },
            {
                "author": "escamoteur",
                "bodyText": "I'm currently working on a package that offers rx like operators for ValueListenables so to say the poor mans rx without streams.\nhttps://github.com/escamoteur/listenable_pipe/tree/master\nIn this context I would appreciate any performance improvements here",
                "createdAt": "2020-07-27T20:50:40Z"
            },
            {
                "author": "rrousselGit",
                "bodyText": "I've fixed all comments\nWhat's remaining is:\n\nmake a benchmark on https://github.com/flutter/flutter/tree/master/dev/benchmarks/microbenchmarks\nsupport recursive notifyListeners calls\n\nI'll come back to this PR in a bit later this week",
                "createdAt": "2020-07-27T22:33:09Z"
            },
            {
                "author": "escamoteur",
                "bodyText": "It would be great if @munificent could have a look at the benchmark in respect of cache misses as we talked about on Twitter. As @letsar pointed out it may be that the whole benchmark data might fit in the cache so that we don't see any cache miss effects.",
                "createdAt": "2020-07-28T11:21:22Z"
            },
            {
                "author": "goderbauer",
                "bodyText": "@escamoteur Can you link to the twitter conversation for context?",
                "createdAt": "2020-07-28T16:27:40Z"
            },
            {
                "author": "rrousselGit",
                "bodyText": "https://twitter.com/lets4r/status/1287670675801604096?s=19",
                "createdAt": "2020-07-28T16:35:10Z"
            },
            {
                "author": "dkwingsmt",
                "bodyText": "If we're moving forward with this change, we probably want to make the same change to actions.dart where the exact listener logic is replicated.\n(We might want to do the same to InkWell too, where ObserverList is used because we want to maintain an expectedly short list; however your benchmark shows that LinkedList beats ObserverList even in small number cases.)",
                "createdAt": "2020-07-30T23:39:37Z"
            },
            {
                "author": "rrousselGit",
                "bodyText": "I've changed a bit the algorithm to still rely on cloning the list of listeners, as otherwise the logic gets quite dirty to support nested listeners/notify calls.\nUsing LinkedList still removes the contains call, so we are still winning in even for 1-2 listeners and changing from O(N^2) to O(N)\nThe difference at 0 listeners is explained by the early return if there is no listener (as the current implementation do a list clone for no reason)",
                "createdAt": "2020-08-01T05:45:43Z"
            },
            {
                "author": "goderbauer",
                "bodyText": "The difference at 0 listeners is explained by the early return if there is no listener (as the current implementation do a list clone for no reason)\n\nWhich early return do you mean?",
                "createdAt": "2020-08-07T17:46:14Z"
            },
            {
                "author": "rrousselGit",
                "bodyText": "The difference at 0 listeners is explained by the early return if there is no listener (as the current implementation do a list clone for no reason)\n\nWhich early return do you mean?\n\nInside notifyListeners",
                "createdAt": "2020-08-07T18:21:43Z"
            },
            {
                "author": "rrousselGit",
                "bodyText": "Will do.\nThe benchmark numbers are indeed up to date with the latest implementation",
                "createdAt": "2020-08-07T18:22:36Z"
            },
            {
                "author": "goderbauer",
                "bodyText": "Inside notifyListeners\n\nI don't see an early return in there?",
                "createdAt": "2020-08-07T18:24:31Z"
            },
            {
                "author": "rrousselGit",
                "bodyText": "Oh I forgot to push it!\nIt's basically a:\nnotifyListeners() {\n  if (listeners.isEmpty)\n    return;\n}",
                "createdAt": "2020-08-07T18:26:39Z"
            },
            {
                "author": "goderbauer",
                "bodyText": "Not sure why that one check keeps failing on cirrus. You may have to rebase the PR to the latest master.",
                "createdAt": "2020-08-14T18:32:10Z"
            },
            {
                "author": "goderbauer",
                "bodyText": "/cc @Hixie What do you think about this?",
                "createdAt": "2020-08-14T18:38:32Z"
            },
            {
                "author": "dnfield",
                "bodyText": "Very cool! Approach seems sound to me. It'll have a slightly higher memory cost, but only slightly and worth it for the speed gain.",
                "createdAt": "2020-08-14T18:46:45Z"
            },
            {
                "author": "rrousselGit",
                "bodyText": "Note that I still believe we should fuse addListener and removeListener as I mentioned in the issue (#59611) such that we have a usage similar to Stream.listen and its StreamSubscription.\nThis would fix the comment about removeListener having a surprising behavior when a listener is added multiple times:\n\n/// If a listener had been added twice, and is removed once during an\n/// iteration (i.e. in response to a notification), it will still be called\n/// again. If, on the other hand, it is removed as many times as it was\n/// registered, then it will no longer be called. This odd behavior is the\n/// result of the [ChangeNotifier] not being able to determine which listener\n/// is being removed, since they are identical, and therefore conservatively\n/// still calling all the listeners when it knows that any are still\n/// registered.\n///\n/// This surprising behavior can be unexpectedly observed when registering a\n/// listener on two separate objects which are both forwarding all\n/// registrations to a common upstream object.\n\nBut that would be breaking and it's not too important.",
                "createdAt": "2020-08-14T21:05:16Z"
            },
            {
                "author": "Hixie",
                "bodyText": "This PR looks great!\nWould it make sense to deprecate ObserverList entirely if it is consistently slower than the LinkedList approach?\nWhat platforms did we test this on? Might make sense to double-check the findings on iOS, x86, ARM, and Web to make sure it's better on all the platforms (could be a weird artifact of the platform it was tested on).",
                "createdAt": "2020-08-17T22:22:30Z"
            },
            {
                "author": "rrousselGit",
                "bodyText": "I would recommend some of the team members to run the benchmark themselves to double-check. As I mentioned, I'm not a benchmark expert and may have made a mistake when generating these numbers\nFor reference, the benchmark was added to the microbenchmark folder.",
                "createdAt": "2020-08-18T08:22:57Z"
            },
            {
                "author": "Hixie",
                "bodyText": "It looks like nobody has the immediate bandwidth to set up benchmarking for this.\nMy recommendation would be to run some of our existing benchmarks on a couple of platforms (e.g. desktop, web, android, or whatever you have available), and see how those benchmarks fare. Maybe instrument some of the tests to report how many ChangeNotifiers they are using to find a benchmark that uses them more heavily than the others. (I'm not up to date on what benchmarks we have these days so I don't know which one to recommend off hand.)",
                "createdAt": "2020-08-25T23:29:41Z"
            },
            {
                "author": "dnfield",
                "bodyText": "@Hixie is #62715 not satisfactory to benchmark this?\nThose get run on Android and iOS (64 bit).",
                "createdAt": "2020-08-26T00:35:32Z"
            },
            {
                "author": "Hixie",
                "bodyText": "I had understood @rrousselGit's comments above as saying that he didn't have confidence in his benchmark and wanted another. If we have a benchmark we have confidence in then great, let's just run that on a few platforms. :-)",
                "createdAt": "2020-08-26T02:22:27Z"
            },
            {
                "author": "dnfield",
                "bodyText": "Between the specific microbenchmark and benchmarks we have for other tests on other platforms, I'd be confident in landing this as is.",
                "createdAt": "2020-08-26T02:30:47Z"
            },
            {
                "author": "dnfield",
                "bodyText": "I landed this. We can keep an eye on the benchmarks for this commit in the devicelab. Assuming it goes well, we should look to apply this pattern to other places that could use it:\n\nRawKeyboard._handleKeyEvent (raw_keyboard.dart)\nAnimationLocalListenersMixen.notifyListeners (listener_helpers.dart)\nAction.notifyActionListeners (actions.dart)\nFocusManager._notifyHighlightModeListeners (focus_manager.dart).\n\nWould be nice if we could somehow encapsulate the pattern for those.",
                "createdAt": "2020-08-26T18:37:18Z"
            },
            {
                "author": "Hixie",
                "bodyText": "Looking at the benchmarks, it's not clear that this had the impact we were hoping for.\nI didn't see any change on memory-related benchmarks I looked at, or on performance macrobenchmarks.\nOn the listener-specific microbenchmarks, on Android it made addListener2_iteration much (~10x) worse (maybe because it pushed the benchmark into needing more GC?), addListener3_iteration, addListener4_iteration, and addListener5_iteration a little worse (~15%), the notifyListenerX_iteration benchmarks got better (higher Xs got proportionally better improvement), and removeListenerX_iteration tests are mostly unaffected. On iOS the data is too noisy to discern an effect, though based on eyeballing the data, I suspect that if we were to do a rigorous analysis we'd find similar trends but with less amplitude.\nOverall I think this was a wash. :-/ Probably worth keeping since hopefully adding listeners is rarer than notifying, though there's a chance this will have a negative effect on launch performance.\nIt might be that the increased constant cost of a linked list, and the loss of locality, offset much of the potential gain?\nfyi @liyuqian",
                "createdAt": "2020-09-03T23:58:40Z"
            },
            {
                "author": "rrousselGit",
                "bodyText": "Would it make sense to have a custom linked list implementation?\nAnother thing I've been thinking is, we could optimize 1-2 listeners by storing them out of the list:\nclass Notifier {\n  VoidCallback firstListener;\n  LinkedLisf<ListenerEntry> otherListeners;\n\n  addListener(VoidCallback cb) {\n    if (firstListener == null) {\n      firstListener = cb;\n    }\n    else\n       otherListeners.add(ListenerEntry(cb));\n  } \n}\nThst could make very small listeners cases faster.",
                "createdAt": "2020-09-04T00:34:09Z"
            },
            {
                "author": "letsar",
                "bodyText": "@Hixie I created another implementation based on a List and not a LinkedList. The benchmark result was pretty similar to what @rrousselGit came up, but it was always a bit behind its implementation so I didn't mention it.\nHow could I benchmark my implementation with the micro and macrobenchmark you mentioned before, so that I could see whether the list implementation brings performance improvements or not?",
                "createdAt": "2020-09-04T06:20:46Z"
            },
            {
                "author": "Hixie",
                "bodyText": "They're the benchmarks should on https://flutter-dashboard.appspot.com/, which is just the tests listed in https://github.com/flutter/flutter/blob/master/dev/devicelab/manifest.yaml, which you can run locally, see the README in that directory.",
                "createdAt": "2020-09-07T19:35:07Z"
            },
            {
                "author": "Kavantix",
                "bodyText": "@Hixie I have done some testing and I found that for some reason the iterator of LinkedList is very slow.\nSo that could explain why the removeListener benchmark became so much slower and also why the notifyListeners impact isn't as great as we hoped.\nOn my 7+ and iPad pro I ran a test in release mode where I do the notifyListeners pattern (list size is 2 and repeat is 1e6)\nWhen using List.of it takes about 32 ms on the 7+ and 24ms on the ipad to do this:\n  for (int j = 0; j < repeat; j++) {\n    final entries = List.of(linked);\n    for (final entry in entries) {\n      if (entry.list == list) sum += entry.val;\n    }\n  }\n(With a list size of 20 this becomes 173 ms on the 7+ and 105 ms on the ipad)\nWhen I however use a custom copy of the list it takes only about 8ms on the 7+ and 5ms on the ipad:\n  for (int j = 0; j < repeat; j++) {\n    Entry entry = linked.first;\n    final entries = List.generate(linked.length, (_) {\n      final e = entry;\n      entry = entry.next;\n      return e;\n    });\n    for (final entry in entries) {\n      if (entry.list == list) sum += entry.val;\n    }\n  }\n(With a list size of 20 this becomes 72 ms on the 7+ and 40 ms on the ipad)\nAnd for reference using a list instead of linked list:\n  for (int j = 0; j < repeat; j++) {\n    final copy = List.of(list);\n    for (final i in copy) {\n      if (list.contains(i)) sum += i;\n    }\n  }\nThis takes:\n37 ms with size 2 and 436 ms with size 20 on the 7+\n45 ms with size 2 and 294 ms with size 20 on the ipad",
                "createdAt": "2020-11-13T09:47:15Z"
            },
            {
                "author": "liyuqian",
                "bodyText": "Traversal over a continuous range of elements is expected to be much slower for a LinkedList compared to a List for the following reasons.\n\nA List puts adjacent items in adjacent memory. When you access a list item, the CPU L1/L2 cache will fetch adjacent memory which likely covers the next few items. Hence visiting the next item will be a CPU L1/L2 cache hit which is much faster than accessing the main memory.\nA LinkedList puts adjacent item in random locations. Accessing an item is unlikely to fetch adjacent items into CPU L1/L2 cache. Hence visiting adjacent items will be slower due to cache miss, but it has a better asymptotic complexity when items can be inserted/removed at random locations. A List takes O(N) time to do that while a LinkedList takes O(1) time to do that.\n\nOf course, one can implement a custom HybridList which links smaller continuous List together to utilize CPU L1/L2 cache for adjacent items, and limit worst case complexity by limiting the smaller List to have a constant size.\nThat may be an over-optimization unless we can prove that piece of code is actually a bottleneck in real applications. That said, I'm Ok with both the List and LinkedList approach since I haven't seen any related performance issues in real applications yet. Even the O(N^2) vs O(N) worst case complexity doesn't bother me too much as I expect N to be quite small (<10) in most cases. For example, the standard quick sort algorithm in C++ uses O(N^2) sorting algorithm instead of O(N log N) algorithm for small N.\nIn summary, if it's me, I'll just pick the one that's easiest to implement and read, until I see a performance issue in a real app.",
                "createdAt": "2020-11-13T20:19:48Z"
            }
        ],
        "commentCount": 31
    },
    {
        "number": 43735,
        "title": "Fixed onSort bug in data_table.dart",
        "author": "Ander Moran",
        "state": "CLOSED",
        "closedAt": "2020-03-13T01:20:51Z",
        "createdAt": "2019-10-29T17:25:27Z",
        "comments": [
            {
                "author": "fluttergithubbot",
                "bodyText": "It looks like this pull request may not have tests. Please make sure to add tests before merging. If you need an exemption to this rule, contact Hixie.\nReviewers: Read the Tree Hygiene page and make sure this patch meets those guidelines before LGTMing.",
                "createdAt": "2019-10-29T17:25:30Z"
            },
            {
                "author": "googlebot",
                "bodyText": "Thanks for your pull request. It looks like this may be your first contribution to a Google open source project (if not, look below for help). Before we can look at your pull request, you'll need to sign a Contributor License Agreement (CLA).\n\ud83d\udcdd Please visit https://cla.developers.google.com/ to sign.\nOnce you've signed (or fixed any issues), please reply here with @googlebot I signed it! and we'll verify it.\n\nWhat to do if you already signed the CLA\nIndividual signers\n\nIt's possible we don't have your GitHub username or you're using a different email address on your commit. Check your existing CLA data and verify that your email is set on your git commits.\n\nCorporate signers\n\nYour company has a Point of Contact who decides which employees are authorized to participate. Ask your POC to be added to the group of authorized contributors. If you don't know who your Point of Contact is, direct the Google project maintainer to go/cla#troubleshoot (Public version).\nThe email used to register you as an authorized contributor must be the email used for the Git commit. Check your existing CLA data and verify that your email is set on your git commits.\nThe email used to register you as an authorized contributor must also be attached to your GitHub account.\n\n\u2139\ufe0f Googlers: Go here for more info.",
                "createdAt": "2019-10-29T17:25:31Z"
            },
            {
                "author": "andermoran",
                "bodyText": "@Hixie do I need any tests for a change so straightforward?\ncc @willlarche",
                "createdAt": "2019-10-29T17:28:42Z"
            },
            {
                "author": "andermoran",
                "bodyText": "@googlebot I signed it!",
                "createdAt": "2019-10-29T17:30:02Z"
            },
            {
                "author": "googlebot",
                "bodyText": "CLAs look good, thanks!\n\u2139\ufe0f Googlers: Go here for more info.",
                "createdAt": "2019-10-29T17:30:07Z"
            },
            {
                "author": "HansMuller",
                "bodyText": "This appears to be a nice fix for what was probably a typo; thanks! It will definitely need a test: we don't want this issue to crop up again.\nAlso: there are some presubmit DataTable test failures.",
                "createdAt": "2019-10-30T00:50:11Z"
            },
            {
                "author": "andermoran",
                "bodyText": "@HansMuller I've never done a pull request on a public repository so I'm unsure what the next steps are to get this approved.",
                "createdAt": "2019-10-30T18:37:56Z"
            },
            {
                "author": "willlarche",
                "bodyText": "You\u2019re doing a great job!\nFind a test file that\u2019s already doing tests on these classes and add one specifically to check for your case that is being fixed.",
                "createdAt": "2019-10-30T20:59:36Z"
            },
            {
                "author": "andermoran",
                "bodyText": "What I want to test:\nIf you create a DataTable with DataColumns that have no onSort parameter, the text in the cells will not be centered with the columns and the text of the columns will be slightly misaligned because flutter thinks it needs to have space for the arrow associated with a column when the user taps on the column to sort it.\n\nMy fix corrects this (as shown below) and automatically centers the content in the column but I have not the slightest idea as to how to write a test for this.\n\nI know the test file is flutter/packages/flutter/test/material/data_table_test.dart and the test should be in the existing test\n  testWidgets('DataTable column onSort test', (WidgetTester tester) async {\n    await tester.pumpWidget(\n      MaterialApp(\n        home: Material(\n          child: DataTable(\n            columns: const <DataColumn>[\n              DataColumn(\n                label: Text('Dessert'),\n              ),\n            ],\n            rows: const <DataRow>[\n              DataRow(\n                cells: <DataCell>[\n                  DataCell(\n                    Text('Lollipop'), // wraps\n                  ),\n                ],\n              ),\n            ],\n          ),\n        ),\n      ),\n    );\n    await tester.tap(find.text('Dessert'));\n    await tester.pump();\n    expect(tester.takeException(), isNull);\n  });\nI somehow need to test the _buildHeadingCell method of DataTable to make sure that it is possible for a null value to be passed into the onSort parameter. I am unsure how to test a private method in a test file.",
                "createdAt": "2019-11-01T16:32:25Z"
            },
            {
                "author": "andermoran",
                "bodyText": "Also, how is this test\n  testWidgets('DataTable column onSort test', (WidgetTester tester) async {\n    await tester.pumpWidget(\n      MaterialApp(\n        home: Material(\n          child: DataTable(\n            columns: const <DataColumn>[\n              DataColumn(\n                label: Text('Dessert'),\n              ),\n            ],\n            rows: const <DataRow>[\n              DataRow(\n                cells: <DataCell>[\n                  DataCell(\n                    Text('Lollipop'), // wraps\n                  ),\n                ],\n              ),\n            ],\n          ),\n        ),\n      ),\n    );\n    await tester.tap(find.text('Dessert'));\n    await tester.pump();\n    expect(tester.takeException(), isNull);\n  });\ntesting onSort? There isn't even an onSort parameter passed so what exactly is this testing for?",
                "createdAt": "2019-11-01T16:42:40Z"
            },
            {
                "author": "andermoran",
                "bodyText": "Note: another bad ternary comparison argument is also present in this snipped of code in data_table.dart but I am unaware of its side effects.\n      for (DataRow row in rows) {\n        tableRows[rowIndex].children[0] = _buildCheckbox(\n          color: theme.accentColor,\n          checked: row.selected,\n          onRowTap: () => row.onSelectChanged != null ? row.onSelectChanged(!row.selected) : null ,\n          onCheckboxChanged: row.onSelectChanged,\n        );\n        rowIndex += 1;\n      }",
                "createdAt": "2019-11-01T20:16:58Z"
            },
            {
                "author": "andermoran",
                "bodyText": "@HansMuller I'm stuck here and want to get this fix implemented as soon as possible! I'm struggling on the new tests I'm supposed to create (even the existing tests don't make sense) and I need some help.",
                "createdAt": "2019-11-05T16:07:50Z"
            },
            {
                "author": "andermoran",
                "bodyText": "@HansMuller I believe this pr is ready",
                "createdAt": "2019-11-18T16:10:02Z"
            },
            {
                "author": "HansMuller",
                "bodyText": "@andermoran the PR still doesn't include a test. I'm afraid I don't have the time to help craft one at the moment, sorry about that.",
                "createdAt": "2019-11-20T20:02:47Z"
            },
            {
                "author": "andermoran",
                "bodyText": "Despite weeks of looking at several resources to figure out how to write flutter tests, I still can't get the hang of it. Will this bug fix ever be merged?",
                "createdAt": "2020-01-09T18:03:01Z"
            },
            {
                "author": "Hixie",
                "bodyText": "Might https://flutter.dev/docs/cookbook/testing/widget/introduction help?",
                "createdAt": "2020-01-10T08:32:25Z"
            },
            {
                "author": "andermoran",
                "bodyText": "@Hixie I\u2019m not sure if you\u2019re trolling me or not but I just said I\u2019ve spent weeks looking at several resources to write flutter tests but have been unable to. Yes, I have looked at the intro page as well as many other resources. I\u2019ve really tried my hardest to write these tests because I want this merge to happen badly but I\u2019ve been unable to. I\u2019ve looked at all the resources on the web about flutter testing as well as looking through flutter tests in flutter\u2019s source code to how it was done there. At this point I\u2019ve given up. I wish someone could at least write one test for this PR that I need so that I can work off that.",
                "createdAt": "2020-01-10T14:40:50Z"
            },
            {
                "author": "Hixie",
                "bodyText": "If you could file a bug that describes what you tried and how the documentation failed you, that would be great. I'm sad to hear that the current documentation was inadequate to the task.",
                "createdAt": "2020-01-11T01:05:17Z"
            },
            {
                "author": "deadsoul44",
                "bodyText": "Any update?",
                "createdAt": "2020-01-31T09:52:06Z"
            },
            {
                "author": "dkwingsmt",
                "bodyText": "@andermoran I looked into it since this is indeed an interesting PR and exposes some problems of our code coverage. I came up with a unit test as below:\n  testWidgets('DataTable column label position - no sort', (WidgetTester tester) async {\n    Widget buildTable({ int sortColumnIndex, bool sortAscending = true }) {\n      return DataTable(\n        sortColumnIndex: sortColumnIndex,\n        sortAscending: sortAscending,\n        columns: <DataColumn>[\n          const DataColumn(\n            label: Expanded(child: Center(child: Text('Name'))),\n            tooltip: 'Name',\n          ),\n          DataColumn(\n            label: const Expanded(child: Center(child: Text('Calories'))),\n            tooltip: 'Calories',\n            numeric: true,\n            onSort: (int columnIndex, bool ascending) {},\n          ),\n        ],\n        rows: const <DataRow>[\n          DataRow(\n            cells: <DataCell>[\n              DataCell(Text('A long desert name')),\n              DataCell(Text('A lot of calories')),\n            ],\n          ),\n        ]\n      );\n    }\n\n    await tester.pumpWidget(MaterialApp(\n      home: Material(child: buildTable()),\n    ));\n\n    final Finder nameText = find.text('Name');\n    expect(nameText, findsOneWidget);\n    final Finder nameRow = find.ancestor(of: find.text('Name'), matching: find.byType(Row)).first;\n    expect(tester.getCenter(nameText), equals(tester.getCenter(nameRow)));\n  });\nThis test finds the text and its immediately wrapping row, and see if they have the same center, indicating that no other padding is added. This test breaks on master and passes on your PR.\nHowever, I did find a bug (unrelated to this PR) that causes the header to disappear on mouse move, which I've filed at #51152. This bug seems to occur only when the text is not wrapped in the InkWell (which is only found out thanks to your PR), so until that issue is fixed, you'll need to wrap the header in InkWell unconditionally.\nHopefully this is a good starting point for you!",
                "createdAt": "2020-02-21T01:49:48Z"
            },
            {
                "author": "deadsoul44",
                "bodyText": "I fear @andermoran gave up due its frustration. One of team members from flutter should finalize the pull request. It has been already more than 5 months.",
                "createdAt": "2020-02-21T15:56:03Z"
            },
            {
                "author": "andermoran",
                "bodyText": "I fear @andermoran gave up due its frustration. One of team members from flutter should finalize the pull request. It has been already more than 5 months.\n\nCan confirm. Was frustrating to create a test. Did give up.",
                "createdAt": "2020-02-21T16:28:24Z"
            },
            {
                "author": "Hixie",
                "bodyText": "@dkwingsmt If the original bug was alignment issues we should probably have the test toggle the sortability (have onSort be null once, then non-null) and verify that the alignment is correct in both cases.",
                "createdAt": "2020-02-22T00:53:21Z"
            },
            {
                "author": "dkwingsmt",
                "bodyText": "@Hixie I can test that the alignment with onSort is consistent, but it's never gonna be at the center. (Although I can test that the row is centered in the cell, it's not useful since the row is supposed to fill up the cell).",
                "createdAt": "2020-02-22T01:07:53Z"
            },
            {
                "author": "deadsoul44",
                "bodyText": "I would like to have datacolumn label to be still centered even if it is sorted (up or down arrow appears on the right of the centered label). It can be annoying to see centered label moves when it is sorted.",
                "createdAt": "2020-02-22T08:03:02Z"
            },
            {
                "author": "dkwingsmt",
                "bodyText": "@deadsoul44 It's a good proposal, but let me explain the obstacle. The current structure can roughly be presented as:\ntableCell = Container(\n  child: Row(\n    children: [\n      label,  // The `label` argument of `DataColumn`\n      if (onSort != null) sortingArrow,\n    ],\n  ),\n);\nImagine the cell is 100px wide, the arrow being 10px wide and the text 40 px wide. You would expect that:\n\nIf label: Text('Cities') the text is at the left edge of the cell, i.e. [0, 40]\nIf label: Center(child: Text('Cities')) the text is at the center of the cell, [30, 70]\n\n\nThis wouldn't directly work because Row prefers the minimum size, but you can fix it by wrapping it with an Expand.\n\n\nIf label: Align(alignment: Alignment.centerRight), child: Text('Cities')) the text is at the right edge of the possible space, i.e. [50, 90]. (You'll also need Expand).\n\nApparently No. 2 wouldn't center the text in the cell with the current implementation, because the text will be at the center of the remaining space, which is [25, 65].\nAlright, what if we add a mirroring padding at the left, so that since we know the arrow is 10px wide, make the text centered within [10, 90], which is [30, 70]? Well then No. 1 would place the text at [10, 50] instead of the desired [0, 40].\nThe root cause is that DataTable have no information of its child label, and can't decide what to align its child to. I'd like to hear if you have any suggestions!",
                "createdAt": "2020-02-27T22:03:44Z"
            },
            {
                "author": "dkwingsmt",
                "bodyText": "I submitted a PR that continues this one in #51667",
                "createdAt": "2020-02-28T22:59:40Z"
            },
            {
                "author": "deadsoul44",
                "bodyText": "I understand that it is hard to align with current structure. Another option can be to add a \"labelAlignment\" argument. Depending on developer choice, the label can be right, center or left aligned. Currently, it is already assumed as right aligned if column is numeric and left aligned otherwise.",
                "createdAt": "2020-02-29T09:32:49Z"
            },
            {
                "author": "deadsoul44",
                "bodyText": "Pending reviewer for two weeks...",
                "createdAt": "2020-03-11T13:26:15Z"
            },
            {
                "author": "dkwingsmt",
                "bodyText": "This PR has been continued by #51667, which has been merged.",
                "createdAt": "2020-03-13T01:20:51Z"
            }
        ],
        "commentCount": 30
    },
    {
        "number": 28152,
        "title": "Improve hot reload performance",
        "author": "Jonah Williams",
        "state": "MERGED",
        "closedAt": "2019-03-15T22:02:46Z",
        "createdAt": "2019-02-19T17:51:13Z",
        "comments": [
            {
                "author": "Hixie",
                "bodyText": "cc @aam",
                "createdAt": "2019-02-21T01:40:37Z"
            },
            {
                "author": "Hixie",
                "bodyText": "cc @zanderso for review",
                "createdAt": "2019-02-21T01:41:03Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Looks like I'll need to test the path logic on my home windows machine",
                "createdAt": "2019-02-25T21:24:37Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "cc @aam I've added some more information on windows performance",
                "createdAt": "2019-03-02T00:32:47Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "I've also patched this in and run presubmit on it in google3: CL/236402292 all tests, including our hot reload tests are passing",
                "createdAt": "2019-03-02T01:08:02Z"
            },
            {
                "author": "aam",
                "bodyText": "Sorry, I'm not clear what timeline on Windows tells us. 480ms is spent in analyzer(which we want to get rid of in favor of deps produced by compiler), 60ms - in scanning files for changes?",
                "createdAt": "2019-03-03T06:04:45Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "almost 10 ms scanning project directory\n60 ms scanning packages\nalmost 10 ms scanning bundle entries\n90 ms scanning assets\nSo about 170 ms for a small project (flutter gallery) to diff files.",
                "createdAt": "2019-03-03T06:38:34Z"
            },
            {
                "author": "aam",
                "bodyText": "So about 170 ms for a small project (flutter gallery) to diff files.\n\nTo get timestamp, not diff content, right?. Is this number significantly different between windows and mac or linux?",
                "createdAt": "2019-03-04T16:49:52Z"
            },
            {
                "author": "aam",
                "bodyText": "What is the file watcher's latency? Is there a concern that flutter tools won't get notified in time if hot reload follows file update? IJ flutter plugin has a mode where it does automatic hot reload on every save.",
                "createdAt": "2019-03-04T16:51:26Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "To get timestamp, not diff content, right?. Is this number significantly different between windows and mac or linux?\n\nRight, no actual content is read and no File_open calls show up for this portion in the CPU profile. The execution time for the flutter_gallery is about ~90ms for mac/linux which is faster, but still significant.\n\nWhat is the file watcher's latency? Is there a concern that flutter tools won't get notified in time if hot reload follows file update? IJ flutter plugin has a mode where it does automatic hot reload on every save.\n\nI didn't notice any issues when testing locally using hot reload on save, I tested on Linux, Mac, and Windows. There was one place where I encountered an issue, the hot reload integration test which mutates a file and then calls hot reload: https://github.com/flutter/flutter/pull/28152/files#diff-ce4fde68d0bd16865c11a354197704dcR42.\nCurrently if a file were to be missed then it could be picked up on the next hot reload.",
                "createdAt": "2019-03-04T17:50:19Z"
            },
            {
                "author": "zanderso",
                "bodyText": "Currently if a file were to be missed then it could be picked up on the next hot reload.\n\nI think it's not that simple. For example, consider:\n\nThe IDE saves many files all at once.\nThe IDE issues a hot reload\n(These both percolate through the Dart VM's IO eventhandler in non-deterministic order)\nThe flutter tool receives the hot reload command before receiving every file system watcher event\nHot reload fails because of failing to read updates for files whose events haven't come in yet.\n\nAny workaround that adds delays or re-queueing messages will eventually get bitten by this race.\nOne fix could be to supply some sort of ACK to the IDE so that the IDE doesn't issue the hot reload command until getting an ACK for each file that it has saved recently.",
                "createdAt": "2019-03-05T17:51:30Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "One fix could be to supply some sort of ACK to the IDE so that the IDE doesn't issue the hot reload command until getting an ACK for each file that it has saved recently.\n\nWe could also have the daemon protocol provide the list of changed files itself. So in this case, save multiple files and hot reload, the updated files are sent along with the daemon request? We can leave the watchers for non-daemon workflows or editors which don't support that portion.\ncc @devoncarew",
                "createdAt": "2019-03-05T20:51:33Z"
            },
            {
                "author": "devoncarew",
                "bodyText": "I agree w/ the race condition logic in #28152 (comment).\nIs it feasible to re-scan the filesystem for changes when flutter_tools receives a reload/restart request? By the time the IDEs send that request, they've already saved any dirty files.",
                "createdAt": "2019-03-05T21:09:13Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Adding some numbers so that we're aware of the context here:\nVSCode:\nFileWatch notification: 1551824700858\nHot Reload started: 1551824701059\nAbout 200 ms of latency\nIntellij:\nFileWatch notification: 1551825011092\nHot Reload started: 1551825011202\nAbout 110 ms of latency\n\nIs it feasible to re-scan the filesystem for changes when flutter_tools receives a reload/restart request?\n\nWe can, the problem is that it is slow, especially on windows. A single library invalidation hot reload on a windows emulators with this change takes 180 ms. Scanning the flutter gallery and dependencies (a fairly small application) takes about 170 ms, or about as much time as the hot reload itself.\n\nHot reload fails because of failing to read updates for files whose events haven't come in yet.\n\nI haven't been able to reproduce a case where this error is triggered. I am not sure if the frontend server can allow it.",
                "createdAt": "2019-03-05T22:35:38Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "I think I have an idea to drive this forward.\n\nWe re-instate file stat for diffing the workspace and packages\n\nWe always skip file stat on packages in the pub-cache. Updating a package means changing the directory and the pub cache is shared across all apps, so changing the files there is unsafe.\nThat should still improve performance somewhat, since a noticeable chunk of the file stat was in the dependencies.\n\nFor build_runner based workflows with code generation, we augment the daemon protocol to also return a list of additional files produced during the build. This would allow us to skip file stat in the .dart_tool build cache, which could potentially contain thousands of stale or intermediary artifacts.\n\n@zanderso @aam WDUT?",
                "createdAt": "2019-03-06T04:53:42Z"
            },
            {
                "author": "aam",
                "bodyText": "We always skip file stat on packages in the pub-cache. Updating a package means changing the directory and the pub cache is shared across all apps, so changing the files there is unsafe.\n\nWhat about the case when you do pub upgrade(independently from ongoing debugging session) which updates pub-cache contents? You do want for hot reload compiler to pick up updated packages in that case, do you?",
                "createdAt": "2019-03-06T16:44:47Z"
            },
            {
                "author": "aam",
                "bodyText": "Ah, I guess pub upgrade won't update existing versions of the packages, can only download new ones.\nI know me myself in the past have been editing sources in pubcache location - sometimes that is very convenient quick way to experiment with changes in some packages.",
                "createdAt": "2019-03-06T16:57:29Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "It is definitely something I have done as well, but I think supporting it with hot reload is an edge case. pub itself also has no idea that you might have changed something in the cache, so the modified files are left around until that directory is manually deleted or reverted.",
                "createdAt": "2019-03-06T18:23:41Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "I've updated the code to use file stat tracking instead of watching, with some additional restrictions:\nWe only traverse the lib directory of all projects and we only track .dart files. This appears to be considerably faster than our previous approach, since I believe there were some additional inefficiencies in tracking the \"device URI\" which is currently unused.",
                "createdAt": "2019-03-06T20:52:37Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Oh, and we do not traverse directories which are under a .pub_cache directory",
                "createdAt": "2019-03-06T20:53:06Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "This actually seems to regress gallery hot reload timing.",
                "createdAt": "2019-03-06T20:55:38Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Ahh nevermind, in this case changing a common widget like text for the flutter gallery invalidates a huge number of libraries and the resulting reload is much slower. We're still a bit faster with this change\nw/ Change\nPerforming hot reload...                                                                                     \nReloaded 291 of 577 libraries in 2,230ms.\n\nHEAD\nPerforming hot reload...                                                \nReloaded 0 of 577 libraries in 667ms.\n\nPerforming hot reload...\nReloaded 291 of 577 libraries in 3,465ms.",
                "createdAt": "2019-03-06T20:58:31Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "Ahh, back to debugging windows at home :)",
                "createdAt": "2019-03-07T00:36:19Z"
            },
            {
                "author": "aam",
                "bodyText": "I've updated the code to use file stat tracking instead of watching, with some additional restrictions:\n\nNow that we again do file stat why not do file stat only for the files that are actually used by the compiler?",
                "createdAt": "2019-03-07T00:48:35Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "That sounds like the best approach, but we'll need to augment the frontend_server to keep us updated. I think that should be landed separately as an optimization to this approach.",
                "createdAt": "2019-03-07T01:34:02Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "I've added additional logic to filter out dev_dependencies as well. With the change to use file stat we've regressed windows improvement to about 275 ms from the previous 180 ms. This is still significantly better than the current performance\nPerforming hot reload...\nReloaded 0 of 577 libraries in 299ms.\n\nPerforming hot reload...\nReloaded 0 of 577 libraries in 265ms.\n\nPerforming hot reload...\nReloaded 0 of 577 libraries in 270ms.\n\nPerforming hot reload...\nReloaded 0 of 577 libraries in 254ms.",
                "createdAt": "2019-03-07T04:57:36Z"
            },
            {
                "author": "aam",
                "bodyText": "That sounds like the best approach, but we'll need to augment the frontend_server to keep us updated. I think that should be landed separately as an optimization to this approach.\n\nIf we want we don't have to regress to directory watching as I think the change to frontend_server is pretty straightforward and can be landed before this cl(first https://dart-review.googlesource.com/c/sdk/+/95920, then #29004).",
                "createdAt": "2019-03-07T18:47:32Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "If we want we don't have to regress to directory watching as I think the change to frontend_server is pretty straightforward and can be landed before this cl(first https://dart-review.googlesource.com/c/sdk/+/95920, then #29004).\n\nI though we agreed this should be landable without the frontend server updates?",
                "createdAt": "2019-03-08T22:23:30Z"
            },
            {
                "author": "aam",
                "bodyText": "If we want we don't have to regress to directory watching as I think the change to frontend_server is pretty straightforward and can be landed before this cl(first https://dart-review.googlesource.com/c/sdk/+/95920, then #29004).\n\nI though we agreed this should be landable without the frontend server updates?\n\nNot sure. I thought last conversation on this was before we realized we do need to stat files, can't rely on watching directories, no?",
                "createdAt": "2019-03-08T22:33:43Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "I think how we detect which files are changed is unrelated to any additional subsetting we do.",
                "createdAt": "2019-03-08T23:01:29Z"
            },
            {
                "author": "jonahwilliams",
                "bodyText": "We should still be able to update existing packages though, will update the PR.\nEDIT: same issue as adding a new package",
                "createdAt": "2019-03-12T21:51:03Z"
            }
        ],
        "commentCount": 31
    },
    {
        "number": 16705,
        "title": "Add support for listing and launching emulators",
        "author": "Danny Tuppeny",
        "state": "MERGED",
        "closedAt": "2018-05-09T15:04:01Z",
        "createdAt": "2018-04-18T10:06:59Z",
        "comments": [
            {
                "author": "DanTup",
                "bodyText": "@devoncarew @mit-mit I've been working through the Android Studio code to see how it gets more info about AVDs and it seems that it doesn't just shell out to emulator as I am, it basically parses the AVD ini files itself, finding the location like:\n    public static String getAvdFolder() throws AndroidLocationException {\n        if (sAvdLocation == null) {\n            String home = findValidPath(Global.ANDROID_AVD_HOME);\n            if (home == null) {\n                home = getFolder() + FOLDER_AVD;\n            }\n            sAvdLocation = home;\n            if (!sAvdLocation.endsWith(File.separator)) {\n                sAvdLocation += File.separator;\n            }\n        }\n        return sAvdLocation;\n    }\nDo we want to copy this? Without it, I think we could only display the IDs so I think we do, but it's a big step from just parsing the output of emulator as we need to start coding in fairly specific knowledge about how emulator etc. works (I don't know if it's likely to change, but it's a risk).",
                "createdAt": "2018-04-18T10:10:30Z"
            },
            {
                "author": "mit-mit",
                "bodyText": "Yes, we would very much like to show the AVD names, this is #11850",
                "createdAt": "2018-04-18T10:25:49Z"
            },
            {
                "author": "DanTup",
                "bodyText": "Yes, we would very much like to show the AVD names, this is #11850\n\nThat might be the opposite problem - that's getting the AVD names from a running device, whereas this is about getting more info on the AVDs. Matching up a connected device to an AVD ini on disk might be more complicated (I might have a better idea once I've done dug into the ini files for the AVD side).",
                "createdAt": "2018-04-18T10:44:59Z"
            },
            {
                "author": "DanTup",
                "bodyText": "The IDs in flutter devices seem totally different - I'm not sure if we can match them up (I presume the info that flutter devices is getting is runtime info from the device, whereas the AVD info is all just metadata and user-defined names?).",
                "createdAt": "2018-04-18T14:12:00Z"
            },
            {
                "author": "DanTup",
                "bodyText": "@devoncarew @mit-mit It might not be bullet proof yet, but this generally works for listing and launching Android and iOS emulators on my Mac and Windows now:\n\nI've added some basic tests for the emulator classes (sorta copied from the equiv with devices) and the ini parsing; I don't know if we could easily have end-to-end tests here (do our CIs have Android SDKs and AVDs we could use without having to mock the files on disk etc.?).\nFeedback appreciated!",
                "createdAt": "2018-04-18T16:10:11Z"
            },
            {
                "author": "mit-mit",
                "bodyText": "Can you share a screenshot of what you have in the Android Studio emulator dialog for comparison?",
                "createdAt": "2018-04-18T16:12:17Z"
            },
            {
                "author": "DanTup",
                "bodyText": "@mit-mit Here's devices/emulators/Android Studio:\n\nWe have access to the info that Android Studio has (from the ini), but neither of them seem to match the name that we get from flutter devices from a running device (\"Android SDK built for x86\"/\"emulator-5554\").\nThough now I'm wondering what happens if I clone an AVD and then boot both copies - what would flutter devices report them as if that name/ID is buried inside the image?",
                "createdAt": "2018-04-18T16:23:59Z"
            },
            {
                "author": "devoncarew",
                "bodyText": "it basically parses the AVD ini files itself, finding the location like\n\nDo you have a sense for how stable that is, Android SDK release to release? That's less of a stable API surface area than the emulator command.\n\ndo our CIs have Android SDKs and AVDs we could use without having to mock the files on disk etc\n\nOur devicelabs bots very likely do.",
                "createdAt": "2018-04-19T05:26:01Z"
            },
            {
                "author": "DanTup",
                "bodyText": "Do you have a sense for how stable that is, Android SDK release to release? That's less of a stable API surface area than the emulator command.\n\nNot really. I'd guess they're relatively stable since there are many tools (and versions of tools) that read them, but it is a risk. I do believe I handle when we can't find the AVD folder (displaying a message) or the config/ini but I don't know if there are any options besides not having the extra info or taking this risk.\nFWIW, the original hope was that the names would match up with flutter devices and they don't, so we're really just getting a prettier display name and some other info (we can see screen res, memory, etc.) we could display. If we don't think it's worth it, we can remove this (though we'd just have IDs like Nexus_5X_x64_API_27 which may be a little unfriendly).\n\nOur devicelabs bots very likely do.\n\nAre they likely to have a consistent environment all with the same AVDs set up? I don't think I can check this without merging test code into master and logging it. Even they do, maybe it'd make things a little fragile - maybe it'd be better once we add create to add tests here, so we can create them, make sure they're listed, maybe even launch them.",
                "createdAt": "2018-04-19T07:07:40Z"
            },
            {
                "author": "DanTup",
                "bodyText": "@devoncarew Thanks! I think I've addressed all the comments except:\n\nIssues with awaiting the launch of emulator\nUse of yield in getEmulatorsMatching\n\nAnd the above comments about integration tests.",
                "createdAt": "2018-04-19T08:10:40Z"
            },
            {
                "author": "mit-mit",
                "bodyText": "@DanTup I have no idea how it does it, but when you hit Run in Android Studio and get prompted to select a target, it does seem to be able to list the running device with the same information/IDs as in the AVD dialog:",
                "createdAt": "2018-04-19T09:07:47Z"
            },
            {
                "author": "mit-mit",
                "bodyText": "For now, I'm using the term emulators to refer to these (these being AVDs in the case of Android and \"the simulator\" for iOS), but this can easily be changed.\n\nI wonder if it would be better to just include these in flutter devices, e.g.:\n$ flutter devices\n2 connected, running devices:\n\nAndroid SDK built for x86 \u2022 emulator-5554                        \u2022 android-x86 \u2022 Android 8.0.0 (API 26) (emulator)\niPhone X                  \u2022 6545ED50-3F15-479F-937E-CB0851E43D57 \u2022 ios         \u2022 iOS 11.3 (simulator)\n\n1 stopped emulator (use flutter devices --start <ID> to start):\n\nNexus 5X \u2022 emulator-5556                        \u2022 android-x86 \u2022 Android 8.0.0 (API 26) (emulator)",
                "createdAt": "2018-04-19T09:13:55Z"
            },
            {
                "author": "DanTup",
                "bodyText": "it does seem to be able to list the running device with the same information/IDs as in the AVD dialog\n\nOh yeah, that does look promising - I didn't realise it was categorising the online ones (I didn't see that dialog). I've got the code checked out, so I'll dig through and see what they're doing :-)\n\nI wonder if it would be better to just include these in flutter devices, e.g.:\n\nPossibly - it was one of the options in the doc. One of the things that put us off was not being able to tie them together (which based on the above may have been misguided), which would've resulted in the same things appearing both as online devices and offline. Let me dig into this and see what I can do, and if we can tie them together we can discuss again (I don't have strong opinions as long as we don't confuse the user with the same device listed twice with different names).",
                "createdAt": "2018-04-19T10:38:45Z"
            },
            {
                "author": "DanTup",
                "bodyText": "Ok, I managed to find this (sorry for screenshot, not sure where I can link to this code online):\n\nIt seems that when a device is running, it has a command called avd which can be run to get the name (avd name). So I don't think we can get the emulator name from the ACD, however I think in flutter devices we may be able to do the opposite.\nI'm not sure if flutter devices already has the necessary plumbing to execute commands like this on the device (I'd guess so?). I'll do some digging after lunch and maybe discuss with @devoncarew during our call later.",
                "createdAt": "2018-04-19T12:00:30Z"
            },
            {
                "author": "DanTup",
                "bodyText": "@mit-mit How did you get that dialog? When I hit Run in AS with no emulators running, I get an error saying I must connect a device. If I have one running, it just launches on that directly. I'm not sure how to get the dialogs you showed?\nI can find a few references online to the avd name command being available if you connect to the device, but it doesn't seem to work for me (suggests there's no avd command - so I'm curious whether the dialog you showed would work on my image).",
                "createdAt": "2018-04-19T13:08:36Z"
            },
            {
                "author": "mit-mit",
                "bodyText": "There is a setting for this in the Launch Configuration. Make sure Target is set to 'Open Select Deployment Target Dialog'.",
                "createdAt": "2018-04-19T13:11:21Z"
            },
            {
                "author": "DanTup",
                "bodyText": "Strange, I seem to have that set:\n\nYet clicking Run or Debug gives this:\n\nIf I start the emulator first, then the drop-down at the top changes to show it and then it always launches on that device. You're launching be pressing the Play/Debug buttons on the toolbar, right?\nIs there a way to open the \"Select deployment target\" dialog without clicking run?",
                "createdAt": "2018-04-19T13:16:15Z"
            },
            {
                "author": "DanTup",
                "bodyText": "Actually, it's \"Android App\" where I have that set, there is no similar setting in Flutter:\n\n\nThis is all unfamiliar to me, can you confirm where it is you have that set?",
                "createdAt": "2018-04-19T13:18:48Z"
            },
            {
                "author": "mit-mit",
                "bodyText": "We don't have this for Flutter; I was describing it on a regular Android project. And, yes you need one or more running devices for the dialog to trigger.",
                "createdAt": "2018-04-19T13:23:42Z"
            },
            {
                "author": "DanTup",
                "bodyText": "Aha, gotcha! Got it working now, and it is indeed working as you described. I'll see if I can figure out how it's matching these up. Thanks!",
                "createdAt": "2018-04-19T13:27:48Z"
            },
            {
                "author": "DanTup",
                "bodyText": "Ok, got it:\ndantup-macbookpro:inetutils-1.9 dantup$ flutter emulators --start danny\ndantup-macbookpro:inetutils-1.9 dantup$ adb devices\nList of devices attached\nemulator-5554\tdevice\n\ndantup-macbookpro:inetutils-1.9 dantup$ telnet/telnet localhost 5554\nConnected to localhost.\nEscape character is '^]'.\nAndroid Console: Authentication required\nAndroid Console: type 'auth <auth_token>' to authenticate\nAndroid Console: you can find your <auth_token> in \n'/Users/dantup/.emulator_console_auth_token'\nOK\navd name\nDanny_Nexus\nOK\n\nI can't find a way to get this through adb shell, seems to be a special command that works over telnet. So I think whenever flutter devices polls, we will need to open a telnet connection, run avd name and then close the connection. I don't know how much more expensive this'll make it but it'll mean we could subtract these names from the list of AVDs and then add what's left to the end of the devices list and allow a user to launch them.",
                "createdAt": "2018-04-19T13:47:18Z"
            },
            {
                "author": "DanTup",
                "bodyText": "@devoncarew @mit-mit\nI created a branch of this code and implemented showing the AVD name in flutter devices (I don't think we want this, it was just an easy place to put it to show it's working so we can review the Code to see whether we want to be connecting to devices like this):\nDanTup@5cab59c\n\nDanny_Nexus is the AVD name for this emulator.\nWith this, we could extend flutter devices to fetch the list of AVDs (as we currently have in emulators), remove those where a running device has that AVD name and then show those items on the end of the list as offline.\nIt does mean making the devices command/classes more complicated and blurs these emulator images with devices; however to the end user this might make more sense.\nLMK what you think, or we can discuss next week if easier on VC.",
                "createdAt": "2018-04-19T16:02:36Z"
            },
            {
                "author": "devoncarew",
                "bodyText": "Taking a look at this again (and, sorry for the long delay!).\nI have two comments on the UX, and will take a spin through the code after:\nI'd like to keep lists of emulators out of the output of flutter devices. I don't have any super defensible reasons for this, but like the separation. Instead, if no devices are found in flutter devices, we should change our ending message in flutter devices from:\nIf you expected your device to be detected, please run \"flutter doctor\" to diagnose\npotential issues, or visit https://flutter.io/setup/ for troubleshooting tips.\n\nto something like:\nRun 'flutter emulators' to list and start any available device emulators.\n\nOr, if you expected a device to be detected, run \"flutter doctor\" to diagnose\npotential issues or visit https://flutter.io/setup/ for troubleshooting tips.\n\nThe other UI think is that we could consider a different name for --start; perhaps --launch? --run might be conflated with actually starting an app.",
                "createdAt": "2018-05-03T14:00:41Z"
            },
            {
                "author": "DanTup",
                "bodyText": "@devoncarew\n\ncan you clarify re: 'Issues with awaiting the launch of emulator' - I didn't find the reference in the PR\n\nCurrently emulator.dart declares launch as returning void, but the overrides return Futures. If we change it to Future and then await it, then flutter emulators --launch x will await the completion of that process (wait until the user closes it).\nIf I don't await the process in the launch method, then I can't check the exit code. So, I guess I need to wait a short period (a second?) and if the process is still running, then assume it's a running emulator and not wait for it (we want to return the user to a terminal). I can't just fire-and-forget from the start because if it fails we'll give the user no indication of what it didn't launch (eg. not route the stderr to them).",
                "createdAt": "2018-05-03T15:39:56Z"
            },
            {
                "author": "DanTup",
                "bodyText": "I think I've addressed all the comments; and I've updated the checklist at the top with the things I think are remaining.\n@yjbanov Do you know whether the device lab machines all have a common AVD we could use in tests? (If not, we might need to implement --create before we can add automated tests).\n@devoncarew Should we support flutter-tester here? With the flag, we could list it and allow launching it; not sure if there's much value though.",
                "createdAt": "2018-05-03T16:21:18Z"
            },
            {
                "author": "devoncarew",
                "bodyText": "If I don't await the process in the launch method, then I can't check the exit code. So, I guess I need to wait a short period (a second?) and if the process is still running, then assume it's a running emulator and not wait for it (we want to return the user to a terminal). I can't just fire-and-forget from the start because if it fails we'll give the user no indication of what it didn't launch (eg. not route the stderr to them).\n\nAh, gotcha. There's no signal to indicate a successful launch.\n\nShould we support flutter-tester here?\n\nI'm not sure it helps, but haven't thought about it.\nlgtm w/ the logic to check for an unsuccessful launch (that takes a few seconds to determine).",
                "createdAt": "2018-05-04T18:07:58Z"
            },
            {
                "author": "DanTup",
                "bodyText": "I'm not sure it helps, but haven't thought about it.\n\nI was thinking if flutter-tester was listed and launchable, it might give us a way to have some tests that don't don't can run outside of devicelab and don't require some specific setup on devicelab. However, it occurs to me now that flutter devices includes the test device when passed the flag always; it doesn't list it only when it's running (since it doesn't really run like a normal device that can be connected to).\nAnyway, I've pushed a change to add the missing awaits and to automatically return from AndroidEmulator.launch() after 3 seconds if the process is still running.\nThere are two outstanding issues at the top; one is about Simulator location - I think we should probably just remove the TODO and assume the path is always this. If it's not, the worst to happen is that the simulator won't appear in the devices list.\nThe other one is about tests. I think the options are:\n\nLeave them until we've done --create and then create devicelab tests that create, list, launch, verify launch\nEnsure devicelab has some consistent AVDs (and iOS Simulator?) we can use\n\nIf we're going to do 1, it'd be good to have someone else check the code out and have a little test for sanity. LMK what you think!",
                "createdAt": "2018-05-07T09:54:02Z"
            },
            {
                "author": "devoncarew",
                "bodyText": "I patched it in locally and gave it a spin:\n\nIt looks great! We may want to tweak two things:\nAbove, there's a trailing bullet for the ios simulator. If no label for an emulator (like for simulators), we could not print the last bullet.\nAfter printing the emulators description, we should give the user an indication for how to run one. So, if one or more emulators are found, print To run an emulator, run 'flutter emulator --launch=<emulator id> or similar.",
                "createdAt": "2018-05-09T06:27:14Z"
            },
            {
                "author": "DanTup",
                "bodyText": "If no label for an emulator (like for simulators), we could not print the last bullet.\n\nDone!\n\nAfter printing the emulators description, we should give the user an indication for how to run one.\n\nDone!\n\nflutter emulator --launch\n\nThe command is actually emulators but I've added an alias since emulator feels more natural to type with --launch or --create, but I've used emulators (the way it's written in the help output) in the text.",
                "createdAt": "2018-05-09T07:10:58Z"
            },
            {
                "author": "DanTup",
                "bodyText": "I've pushed some changes; I think this covers all comments and outstanding issues with the exception of integration tests. @devoncarew lmk if you're happy enough with it to land as-is and put tests in once we have creation.\nI'll give it a quick run on Windows again shortly with the latest changes too.",
                "createdAt": "2018-05-09T07:13:39Z"
            },
            {
                "author": "devoncarew",
                "bodyText": "\ud83d\udc4d lgtm",
                "createdAt": "2018-05-09T13:33:04Z"
            }
        ],
        "commentCount": 31
    },
    {
        "number": 99731,
        "title": "[Material] Create an InkSparkle splash effect that matches the Material 3 ripple effect",
        "author": "Anthony",
        "state": "MERGED",
        "closedAt": "2022-03-09T23:13:47Z",
        "createdAt": "2022-03-08T02:50:33Z",
        "comments": [
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 1 new digest(s) on patchset 3.\nView them at https://flutter-gold.skia.org/cl/github/99731",
                "createdAt": "2022-03-08T07:48:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 3 new digest(s) on patchset 6.\nView them at https://flutter-gold.skia.org/cl/github/99731",
                "createdAt": "2022-03-08T16:33:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 3 new digest(s) on patchset 7.\nView them at https://flutter-gold.skia.org/cl/github/99731",
                "createdAt": "2022-03-08T17:08:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 2 new digest(s) on patchset 8.\nView them at https://flutter-gold.skia.org/cl/github/99731",
                "createdAt": "2022-03-08T20:03:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 20 new digest(s) on patchset 9.\nView them at https://flutter-gold.skia.org/cl/github/99731",
                "createdAt": "2022-03-08T20:13:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 15 new digest(s) on patchset 10.\nView them at https://flutter-gold.skia.org/cl/github/99731",
                "createdAt": "2022-03-08T20:38:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 7 new digest(s) on patchset 11.\nView them at https://flutter-gold.skia.org/cl/github/99731",
                "createdAt": "2022-03-08T21:08:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 12 new digest(s) on patchset 12.\nView them at https://flutter-gold.skia.org/cl/github/99731",
                "createdAt": "2022-03-08T22:03:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 14 new digest(s) on patchset 13.\nView them at https://flutter-gold.skia.org/cl/github/99731",
                "createdAt": "2022-03-08T22:43:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 12 new digest(s) on patchset 14.\nView them at https://flutter-gold.skia.org/cl/github/99731",
                "createdAt": "2022-03-08T23:38:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 1 new digest(s) on patchset 16.\nView them at https://flutter-gold.skia.org/cl/github/99731",
                "createdAt": "2022-03-08T23:53:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 1 new digest(s) on patchset 17.\nView them at https://flutter-gold.skia.org/cl/github/99731",
                "createdAt": "2022-03-09T00:03:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 12 new digest(s) on patchset 18.\nView them at https://flutter-gold.skia.org/cl/github/99731",
                "createdAt": "2022-03-09T00:23:06Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 12 new digest(s) on patchset 19.\nView them at https://flutter-gold.skia.org/cl/github/99731",
                "createdAt": "2022-03-09T02:03:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 24 new digest(s) on patchset 20.\nView them at https://flutter-gold.skia.org/cl/github/99731",
                "createdAt": "2022-03-09T02:43:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 12 new digest(s) on patchset 24.\nView them at https://flutter-gold.skia.org/cl/github/99731",
                "createdAt": "2022-03-09T09:53:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 24 new digest(s) on patchset 25.\nView them at https://flutter-gold.skia.org/cl/github/99731",
                "createdAt": "2022-03-09T09:58:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 24 new digest(s) on patchset 29.\nView them at https://flutter-gold.skia.org/cl/github/99731",
                "createdAt": "2022-03-09T10:48:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 36 new digest(s) on patchset 30.\nView them at https://flutter-gold.skia.org/cl/github/99731",
                "createdAt": "2022-03-09T10:53:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 3 new digest(s) on patchset 32.\nView them at https://flutter-gold.skia.org/cl/github/99731",
                "createdAt": "2022-03-09T18:23:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 1 new digest(s) on patchset 33.\nView them at https://flutter-gold.skia.org/cl/github/99731",
                "createdAt": "2022-03-09T18:28:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 3 new digest(s) on patchset 34.\nView them at https://flutter-gold.skia.org/cl/github/99731",
                "createdAt": "2022-03-09T18:38:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 3 new digest(s) on patchset 36.\nView them at https://flutter-gold.skia.org/cl/github/99731",
                "createdAt": "2022-03-09T19:28:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 1 new digest(s) on patchset 37.\nView them at https://flutter-gold.skia.org/cl/github/99731",
                "createdAt": "2022-03-09T19:53:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 1 new digest(s) on patchset 38.\nView them at https://flutter-gold.skia.org/cl/github/99731",
                "createdAt": "2022-03-09T20:08:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 1 new digest(s) on patchset 39.\nView them at https://flutter-gold.skia.org/cl/github/99731",
                "createdAt": "2022-03-09T21:18:05Z"
            },
            {
                "author": "skia-gold",
                "bodyText": "Gold has detected about 24 new digest(s) on patchset 40.\nView them at https://flutter-gold.skia.org/cl/github/99731",
                "createdAt": "2022-03-09T22:08:05Z"
            },
            {
                "author": "zanderso",
                "bodyText": "Sorry if I'm missing this somewhere, but since @goderbauer made comments, the usual practice would have been to wait for an lgtm from him before landing.",
                "createdAt": "2022-03-09T23:21:23Z"
            },
            {
                "author": "goderbauer",
                "bodyText": "@zanderso We synced over chat. It's all good.",
                "createdAt": "2022-03-09T23:22:56Z"
            }
        ],
        "commentCount": 29
    }
]